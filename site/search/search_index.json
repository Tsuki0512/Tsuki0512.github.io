{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6b22\u8fce\u6765\u5230\u6211\u7684\u4e3b\u9875","text":"<p>\u6211\u662f\u6d59\u6c5f\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u4e13\u4e1a22\u7ea7\u672c\u79d1\u751f\uff0c\u4f1a\u5728\u8fd9\u91cc\u4e0d\u5b9a\u671f\u66f4\u65b0\u4e00\u4e9b\u8bfe\u7a0b\u7b14\u8bb0\u3001\u6280\u672f\u79ef\u7d2f\u548c\u8bfe\u7a0b\u5fc3\u5f97\uff01</p> <p>\u6ce8\uff1a\u7531\u4e8e\u5927\u4e00\u7684\u65f6\u5019\u5f88\u591a\u7b14\u8bb0\u90fd\u662f\u4ee5\u624b\u5199/\u601d\u7ef4\u5bfc\u56fe\u7684\u65b9\u5f0f\u6574\u7406\u7684\uff0c\u6240\u4ee5\u5728\u4e00\u4e9b\u6570\u7406\u57fa\u7840\u8bfe\u7a0b\u4e2d\u4ee5pdf\u94fe\u63a5\u7684\u5f62\u5f0f\u4e0a\u4f20\u4e86\u6211\u7684\u8d44\u6599\uff0c\u5927\u5bb6\u53ef\u4ee5\u6839\u636e\u9700\u8981\u5355\u51fb\u94fe\u63a5\u4e0b\u8f7d~</p> <p>\u5e0c\u671b\u5bf9\u770b\u5230\u8fd9\u91cc\u7684\u4f60\u6709\u5e2e\u52a9~\u4e5f\u6b22\u8fce\u5927\u5bb6\u4e00\u8d77\u4ea4\u6d41\uff01</p> <p>\u670b\u53cb\u4eec\uff01</p> <p> \u534e\u96f6\u7684blog \\ykgg/\\ykgg/\\ykgg/ slx's notebook \\lxjj/\\lxjj/\\lxjj/ memset0 \u5f88\u725b\u7684\u5b66\u5f1f </p> <p>\u8fd8\u6ca1\u60f3\u597d\u653e\u4ec0\u4e48\uff0c\u8981\u4e0d\u7ed9\u5927\u5bb6\u6b23\u8d4f\u4e00\u4e0b\u6211\u7684\u8001\u516c\u4eec\u5427</p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/","title":"\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790","text":"<p>\u8be6\u7ec6\u7684\u8bfe\u5802\u7b14\u8bb0\u5982\u4e0b\uff1a\uff08\u5355\u51fb\u94fe\u63a5\u5373\u53ef\u4e0b\u8f7d\uff09 1.Trees 2.B+Tree 3.Heaps+\u524d\u534a\u5b66\u671f\u7b97\u6cd5\u5206\u6790\u90e8\u5206 4.\u540e\u534a\u5b66\u671f\u7b14\u8bb0</p> <p>\u4ee5\u4e0b\u662f\u6211\u505a\u7684\u4e00\u4e9b\u671f\u4e2d/\u671f\u672b\u68b3\u7406\uff1a</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#_2","title":"\u671f\u4e2d\u524d\u5185\u5bb9\u68b3\u7406","text":"<p>\u53c2\u8003\u8d44\u6599\uff1a\u6bdb\u5b87\u5c18\u8001\u5e082023\u667a\u4e91\u3001ads\u8bfe\u7a0b\u7ec4ppt\u3001\u738b\u707f\u8001\u5e08\u96be\u70b9\u5206\u6790\uff0c\u671f\u4e2d\u590d\u4e60\u53ef\u4ee5\u76f4\u63a5\u770b\u8fd9\u90e8\u5206</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#0","title":"0 \u6574\u4f53\u5185\u5bb9\u68b3\u7406","text":"<p>\u622a\u81f3\u671f\u4e2d\uff0c\u672c\u8bfe\u7a0b\u5185\u5bb9\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u5757\uff1a</p> <ol> <li>Trees:<ul> <li>AVL Tree</li> <li>Splay Tree</li> <li>B+ Tree</li> <li>Red-black Tree</li> </ul> </li> <li>Heaps:<ul> <li>Leftist Heap</li> <li>Skew Heap</li> <li>Binomial Queue</li> </ul> </li> <li>Inverted File Index</li> <li>\u7b97\u6cd5\u5206\u6790\uff1a<ul> <li>Backtracking</li> <li>Divide and Conquer</li> <li>Dynamic Programming</li> </ul> </li> <li>Amortized Analysis</li> </ol> <p>\u5176\u4e2d\uff0c\u6839\u636e\u5386\u5e74\u5377\uff0c\u6811\u548c\u5806\u5728\u9009\u62e9\u548c\u7a0b\u5e8f\u586b\u7a7a\u9898\u91cc\u9762\u51fa\u73b0\u9891\u7387\u6bd4\u8f83\u9ad8\uff0c\u8fd8\u662f\u9700\u8981\u660e\u767d\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u662f\u600e\u4e48\u8fdb\u884c\u7684\u3002</p> <p>\u4e00\u822c\u96be\u70b9\u4f1a\u653e\u5728\u5747\u644a\u5206\u6790\u548c\u4e00\u4e9b\u6bd4\u8f83\u6a21\u7cca\u7684\u70b9\uff0c\u4e0d\u8fc7\u6a21\u7cca\u7684\u8bdd\u5c31\u4ece\u6570\u636e\u7ed3\u6784\u7684\u6027\u8d28\u5165\u624b\u89e3\u9898\uff0c\u4e0d\u8981\u592a\u8f83\u771f\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#1-trees","title":"1 Trees","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#11-avl-tree","title":"1.1 AVL Tree","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#111","title":"1.1.1 \u5b9a\u4e49","text":"<p>balanced binary search tree</p> <p>balance: \u5bf9\u4e8e\u6811\u7684\u4efb\u610f\u8282\u70b9\\(u\\)\uff0c\u5176\u5de6\u5b50\u6811\u7684\u9ad8\u5ea6\\(h_L\\)\u548c\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\\(h_R\\)\u6ee1\u8db3\u6761\u4ef6\uff1a\\(|h_L-h_R|\u22641\\)</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#112","title":"1.1.2 \u6027\u8d28","text":"<p>LEMMA: A balanced binary tree with \\(N\\) nodes must have a height of \\(O(logN)\\)</p> <p>\u8bc1\u660e\u601d\u8def\uff1a\u56fa\u5b9a\u9ad8\u5ea6\uff0c\u5199\u51fa\u6700\u5c11\u8282\u70b9\u60c5\u51b5\u7684\u9012\u63a8\u5f0f\uff0c\u7c7b\u6590\u6ce2\u90a3\u5951\u9012\u63a8\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#113","title":"1.1.3 \u64cd\u4f5c\u4e0e\u7ef4\u62a4","text":"<p>\u4e00\u8fb9\u64cd\u4f5c\u4e00\u8fb9\u7ef4\u62a4\u5e73\u8861\u7684\u6027\u8d28\uff0c\u6811\u7684\u9ad8\u5ea6\u548c\u7ef4\u62a4\u4ee3\u4ef7\u90fd\u662f\\(O(logN)\\)\u6570\u91cf\u7ea7\u7684\u3002</p> <p>\u9996\u5148\uff0c\u7ef4\u62a4\u90fd\u662f\u57fa\u4e8e\u65cb\u8f6c\u8fd9\u4e2a\u64cd\u4f5c\u7684\uff1a</p> <ul> <li>left rotation &amp; right rotation \u5177\u4f53\u8fc7\u7a0b</li> </ul> <p></p> <ul> <li>\u4e00\u6b21\u53ea\u9700\u65393\u4e2a\u6307\u9488\uff0c\\(O(1)\\)\u590d\u6742\u5ea6</li> </ul> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u63d2\u5165\u64cd\u4f5c\uff1a</p> <ul> <li>\u6839\u636e\u63d2\u5165\u540e\u7684\u4e0d\u5e73\u8861\u60c5\u51b5\u6211\u4eec\u5206\u4e3a4\u4e2acase\uff0c\u5176\u4e2d\u53e6\u5916\u4e24\u79cd\u60c5\u51b5\u76f4\u63a5\u5bf9\u79f0\u7c7b\u6bd4\u5373\u53ef\u3002\u4e3b\u8981\u8fd8\u662f\u8981\u627e\u5230\u5931\u8861\u7684\u90a3\u4e2a\u8282\u70b9\u7136\u540e\u518d\u53bb\u4f5cLL/LR\u7b49rotation\u3002</li> <li> <p>RR case: </p> </li> <li> <p>LR case: </p> </li> </ul> <p>\u800c\u5bf9\u4e8e\u5220\u9664\u60c5\u51b5\uff0c\u6211\u4eec\u4f9d\u7136\u627e\u5230\u4ee5\u5931\u8861\u8282\u70b9\u4e3aroot\u7684\u5b50\u6811\u5e76\u5c06\u60c5\u51b5\u548c\u63d2\u5165\u7684\u56db\u4e2acase\u5bf9\u5e94\uff0c\u4f7f\u7528rotation\u89e3\u51b3\uff0c\u4e0d\u8fc7\u5728\u4fee\u590d\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0a\u9762\u7684\u8282\u70b9\u4e0d\u5e73\u8861\uff0c\u56e0\u6b64\u9700\u8981\u4e0d\u65ad\u4ece\u4e0b\u5230\u4e0a\u4fee\u590d\u3002</p> <p>\u5386\u5e74\u9898\u7ea0\u9519\uff1a</p> <p> </p> <p>\u8fd9\u9053\u9898\u6b63\u786e\u7b54\u6848\u5e94\u8be5\u662fD\uff0c\u89e3\u9898\u7684\u5173\u952e\u5728\u4e8e\u6709\u4e9bAVL Tree\u662f\u6709\u552f\u4e00\u89e3\u7684\uff0c\u4f8b\u5982\u6211\u4eec\u987a\u5e8f\u63d2\u51651\u30012\u30013\u4e09\u4e2a\u8282\u70b9\u7136\u540e\u5220\u9664\u6839\u8282\u70b9\u518d\u63d2\u5165\uff0c\u4e24\u6b21\u7684AVL Tree\u662f\u4e00\u6837\u7684\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#12-splay-tree","title":"1.2 Splay Tree","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#121","title":"1.2.1 \u5b9a\u4e49","text":"<p>\u672c\u8d28\u8fd8\u662fBST\uff0c\u4e0d\u8fc7\u5728\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u6dfb\u52a0\u4e86Splay\u7684\u64cd\u4f5c\uff1a</p> <p> </p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\u8fd9\u91cc\u7684Single rotation\u662f\u4e00\u6b65\u5230\u4f4d\u7684\uff0c\u4e0d\u80fd\u5206\u6210\u4e24\u6b21\u6162\u6162\u628a<code>X</code>\u8f6c\u4e0a\u53bb\uff0c\u4f1a\u51fa\u95ee\u9898\u3002</p> <p>\u5177\u4f53\u64cd\u4f5c\u4e0a\u5148\u5b9a\u4e3b\u5e72\u518d\u5b9a\u6bcf\u9897\u5b50\u6811\u4f4d\u7f6e\u4f1a\u6e05\u6670\u4e00\u4e9b\u3002</p> <p>\u8fd9\u4e00\u64cd\u4f5c\u4f7f\u5f97splay tree\u7684\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u7684\u5747\u644a\u8d39\u7528\u5747\u4e3a\\(O(logN)\\)\uff08\u5177\u4f53\u5206\u6790\u89c1Amortized Analysis\uff09\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#122","title":"1.2.2 \u64cd\u4f5c","text":"<ul> <li>\u67e5\u627e\uff1a\u6b63\u5e38\u5728BST\u4e2d\u7684\u67e5\u627e\uff0c\u627e\u5230\u540esplay\u90a3\u4e2a\u88ab\u627e\u5230\u7684\u8282\u70b9</li> <li>\u63d2\u5165\uff1a\u6b63\u5e38\u5728BST\u4e2d\u7684\u63d2\u5165\uff0c\u627e\u5230\u540esplay\u90a3\u4e2a\u88ab\u63d2\u5165\u7684\u8282\u70b9</li> <li>\u5220\u9664\uff1a</li> <li>splay \u8981\u88ab\u5220\u9664\u7684\u8282\u70b9</li> <li>\u5982\u679c\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u5b50\u6811\uff0c\u76f4\u63a5\u5220\u9664\uff1b\u5982\u679c\u6709\u4e24\u4e2a\u5b50\u6811\uff0c\u5220\u9664\u8fd9\u4e2a\u8282\u70b9\u540e\u5c06\u5de6\u5b50\u6811\u6700\u5927\u8282\u70b9splay\u5e76\u4f5c\u4e3aroot\u8282\u70b9\uff0c\u5408\u5e76\u53f3\u5b50\u6811\u3002</li> </ul> <p>\u5386\u5e74\u9898\u7ea0\u9519\uff1a </p> <p>\u7b54\u6848\u662fT\u3002\u597d\u6a21\u7cca\u7684\u9898\uff0c\u5927\u81f4\u5c31\u662fsplay\u7684\u76ee\u7684\u5c31\u662f\u4f18\u5316\u8def\u5f84\u7ed3\u6784\u5427\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4e0d\u80fd\u91cf\u5316\u7684\u8868\u8ff0\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u6765\u8bf4\u786e\u5b9e\u662f\u5bf9\u7684\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#13-b-tree","title":"1.3 B+ Tree","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#131","title":"1.3.1 \u5b9a\u4e49","text":"<ul> <li>B+\u6811\u7684\u6784\u9020\u53ef\u4ee5\u5206\u6210\u4e24\u90e8\u5206\uff1a<ul> <li>\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u662f\u5bfc\u822a\u8282\u70b9\uff0c\\(e_i\\) = min element stored in leaves of \\(T_{v_{i+1}}\\) \u4e14 \\(e_i\\) \uff1e every element om leaves of \\(T_{v_i}\\)</li> <li>\u53f6\u5b50\u8282\u70b9\u5b58\u50a8\u6570\u636e\uff0c\u6240\u6709\u53f6\u5b50\u8282\u70b9\u662f\u7b49\u6df1\u5ea6\u7684</li> </ul> </li> <li>\u6839\u636eB\u7684\u503c\u7684\u4e0d\u540c\uff0c\u975e\u53f6\u5b50\u8282\u70b9\u7684\u5b69\u5b50\u6570\u91cf\u548c\u53f6\u5b50\u8282\u70b9\u7684element\u4e2a\u6570\u5747\u6709\u9650\u5236\uff1a<ul> <li>\\(\\lceil{B/2}\\rceil\\) \u2264 fanout of an internal node \u2264 \\(B\\)\uff0croot\u7684fanout\u7684\u9650\u5236\u662f[2,B]\uff0croot\u4e5f\u53ef\u80fd\u6ca1\u6709children\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u6ca1\u6709\u9650\u5236</li> <li>\\(\\lceil{B/2}\\rceil\\) \u2264 # elements in a leaf \u2264 \\(B\\), if the leaf is the root, 1 \u2264 #elements \u2264 B</li> </ul> </li> </ul>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#132","title":"1.3.2 \u6027\u8d28","text":"<ul> <li>\u5982\u679c\u6709\\(N\\)\u4e2adata elements\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a\\(4N\\) - \u53ef\u4ee5\u4f7f\u75281.3.1\u7684\u9650\u5236\u6761\u4ef6\u62ff\u6700\u591a\u8282\u70b9\u6570*\u8282\u70b9\u6700\u591a\u5143\u7d20\u6570\u63a8</li> <li>\u9ad8\u5ea6\u662f\\(O(log_BN)\\)\u7684</li> <li>\u5bfc\u822a\u53d6\u503c\u4e0d\u4f1a\u91cd\u590d</li> </ul>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#133","title":"1.3.3 \u64cd\u4f5c","text":"<p>\u4e09\u4e2a\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u5747\u4e3a\\(O(logN)\\)</p> <ul> <li>\u67e5\u627e\uff1a\u548c\u5bfc\u822a\u53d6\u503c\u6bd4\u8f83\uff0c\u6bd4\u5b83\u6216\u76f8\u7b49\u5927\u5219\u5411\u53f3\u8fb9\u7684\u5bfc\u822a\u53d6\u503c\u627e\uff0c\u6bd4\u5b83\u5c0f\u5219\u5411\u5de6\u5b50\u6811\u627e</li> <li>\u63d2\u5165\uff1a\u5148\u67e5\u627e\u63d2\u5165\u4f4d\u7f6e\uff0c\u7136\u540e\u5904\u7406\u53ef\u80fd\u7684overflow\uff08\u4ece\u4e0b\u5f80\u4e0a\u5747\u5206\uff0c\u76f4\u5230parent\u65e0overflow\uff09</li> <li>\u5220\u9664\uff1a\u5148\u67e5\u627e\u5220\u9664\u8282\u70b9\uff0c\u7136\u540e\u5904\u7406\u53ef\u80fd\u7684underflow\uff08\u627e\u4e00\u4e2a\u6709\u5927\u4e8e\u7b49\u4e8e \\(\\lceil{B/2}\\rceil + 1\\) children\u7684sibling\u62ff\u4e00\u4e2a\uff0c\u90fd\u6ca1\u6709\u7684\u8bdd\u53ef\u4ee5merge\uff09</li> <li>\u5177\u4f53\u5206\u6790\uff1a</li> <li> </li> </ul>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#14-red-black-tree","title":"1.4 Red-Black Tree","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#141","title":"1.4.1 \u5b9a\u4e49","text":"<p>\u9996\u5148\u6211\u4eec\u5148\u8981\u660e\u786e\u7ea2\u9ed1\u6811\u7684\u5b9a\u4e49\u662f\u57fa\u4e8eextended version\u7684\uff0c\u5728\u6570bh\u7684\u65f6\u5019\u4e0d\u80fd\u9057\u6f0fNIL</p> <ol> <li>root\u3001NIL\u548cred node\u7684children\u90fd\u662fblack</li> <li>\u5bf9\u6bcf\u4e2a\u8282\u70b9\uff0c\u5176\u6240\u6709descending path\u4e0a\u9762\u7684\u9ed1\u8282\u70b9\u6570\u91cf\uff08\u4e0d\u5305\u62ec\u8282\u70b9\u672c\u8eab\uff09\u662f\u4e00\u6837\u7684\uff0c\u5e76\u4e14\u8fd9\u4e2a\u6570\u91cf\u88ab\u5b9a\u4e49\u4e3a\u8fd9\u4e2a\u8282\u70b9\u7684bh</li> </ol>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#142","title":"1.4.2 \u6027\u8d28","text":"<ul> <li>\u6700\u957f\u8def\u7684height\u4e0d\u4f1a\u8d85\u8fc7\u6700\u77ed\u8def\u7684\u4e24\u500d\uff0c\u4e14\\(h(T)\u22642*bh(T)\\)</li> <li>\u6811\u9ad8\u4e0a\u9650\\(2log_2(n+1)\\) - \u8bc1\u660e\u601d\u8def\uff1a\u628a\u95ee\u9898\u8f6c\u5316\u6210\\(size(Tu)\u22652^{bh(u)}-1\\) for any \\(u\\)\uff0c\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u8bc1\u660e</li> </ul>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#143","title":"1.4.3 \u64cd\u4f5c","text":"<p>\u90fd\u662f\\(O(logN)\\)\u590d\u6742\u5ea6\u7684\uff0c\u5176\u4e2d\u63d2\u5165\u6700\u591a\u65cb\u8f6c2\u6b21\uff0c\u5220\u9664\u6700\u591a\u65cb\u8f6c3\u6b21</p> <ul> <li>\u63d2\u5165<ul> <li>\u6309\u7167BST\u7684\u63d2\u5165\u65b9\u5f0f\u63d2\u5165\u5e76\u6807\u7ea2\uff0c\u5982\u679c\u63d2\u5165\u8282\u70b9\u7684parent\u662f\u7ea2\u8272\u7684\u9700\u8981\u7ef4\u62a4\uff1a</li> <li></li> <li>\u66f4\u6b63\uff1acase1\u7684p\u5982\u679c\u662froot\u9700\u8981\u518d\u628aroot\u6807\u8bb0\u6210\u9ed1\u8272\u518ddone</li> </ul> </li> <li>\u5220\u9664<ul> <li>\u6309\u7167BST\u7684\u5220\u9664\u65b9\u5f0f\u5220\u9664\uff0c\u9ed8\u8ba4\u548c\u5de6\u5b50\u6811\u6700\u5927\u8282\u70b9\u4ea4\u6362\uff08\u4e5f\u53ef\u80fd\u548c\u53f3\u5b50\u6811\u6700\u5c0f\u8282\u70b9\u4ea4\u6362\uff09\uff0c\u5e76\u4e14\u53ea\u4ea4\u6362key\u4e0d\u4ea4\u6362\u989c\u8272\u3002\u5f53\u88ab\u5220\u9664\u7684\u8282\u70b9\u4e3a\u7ea2\u8272\u6216\u8005\u5de6\u5b69\u5b50\u662f\u7ea2\u8272\u65f6\uff0c\u76f4\u63a5\u5220\u9664\u5373\u53ef\uff0c\u800c\u5f53\u88ab\u5220\u9664\u8282\u70b9\u6709\u4e24\u4e2aNIL\uff0c\u9700\u8981\u5c06\u5176\u8bb0\u4e3a\u4e00\u4e2adouble black\u8282\u70b9\u5e76\u8fdb\u884c\u7ef4\u62a4\uff08\u5de6\u53f3\u5bf9\u79f0\uff0c\u8fd9\u91cc\u4ee5\u5de6\u5b69\u5b50\u4e3adouble black\u4e3a\u4f8b\uff09\uff1a</li> <li></li> </ul> </li> <li>\u5173\u4e8e\u7ef4\u62a4\u7684\u8fc7\u7a0b\u4e2a\u4eba\u7406\u89e3\u5c31\u662f\uff1a\u4e00\u5c42\u8282\u70b9\u5982\u679c\u662f\u5e73\u8861\u7684\u7ea2/\u9ed1\uff08\u8fd9\u4e5f\u662f\u5bf9sibling\u5206\u7c7b\u8ba8\u8bba\u7684\u610f\u4e49\uff09\uff0c\u5c31\u8003\u8651\u5148\u5c06\u4f4e\u5c42\u7684\u6027\u8d28\u89e3\u51b3\u5e76\u628a\u95ee\u9898\u5411\u4e0a\u63a8\uff1b\u5982\u679c\u975e\u5e73\u8861\u5c31\u8003\u8651\u901a\u8fc7\u65cb\u8f6c\u628a\u95ee\u9898\u5e73\u8861\u5316\u3002\u5206\u60c5\u51b5\u8ba8\u8bba\u7684\u8fc7\u7a0b\u4e2d\u8981\u6ce8\u610f\u7ea2\u8282\u70b9\u7684\u5b69\u5b50\u4e00\u5b9a\u662f\u9ed1\u7684\u8fd9\u4e00\u9650\u5236\uff0c\u53ef\u4ee5\u5e26\u6765\u4e00\u4e9b\u526a\u679d\u3002</li> </ul> <pre><code>/* \u4e4b\u524d\u8001\u5e08\u5728\u7fa4\u91cc\u53d1\u4e86\u7ea2\u9ed1\u6811\u7684\u53e3\u8bc0\uff0c\u4f46\u662f\u4e2a\u4eba\u89c9\u5f97\u4e0d\u592a\u597d\u7528\uff0c\u4e0d\u8fc7\u8fd8\u662f\u653e\u4e0a\u6765\u4ee5\u4f5c\u53c2\u8003\uff1a\n(1)\u5144\u5f1f\u7ea2\u6613\u5144\u5f1f\u9ed1\uff0c\u6362\u8272\u659c\u65cb\u63a5\u7740\u63a8; \n(2)\u4f84\u9ed1\u7236\u7ea2\u6362\u5144\u8272\uff0c\u7236\u4f84\u5168\u9ed1\u5144\u67d3\u7ea2\uff0c\u4e0a\u63a8; \n(3)\u8fd1\u4f84\u7ea2\u6765\u8fdc\u4f84\u9ed1\uff0c\u6362\u8272\u659c\u65cb\u6a21\u6837\u6539; \n(4)\u8fdc\u4f84\u7ea2\u6765\u4ee4\u5176\u9ed1\uff0c\u7236\u5144\u6362\u8272\u659c\u65cb\u5760\u3002 */\n</code></pre>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#2-heaps","title":"2 Heaps","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#21-leftist-heap","title":"2.1 Leftist Heap","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#211","title":"2.1.1 \u5b9a\u4e49","text":"<ol> <li>\u6ee1\u8db3\u57fa\u672c\u5806\u7684\u6027\u8d28\uff08\u6700\u5927\u5806/\u6700\u5c0f\u5806\uff0c\u5b8c\u5168\u4e8c\u53c9\u6811\uff09</li> <li>\u5177\u6709\u5de6\u503e\uff08leftist\uff09\u6027\u8d28 - \u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u8282\u70b9<code>u</code>\uff0cright descending path\u662f<code>u</code>\u5230<code>null</code>\u7684\u6700\u77ed\u8def\uff08\u5e76\u4e14\u957f\u5ea6\u8bb0\u4e3a<code>npl(u)</code>\uff09\u4e4b\u4e00</li> </ol>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#212","title":"2.1.2 \u6027\u8d28","text":"<ul> <li>\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u76ee\u7684\u662f\u4f18\u5316\u5806merge\u64cd\u4f5c\u7684\u590d\u6742\u5ea6 - \\(O(N) \\to O(logN)\\)</li> <li>\u5bf9\\(N\\)\u4e2a\u8282\u70b9\u7684\u5de6\u503e\u5806\uff0cright path\u6700\u591a\u6709\\(log_2{(N+1)}\\)\u4e2a\u8282\u70b9 - \u8bc1\u660e\uff1a\u8f6c\u6362\u4e3a\u5bf9\u4e8e\u542b\\(r\\)\u4e2a\u8282\u70b9\u7684right path\u7684\u5de6\u503e\u5806\u6700\u5c11\u6709\\(2^r-1\\)\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u4f7f\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u8bc1\u660e</li> </ul>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#213","title":"2.1.3 \u64cd\u4f5c","text":"<p>\u4ee5\u4e0b\u63d0\u5230\u7684\u64cd\u4f5c\u90fd\u662f\\(O(logN)\\)\u590d\u6742\u5ea6\u7684\uff1a</p> <ul> <li>\u5408\u5e76 - \u91c7\u7528\u9012\u5f52\u5b9e\u73b0\uff0c\u5148\u5c06\u4e24\u4e2a\u5806\uff08\u6700\u5c0f\u5806\uff09\u8f83\u5c0f\u7684\u6839\u4f5c\u4e3a\u5408\u5e76\u540e\u65b0\u7684\u5806\u7684\u6839\uff0c\u518d\u5c06\u53e6\u4e00\u4e2a\u5806\u548c\u65b0\u7684\u6839\u7684\u53f3\u5b50\u6811\u5408\u5e76\uff0c\u5224\u65ad\u4e24\u4e2a\u5b50\u6811\u7684<code>npl</code>\uff0c\u5982\u679c\u53f3\u5b50\u6811\u5927\u5219\u4e24\u5b50\u6811\u4ea4\u6362\u3002\u6bcf\u6b21\u5408\u5e76\u5b8c\u8981\u66f4\u65b0\u65b0\u6839\u7684<code>npl</code>\u3002</li> <li>\u63d2\u5165 - \u5408\u5e76\u539f\u5806\u548c\u8981\u63d2\u5165\u7684node</li> <li>DeleteMin - \u5408\u5e76\u5de6\u53f3\u4e24\u5b50\u6811</li> <li>\u5220\u9664<ul> <li>\u6316\u51fa\u4ee5\u8981\u5220\u9664\u7684\u8282\u70b9<code>u</code>\u4e3a\u6839\u7684\u5b50\u6811<code>Tu</code>\uff0c\u628a\u4fee\u590d\u540e\u7684<code>H'</code>\uff08<code>H - Tu</code>\uff09\u548c<code>Tu</code>\u7684\u5de6\u53f3\u5b50\u6811\u5408\u5e76\u3002</li> <li>\u5173\u4e8e\u4fee\u590d\uff1a\u53ea\u6709<code>u</code>\u7684ancestors\u9700\u8981\u4fee\u590d\uff0c\u6240\u4ee5\u4ece\u5e95\u5411\u4e0a\u8bbf\u95ee<code>u</code>\u7684ancestors\uff1a</li> <li>\u5982\u679c\\(u_{i-1}\\)\u662f\\(u_i\\)\u7684\u53f3\u5b69\u5b50\uff0c\u76f4\u63a5\u66f4\u65b0\\(npl(u_i)\\)\u7684\u503c\u5e76\u7ee7\u7eed\u5411\u4e0a\u8bbf\u95ee</li> <li>\u5982\u679c\\(u_{i-1}\\)\u662f\\(u_i\\)\u7684\u5de6\u5b69\u5b50\uff0c\u8bb0\\(u_i\\)\u53f3\u5b69\u5b50\u4e3a\\(v\\)\uff1a<ul> <li>\\(npl(u_{i-1})\u2265npl(v)\\)\uff0c\u4fee\u590d\u5b8c\u6210\uff0cbreak</li> <li>\\(npl(u_{i-1})&lt;npl(v)\\)\uff0c\u628a\\(u_i\\)\u7684\u5de6\u53f3\u5b69\u5b50\u4e92\u6362\u5e76\u66f4\u65b0\\(npl(u_i)\\)\uff0c\u7ee7\u7eed\u5411\u4e0a\u8bbf\u95ee</li> </ul> </li> </ul> </li> <li>DecreaseKey - \u548c\u5220\u9664\u51e0\u4e4e\u4e00\u6837\u7684\u64cd\u4f5c\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u76f4\u63a5\u5220\u9664<code>u</code>\u800c\u662f\u5728\u62c6\u5206\u51fa\u6765\u7684<code>Tu</code>\u91cc\u9762decrease key\u518d\u5408\u5e76\u3002</li> </ul> <p>\u5efa\u5806\u53c2\u8003pta\u4e0a\u67d0\u9053\u4f5c\u4e1a\u9898\u7684\u8fc7\u7a0b\uff0c\u5229\u7528queue\u5b9e\u73b0\uff0c\u662f\\(O(N)\\)\u590d\u6742\u5ea6\u7684\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#22-skew-heap","title":"2.2 Skew Heap","text":"<ul> <li>\u5408\u5e76\u64cd\u4f5c\u4e0e\u5de6\u503e\u5806\u7c7b\u4f3c\uff0c\u533a\u522b\u5c31\u662f\u5728\u5408\u5e76\u5b8c\u4e4b\u540e\u4f1a\u65e0\u6761\u4ef6\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\uff0c\u5e76\u4e14\u5982\u679c\u9047\u5230\u5408\u5e76\u7684\u4e24\u4e2a\u5b50\u6811\u5176\u4e2d\u4e00\u4e2a\u4e3a\u7a7a\u5b50\u6811\u4f1a\u4ea4\u6362\u53e6\u5916\u4e00\u4e2a\u5b50\u6811right path\u4e0a\u9664\u6700\u4f4e\u5c42\u4e4b\u5916\u6240\u6709\u8282\u70b9\u7684\u5de6\u53f3\u5b69\u5b50\uff0c\u6240\u4ee5\u5728\u659c\u5806\u8fd9\u91cc\u662f\u6ca1\u6709npl\u8fd9\u4e2a\u6982\u5ff5\u7684\u3002\u6240\u4ee5\u5de6\u53f3path\u7684\u957f\u5ea6\u4e5f\u662f\u6ca1\u6709\u9650\u5236\u7684\uff0c\u6240\u4ee5Leftist Heap\u76f8\u6bd4\u4e4b\u4e0b\u4f1a\u66f4\u52a0balanced\u3002</li> <li>\u63d2\u5165\u548c\u5220\u9664\u6700\u5c0f\u503c\u90fd\u662f\u901a\u8fc7\u5408\u5e76\u5b9e\u73b0\u7684\uff0c\u800c\u5220\u9664\u548cDecreaseKey\u662f\u4e0d\u652f\u6301\u7684\u3002</li> <li>\u4ee5\u4e0a\u6240\u6709\u53ef\u884c\u64cd\u4f5c\u5747\u644a\u610f\u4e49\u4e0b\\(O(logN)\\) - \u5177\u4f53\u5206\u6790\u89c1Amortized Analysis</li> </ul>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#23-binomial-heap","title":"2.3 Binomial Heap","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#231-binomial-tree","title":"2.3.1 Binomial Tree","text":"<ul> <li>\u5b9a\u4e49\uff1a\u9012\u5f52\u5b9a\u4e49\u7684\uff0c\\(B_0\\)\u5c31\u662f\u5355\u4e2a\u8282\u70b9\uff0c\u800c\\(B_k\\)\u5219\u4e3a\\(B_{k-1}\\)\u7684\u6839\u8282\u70b9\u518d\u5728\u6700\u53f3\u8fb9\u63a5\u5165\u4e00\u68f5\\(B_{k-1}\\)\u5b50\u6811</li> <li>\u6027\u8d28\uff08\u5bf9\u4e8e\\(B_k\\)\uff09\uff1a<ol> <li>\u8282\u70b9\u6570\u4e3a\\(2^k\\)\uff0c\u9ad8\u5ea6\u4e3a\\(k\\)</li> <li>\u7b2c\\(d\\)\u5c42\u8282\u70b9\u6570\u4e3a\\(C(k, d) = \\frac{k!}{d!(k-d)!}\\) - \u53ef\u4ee5\u4f7f\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u8bc1\u660e</li> <li>\u6709\u4ece\\(B_0\\)\u5230\\(B_{k-1}\\)\u7684\\(k\\)\u4e2a\u5b50\u6811</li> </ol> </li> </ul>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#232","title":"2.3.2 \u5b9a\u4e49","text":"<p>\u4e8c\u9879\u5806\u7531\u6570\u4e2a\u6ee1\u8db3\u5806\u6027\u8d28\u7684Binomial Tree\u6784\u6210\uff08\u5bf9\u6bcf\u4e00\u4e2a\\(k\\)\uff0c\u6700\u591a\u4e00\u4e2a\\(B_k\\)\uff09\uff0c\u4e00\u822c\u5c06\u8282\u70b9\u6570\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u53ef\u4ee5\u786e\u5b9a\u6784\u6210\u5f62\u5f0f\u3002</p> <p>\u6839\u636eBinomial Tree\u7684\u6027\u8d28\u6613\u63a8\u5f97\u9ad8\u5ea6\u662f\\(O(logN)\\)\u7ea7\u522b\u7684\u3002</p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a\u901a\u8fc7left-child-next-sibling\u5b9e\u73b0</p> <p> </p> <p>\u6709\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u70b9\u662f\u5408\u5e76\u540e\u8981\u6309\u5b50\u6811\u5927\u5c0f\u964d\u5e8f\u6392\u5217\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#233","title":"2.3.3 \u64cd\u4f5c","text":"<p>\u57fa\u672c\u662f\u5bf9\u5e94\u4e8c\u8fdb\u5236\u8fd0\u7b97\u7684\uff0c\u4f8b\u5982\u63d2\u5165\u5373+1\uff0c\u5408\u5e76\u5c31\u662f\u52a0\u6cd5\uff0cDeleteMin\u5c31\u662f\u51cf\u6cd5\uff08-1\uff09</p> <ul> <li> <p>FindMin - \u904d\u5386\u5404\u6811\u7684\u6839\u8282\u70b9\u5c31\u53ef\u4ee5\u627e\u5230\uff0c\u4e0d\u8fc7\u6211\u4eec\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u6307\u5411\u6700\u5c0f\u6839\u7684\u6307\u9488\uff0c\u6240\u4ee5\u662f\\(O(1)\\)\u7684</p> </li> <li> <p>\u63d2\u5165 - \u5148\u628a\u8fd9\u4e2a\u8282\u70b9\u63d2\u5165\u5230\\(B_0\\)\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u76f8\u540c\\(k\\)\u7684\\(B\\)\u5c31\u5408\u5e76\uff0c\u76f4\u5230\u6240\u6709\\(k\\)\u552f\u4e00 - \\(O(logN)\\)\uff0c\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u662fconstant\u7684</p> </li> <li>\u5408\u5e76 - \u6309\u7167\\(k\\)\u4ece\\(0\\)\u5230\\(maxk\\)\u904d\u5386\uff0c\u5982\u679c\\(B_k\\)\u591a\u4e8e1\u4e2a\u5219\u5408\u5e76 - \\(O(logN)\\)</li> <li>DeleteMin - \u627e\u5230\u5305\u542b\u6700\u5c0f\u8282\u70b9\u7684\\(B_k\\)\uff0c\\(Merge(H-B_k, B_k - root)\\) - \\(O(logN)\\)</li> <li>DecreaseKey - \u628a\u8fd9\u4e2a\u8282\u70b9\u5728\u5176\u6240\u5728\u5806\u4e0d\u65ad\u5411\u4e0a\u6362 - \\(O(logN)\\)</li> <li>\u5220\u9664 - \\(DecreaseKey(x, -\\infin)+DeleteMin\\) - \\(O(logN)\\)</li> <li>\u5efa\u5806 - \u9010\u4e2a\u63d2\u5165\u5373\u53ef - \\(O(N)\\)\uff08\u662fworst case\uff09\uff0c\u5177\u4f53\u5206\u6790\u89c1Amortized Analysis\uff0c\u8fd9\u4e5f\u8bf4\u660e\u4e86\\(N\\)\u4e2a\u63d2\u5165\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(1)\\)</li> </ul>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#3-inverted-file-index","title":"3 Inverted File Index","text":"<pre><code>// \u770b\u4e86\u4e00\u4e0b\u5386\u5e74\u5377\u611f\u89c9\u4e3b\u8981\u8003\u4e00\u4e9b\u5b9a\u4e49\uff0c\u4e0d\u8981\u641e\u6df7\u5c31\u53ef\u4ee5\n</code></pre>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#31","title":"3.1 \u57fa\u672c\u7ed3\u6784","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#32","title":"3.2 \u57fa\u672c\u5904\u7406","text":"<ul> <li>Word Stemming - \u628a\u4e00\u4e2a\u8bcd\u7684\u4e0d\u540c\u53d8\u5f62\u5904\u7406\u4e3a\u540c\u4e00\u4e2a\u8bcd</li> <li>Stop Words - \u5bf9\u8fa8\u522b\u6587\u6863\u6ca1\u6709\u4f5c\u7528\u7684\u9ad8\u9891\u8bcd\uff0c\u4f5c\u505c\u7528\u5904\u7406</li> </ul>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#33","title":"3.3 \u641c\u7d22\u65b9\u5f0f","text":"<ul> <li>BST - \u652f\u6301\u8303\u56f4\u67e5\u627e</li> <li>Hashing - \u5feb\u901f</li> </ul>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#34","title":"3.4 \u4f18\u5316\u65b9\u5f0f","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#341","title":"3.4.1 \u5206\u5e03\u5f0f","text":"<ul> <li>Term-partitioned index - \u6839\u636e\u5355\u8bcd\u9996\u5b57\u6bcd\u5206\u7c7b\uff0c\u67e5\u627e\u6548\u7387\u9ad8\uff0c\u4f46\u662f\u5bb9\u6613\u9020\u6210\u5355\u70b9\u6545\u969c\uff0c\u5bb9\u707e\u80fd\u2f12\u5dee</li> <li>Document-partitioned index - \u9c81\u68d2\u6027\u597d</li> </ul>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#342","title":"3.4.2 \u52a8\u6001\u7d22\u5f15","text":"<ul> <li>\u6dfb\u52a0 - \u5148\u5b58\u5230\u4e34\u65f6\u5185\u5b58\uff0c\u518d\u6bcf\u9694\u2f0f\u5206\u949f\u5b58\u5230main index</li> <li>\u5220\u9664 - lazy deletion\uff0c\u76f4\u63a5\u6807\u8bb0\u6307\u9488\u2f46\u6548</li> </ul>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#343","title":"3.4.3 \u538b\u7f29","text":"<p>\u53bb\u505c\u2f64\u8bcd\u628a\u5b57\u7b26\u4e32\u8fde\u8d77\u6765\uff0c\u4f7f\u2f64\u6307\u9488\u8bb0\u5f55\u6bcf\u4e2a\u5355\u8bcd\u5f00\u59cb\u7684\u4f4d\u7f6e\u5e76\u5229\u2f64\u5dee\u5206\u51cf\u5c11\u6570\u636e\u7684\u5b57\u7b26\u91cf</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#344","title":"3.4.4 \u7b5b\u9009","text":"<p>\u8bcd\u8d8a\u4f4e\u9891\u5bf9\u5e94\u6743\u91cd\u8d8a\u9ad8\uff0c\u4ec5\u8f93\u51fa\u603b\u6743\u91cd\u6700\u9ad8\u7684\u51e0\u4e2a\u6587\u6863</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#35","title":"3.5 \u8bc4\u4f30\u65b9\u5f0f","text":"<ol> <li>\u7d22\u5f15\u5efa\u7acb\u901f\u5ea6</li> <li>\u67e5\u8be2\u901f\u5ea6</li> <li>\u652f\u6301\u67e5\u627e\u7c7b\u578b</li> <li> </li> </ol>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#4","title":"4 \u7b97\u6cd5\u5206\u6790","text":"<pre><code>// \u8fd9\u5757\u7684\u4f8b\u9898\u5206\u6790\u4e3b\u8981\u662f\u6211\u5bf9\u4e8e\u9898\u76ee\u601d\u8def\u7684\u7406\u89e3\uff0c\u53ef\u80fd\u4f1a\u975e\u5e38\u610f\u8bc6\u6d41\uff0c\u5b8c\u6574\u5206\u6790\u89c1\u6211\u7684\u7eb8\u8d28\u7b14\u8bb0\n// \u671f\u672b\u8865\u5145\uff1a\u771f\u7684\u6709\u70b9\u610f\u8bc6\u6d41\uff0c\u6307\u6211\u671f\u672b\u590d\u4e60\u770b\u4e0d\u61c2\u6211\u671f\u4e2d\u5199\u7684\u6574\u7406\u7684\u7a0b\u5ea6\u3002\u5efa\u8bae\u662f\u7ffb\u4e00\u4e0bppt/\u7eb8\u8d28\u7b14\u8bb0\uff0c\u77e5\u9053\u6bcf\u4e2a\u95ee\u9898\u662f\u4ec0\u4e48\u4e4b\u540e\u518d\u770b\u4f1a\u6e05\u6670\u4e00\u70b9\u3002\n</code></pre>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#41-backtracking","title":"4.1 Backtracking","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#411","title":"4.1.1 \u57fa\u672c\u601d\u8def","text":"<p>Backtracking = dfs + \u526a\u679d</p> <p></p> <p>\u5728\u9762\u5bf9\u5177\u4f53\u9898\u76ee\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u641e\u6e05\u695a\u7684\u65e0\u975e4\u4e2a\u95ee\u9898\uff1a</p> <ol> <li>\u5982\u4f55\u904d\u5386 - <code>i</code>\u662f\u4ec0\u4e48\uff0c\\(S_i\\)\u662f\u4ec0\u4e48</li> <li>OK function\u662f\u4ec0\u4e48</li> <li>\u5982\u4f55count in</li> <li>\u5982\u4f55undo</li> </ol>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#412-4114","title":"4.1.2 \u4f8b\u9898\u5206\u6790 - \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u95ee\u9898\u53ef\u4ee5\u6e05\u6670\u8bf4\u51fa4.1.1\u76844\u4e2a\u95ee\u9898\u5373\u53ef","text":"<ol> <li> <p>N Queens Problem \u6bd4\u8f83\u57fa\u672c\u7684\u904d\u5386\uff0c\u526a\u679d\u5c31\u662f\u5728\u5df2\u7ecf\u4f1aattack\u7684\u5730\u65b9\u4e0d\u5f80\u4e0b\u8d70\u4e86</p> </li> <li> <p>Turnpike Problem \u95ee\u9898\u5c31\u662f\u6839\u636e\u8ddd\u79bb\u96c6\u590d\u539f\u70b9\u96c6\uff0c\u4e3b\u8981\u6293\u4f4f\u53ef\u80fd\u6027\u6700\u5c11\u7684\u70b9\uff08max\u8ddd\u79bb\uff09\u5165\u624b\u53bb\u4f5c\u5206\u7c7b\u8ba8\u8bba\u548c\u526a\u679d</p> </li> <li> <p>\u4e09\u5b50\u68cb\u6e38\u620f \u4e0d\u540c\u4e8e\u524d\u4e24\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u95ee\u9898\u53ea\u6709\u8d70\u5b8c\u624d\u80fd\u77e5\u9053win/lose\uff0c\u6240\u4ee5\u6211\u4eec\u7528\\(f(p) = W_{you} - W_{oppo}\\)\u6765\u8bc4\u4f30\u6bcf\u4e2a\u60c5\u51b5\u7684\u80dc\u7387\uff0c\u5e76\u5728\u6211\u65b9\u548c\u5bf9\u65b9\u8f6e\u6b21\u5206\u522b\u53d6max\u548cmin\uff0c\u800cmax\u548cmin\u7684\u53d6\u503c\u5219\u8bde\u751f\u4e86\u4e24\u4e2a\u526a\u679d\u65b9\u5f0f\uff1a</p> <ul> <li>\\(\\alpha\\) pruning - \u7236\u8282\u70b9\u8981\u53d6max\uff0c\u5b50\u8282\u70b9\u53d6min </li> <li>\\(\\beta\\) pruning - \u7236\u8282\u70b9\u8981\u53d6min\uff0c\u5b50\u8282\u70b9\u53d6max </li> </ul> </li> </ol> <p>\u5173\u4e8e\\(\\alpha\\)/\\(\\beta\\) pruning\u7684\u5386\u5e74\u9898\u4f1a\u95ee\uff0c\u54ea\u4e2a\u662f\u7b2c\u4e00\u4e2a\u88ab\u526a\u679d\u7684\u8282\u70b9\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u8981\u6ce8\u610f\u526a\u679d\u4e0d\u6b62\u662f\u4e00\u5c42\u7684\uff0c\u6709\u53ef\u80fd\u4e0a\u9762\u7684grandparent\u4e5f\u4f1a\u5e26\u6765\u526a\u679d\uff0c\u4e00\u5b9a\u8981\u4eceroot\u5f00\u59cb\u5206\u6790\uff1a   \u8fd9\u9053\u9898\u7b54\u6848\u662fd\uff0c\u4e00\u5b9a\u8981\u4ece<code>68</code>\u8fd9\u4e2a\u8282\u70b9\u5f00\u59cb\u770b\uff0c\u53ea\u5206\u6790\u53f3\u5b50\u6811\u5c31\u4f1a\u9009\u9519\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#42-divide-and-conquer","title":"4.2 Divide and Conquer","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#421","title":"4.2.1 \u57fa\u672c\u601d\u8def","text":"<ol> <li>divide - \u5206\u6210\u5b50\u95ee\u9898</li> <li>conquer - \u89e3\u5b50\u95ee\u9898</li> <li>combine - \u628a\u5b50\u89e3\u5408\u5e76\u6210\u603b\u89e3</li> </ol>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#422","title":"4.2.2 \u4f8b\u9898\u5206\u6790","text":"<ol> <li> <p>Counting Inversion \u9996\u5148\u7531\u5206\u6cbb\u6cd5\u6211\u4eec\u81ea\u7136\u800c\u7136\u60f3\u5230\u628a\u95ee\u9898\u5206\u6210left\u3001right\u548csplit\u4e09\u5757\uff0c\u7136\u540eleft\u548cright\u53ef\u4ee5\u9012\u5f52\u89e3\u51b3\uff1b \u5728\u5904\u7406split\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53d1\u73b0\u5f52\u5e76\u6392\u5e8f\u53ef\u4ee5\u8ba9\u6bcf\u4e00\u6b21split\u7684\u95ee\u9898\\(O(N)\\)\u89e3\u51b3\uff0c\u6240\u4ee5\u4e00\u8fb9\u5f52\u5e76\u4e00\u8fb9\u6570split\u9006\u5e8f\u5bf9\u3002</p> </li> <li> <p>Closest Pair Problem \u5982\u679c\u8bf4\u4e0a\u4e00\u9898\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5bfb\u627e\u7c7b\u4f3c\u7b97\u6cd5\u3001\u78e8\u5200\u4e0d\u8bef\u780d\u67f4\u5de5\uff0c\u90a3\u4e48\u8fd9\u9053\u9898\u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u5229\u7528\u524d\u9762\u7684left\u548cright\u4e24\u79cd\u60c5\u51b5\u5bf9spilt\u60c5\u51b5\u8fdb\u884c\u526a\u679d\u4f18\u5316\u3002 \u8fd8\u662f\u4e00\u6837\u5c06\u95ee\u9898\u5206\u6210left\u3001right\u548csplit\u4e09\u5757\uff0c\u7136\u540eleft\u548cright\u53ef\u4ee5\u9012\u5f52\u89e3\u51b3\uff1b \u6211\u4eec\u5229\u7528\u524d\u4e24\u79cd\u60c5\u51b5\u5f97\u5230\u7684\u6700\u5c0f\u503c\u7ea6\u675fsplit\u60c5\u51b5\u70b9\u53ef\u80fd\u7684\u8303\u56f4\uff0c\u5e76\u4e14\u6307\u5b9a\u7eb5\u5750\u6807\u8303\u56f4\u5185\u7684\u70b9\u4e2a\u6570\u6709\u9650\uff08\u22648\u4e2a\uff09\uff0c\u4e8e\u662f\u6211\u4eec\u5148\u5bf9\u8303\u56f4\u5185\u7684\u70b9\u6309\u7eb5\u5750\u6807\u6392\u5e8f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u4e0b\u97627\u4e2a\u70b9\u5373\u53ef\uff0c\u5355\u6b21\u904d\u5386\u662f\\(O(1)\\)\u590d\u6742\u5ea6\u7684\u3002</p> </li> </ol>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#423-master-theory","title":"4.2.3 \u4e3b\u5b9a\u7406\uff08Master Theory\uff09","text":"<p>\u5728\u8fd9\u91cc\u6211\u4eec\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u662f\uff0c\u5728\u5df2\u77e5\\(T(N)\\)\u9012\u63a8\u5f0f\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u4f55\u6c42\u89e3\\(T(N)\\)</p> <p>\u5bf9\u4e8e\u7b80\u5355\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u753b\u51farecursion tree\u7136\u540e\u901a\u8fc7\u7d2f\u52a0\u6bcf\u4e00\u5c42\u3001\u7b49\u6bd4\u6570\u5217\u6c42\u548c\u5f97\u5230\uff1b</p> <p>\u800c\u5bf9\u4e8e\u6bd4\u8f83\u590d\u6742\u7684\u95ee\u9898\uff0c\u6211\u4eec\u6839\u636erecursion tree\u7684\u57fa\u672c\u539f\u7406\u603b\u7ed3\u51fa\u4e86\u4e00\u822c\u89c4\u5f8b\uff0c\u4e5f\u5c31\u662f\u4e3b\u5b9a\u7406\uff1a\uff08\u8003\u8bd5\u7684\u65f6\u5019\u57fa\u672c\u4e0a\u76f4\u63a5\u7528\u5373\u53ef\uff09</p> <p></p> <pre><code>// \u4e0b\u9762\u4e24\u4e2a\u662f\u7b49\u4ef7\u7684\uff0c\u7406\u8bba\u4e0a\u8bb0\u4e00\u4e2a\u5c31\u53ef\u4ee5\u3002\u4f46\u662f\u5386\u5e74\u5377\u6709\u76f4\u63a5\u8003\u8fd9\u4e24\u4e2a\u539f\u59cb\u5f62\u5f0f\u7684\uff0c\u5efa\u8bae\u90fd\u63a8\u4e00\u904d\u6216\u8005\u80cc\u4e0b\u6765\u3002\n// \u4e5f\u53ef\u4ee5\u5206\u6210\u4e09\u79cd\u60c5\u51b5\uff1aroot\u51b3\u5b9a\u3001leaves\u51b3\u5b9a\u548c\u6574\u4f53\u51b3\u5b9a\n</code></pre> <p> </p> <p> </p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e9b\u4e3b\u5b9a\u7406\u7684\u9012\u63a8\u5f0f\u90fd\u662f\\(aT(N/b)\\)\u7684\u9012\u63a8\u5f62\u5f0f\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u5904\u7406\u4e0d\u662f\u8fd9\u6837\u7684\u5f62\u5f0f\u7684\u9012\u63a8\u5f0f\u5462\uff1f</p> <p>\u770b\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u6362\u5143\u5373\u53ef\uff08\u5176\u5b9e\u5bf9\u5177\u4f53\u95ee\u9898\uff0c\u753brecursion tree\u4e5f\u662f\u53ef\u89e3\u7684\uff0c\u8981\u6ce8\u610f\u6811\u7684\u5c42\u6570\u95ee\u9898\u5373\u53ef\uff09\u3002</p> <p> </p> <p>\u5386\u5e74\u9898\u7ea0\u9519\uff1a</p> <p> </p> <p>\u7b54\u6848\u5e94\u8be5\u662fF\u3002\u522b\u4e71\u4e3e\u7279\u6b8a\u60c5\u51b5\u5c31\u597d\uff0c\u753b\u4e2arecursion tree\u7b97\u4e00\u4e0b\u5e94\u8be5\u662f\\(f(N)\\log_bN\\)\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#43-dynamic-programming","title":"4.3 Dynamic Programming","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#431","title":"4.3.1 \u57fa\u672c\u601d\u8def","text":"<ol> <li>defining subproblem - \u5b9a\u4e49\u5b50\u95ee\u9898</li> <li>finding recurrence - \u7531\u5b50\u95ee\u9898\u627e\u5230\u9012\u5f52\u89e3\u6cd5</li> <li>computing the optimal value for (sub)problems - \u8ba1\u7b97\u5b50\u95ee\u9898\u6700\u4f18\u89e3</li> <li>reconstructing the optimal solution - \u6839\u636e\u6700\u4f18\u89e3\uff08\u503c\uff09\u91cd\u6784\u5bfb\u627e\u89e3\u6cd5</li> </ol> <p>\u5176\u5b9e\u6211\u5bf9\u52a8\u6001\u89c4\u5212\u7684\u7406\u89e3\u5c31\u662f\u9012\u5f52\u7684\u9006\u8fd0\u7b97\uff0c\u56e0\u4e3a\u7c7b\u4f3c\u6590\u6ce2\u90a3\u5951\u4e4b\u7c7b\u7684\u591a\u9879\u9012\u5f52\u4f1a\u9020\u6210\u591a\u6b21\u91cd\u590d\u8fd0\u7b97\u5e26\u6765\u5f88\u9ad8\u7684\u590d\u6742\u5ea6\uff0c\u4ece\u5e95\u90e8\u5230\\(n\\)\u7684\u9006\u8fd0\u7b97\u5c31\u4f1a\u4f18\u5316\u8fd9\u4e2a\u95ee\u9898\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#432","title":"4.3.2 \u4f8b\u9898\u5206\u6790","text":"<p>1.Weighted Independent Set on a Path</p> <p>\u6211\u4eec\u5148\u628a\u95ee\u9898\u805a\u7126\u5230\u5355\u4e2a\u70b9\u4e0a\uff0c\u5bf9\u8fd9\u4e2a\u70b9\u5c5e\u4e0d\u5c5e\u4e8e\u6700\u4f18\u89e3\u96c6\u5408\u5206\u7c7b\u8ba8\u8bba\u8fdb\u800c\u89e3\u51fa\u9012\u5f52\u7684\u5f0f\u5b50\u3001\u5b9a\u4e49\u5b50\u95ee\u9898<code>c[i]</code>\uff0c\u6700\u540e\u4f7f\u7528<code>c[i]</code>\u6784\u5efa\u6700\u4f18\u89e3\u7684\u5177\u4f53\u5185\u5bb9\u3002</p> <p>2.Knapsack Problem</p> <p>\u548c\u4e0a\u4e2a\u95ee\u9898\u4e00\u6837\uff0c\u6211\u4eec\u8fd8\u662f\u628a\u95ee\u9898\u5148\u627e\u4e00\u4e2a\u5c0f\u5207\u53e3\u4e5f\u5c31\u662f\u8fd9\u4e2a\u7269\u54c1\u5c5e\u4e0d\u5c5e\u4e8e\u6700\u4f18\u89e3\u96c6\u3002\u4f46\u662f\u8fd9\u6b21\u6211\u4eec\u8ba8\u8bba\u7684\u95ee\u9898\u9664\u4e86\u7269\u54c1\u4e2a\u6570\u4e4b\u5916\u8fd8\u6709\u4e0d\u540c\u7684<code>capacity</code>\u4f5c\u4e3a\u9650\u5236\u6761\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u91c7\u7528\u4e8c\u7ef4\u6570\u7ec4\u3002</p> <p>\u5bf9\u4e8e\u6709\u4e24\u4e2a\u9650\u5236\u6761\u4ef6\u7684\u95ee\u9898\u90fd\u53ef\u4ee5\u6548\u4eff\u80cc\u5305\u95ee\u9898\u7684\u5b50\u95ee\u9898\uff1a</p> <p>define <code>v[i][c]</code> be the maximum total value of a subset of first <code>i</code> items with total weight at most <code>c</code>.</p> <p>\u5728\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5e94\u8be5\u989d\u5916\u6ce8\u610f\u4e24\u79cd\u60c5\u51b5\u662f\u5426\u90fd\u5408\u6cd5\u2014\u2014\u4e0b\u6807\u662f\u5426\u8d8a\u754c\u7b49\uff0c\u505a\u597d\u6781\u7aef\u60c5\u51b5\u548c\u521d\u59cb\u60c5\u51b5\u7684\u5b9a\u4e49\u3002</p> <p>\u5176\u4e2d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(nC)\\)\u7684\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f\\(O(n+C)\\)\u7684\u3002</p> <p>3.Optimal BST</p> <p>\u5bf9\u6811\u95ee\u9898\u7684\u5207\u5165\u53e3\uff0c\u6211\u4eec\u81ea\u7136\u60f3\u5230\u5c06\u5176\u5206\u6210root\u3001\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\uff0c\u56e0\u4e3a\u5b50\u6811\u662f\u53ef\u4ee5\u9012\u63a8\u7684\u3002\u53d6\u641c\u7d22\u65f6\u95f4\u6700\u77ed\u7684root\u5c31\u662f\u6211\u4eec\u7684\u5b50\u95ee\u9898\u3002</p> <p>\u800c\u5728\u5177\u4f53\u8ba1\u7b97\u7684\u8fc7\u7a0b\u4e2d\u6211\u4eec\u8fd8\u8ba8\u8bba\u4e86\u600e\u4e48\u6837\u7684\u9012\u63a8\u5f0f\u662f\u53ef\u89e3\u7684\u8fd9\u4e00\u95ee\u9898\uff0c\u6211\u8ba4\u4e3a\u53ef\u4ee5\u901a\u8fc7\u5efa\u7acbij\u76f4\u89d2\u5750\u6807\u7cfb\u753b\u56fe\u89e3\u51b3\u3002</p> <p>\u5176\u4e2d\uff0c\u6c42\u89e3\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5728\u5bf9r\u526a\u679d\u540e\u662f\\(O(n^2)\\)\uff0c\u590d\u539f\u8fc7\u7a0b\u65f6\u95f4\u590d\u6742\u5ea6\u526a\u679d\u540e\\(O(n)\\)\u3002</p> <p>4.\u77e9\u9635\u4e58\u6cd5</p> <p>\u6211\u4eec\u4ece\u5355\u6b21\u4e58\u6cd5\u8fd0\u7b97\u5165\u624b\uff0c\u5206\u7c7b\u8ba8\u8bba\u7684\u65b9\u5f0f\u5c31\u662f\u6dfb\u62ec\u53f7\u7684\u4f4d\u7f6e\uff0c\u53d6\u64cd\u4f5c\u6b21\u6570\u4e3amin\u7684\u62ec\u53f7\u4f4d\u7f6e\u5c31\u662f\u5b50\u95ee\u9898\u3002</p> <p>5.\u6700\u77ed\u8def\u95ee\u9898</p> <p>\u5bf9\u4e8e\u6709\u8d1f\u8fb9\u65e0\u8d1f\u73af\u7684\u60c5\u51b5\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u7b97\u6700\u77ed\u8def\u3002</p> <p>\u4e2a\u4eba\u5bf9\u8fd9\u9053\u9898\u7684\u7406\u89e3\u662f\uff1a\u5f53\u56fe\u4e2d\u6709\u4e86\u8d1f\u8fb9\u7684\u65f6\u5019\uff0c\u8fb9\u7684\u6570\u91cf\u589e\u52a0\u4e0d\u518d\u548c<code>cost</code>\u589e\u52a0\u662f\u7b49\u4ef7\u5173\u7cfb\uff0c\u56e0\u800c<code>dijkstra's algorithm</code>\u5931\u6548\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u7c7b\u6bd4\u80cc\u5305\u95ee\u9898\u7684\u601d\u8def\uff0c\u5c06\u8fb9\u7684\u6570\u91cf\u4e5f\u4f5c\u4e3a\u9650\u5236\u6761\u4ef6\u4e4b\u4e00\uff0c\u5efa\u7acb\u4e8c\u7ef4\u6570\u7ec4\uff0c\u56fa\u5b9a\u8fb9\u6570\u53bb\u8ba8\u8bba\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u56e0\u6b64\u4e5f\u5c31\u6709\u4e86\u8fd9\u4e2a\u5b50\u95ee\u9898\uff1a</p> <p>let <code>c[v][i]</code> be cost of the shortest path from <code>s</code> to <code>v</code> with at most <code>i</code> edges (<code>c[v][i]</code> = \\(+\\infin\\) if no such path exists).</p> <p>\u56e0\u4e3a\u5728\u9012\u63a8\u7684\u8fc7\u7a0b\u4e2d\u6211\u4eec\u4f1a\u5f3a\u8c03\u6700\u4f18\u8fd9\u4e2a\u6982\u5ff5\uff0c\u56e0\u6b64\u6211\u4eec\u770b\u5230\u7684\u5f88\u591a\u4e0b\u6807\u9650\u5236\u90fd\u662f\u81f3\u591a\u6216\u8005\u81f3\u5c11\u8fd9\u79cd\u5355\u8fb9\u9650\u5236\u6761\u4ef6\uff0c\u7136\u540e\u6211\u4eec\u7684\u9012\u63a8\u5f0f\u4e5f\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u7b49\u53f7\u662f\u5426\u53d6\u5230\u5206\u7c7b\u8ba8\u8bba\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(|V||E|)\\)\u7684\u3002</p> <p>\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2aLEMMA\uff1a</p> <p><code>G</code> has no negative cycle if and only if <code>c[v][n-1] == c[v][n]</code> for any <code>v</code> \u2208 <code>V</code></p> <p>6.All-pair Shortest Path (APSP)</p> <p>\u76ee\u7684\u662f\u6c42\u6bcf\u4e2a\u70b9\u5bf9\u95f4\u6700\u77ed\u8def</p> <ul> <li>\u5982\u679c\u6ca1\u6709\u8d1f\u8fb9\u7528<code>dijkstra's algorithm</code>\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\\(=|V|*\\text{Dijkstra's} = O({|V|}^2\\log|V|+|V||E|)\\)\uff1b</li> <li>\u6709\u8d1f\u8fb9\u7684\u60c5\u51b5\uff1a</li> <li>\u53ef\u4ee5\u7528\u4e0a\u4e00\u9898\u7684\u89e3\u6cd5\uff08<code>Bellman-Ford</code>\uff09\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\\(=|V|*\\text{Bellman-Ford} = O({|V|}^2|E|)\\)\uff1b</li> <li>\u6216\u8005\u5bf9\u4e8e\u7a20\u5bc6\u7684\u60c5\u51b5\u53ef\u4ee5\u4f7f\u7528<code>Floyal-warshall</code>\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\\(=O({|V|^3})\\)\u3002</li> </ul> <p>\u4e2a\u4eba\u7406\u89e3\u8fd8\u662f\u7528\u5185\u90e8\u70b9\u66ff\u4ee3\u4e86\u5bf9\u8fb9\u7684\u53d6\u5230\u4e0e\u5426\u7684\u8ba8\u8bba\uff0c\uff08\u4e24\u70b9\u786e\u5b9a\u4e00\u6761\u76f4\u7ebf\uff1f\uff09\u6240\u4ee5\u6709\u4e86\u8fd9\u4e2a\u57fa\u4e8e\u4e09\u7ef4\u6570\u7ec4\u7684\u5b50\u95ee\u9898\uff1a</p> <p>let <code>c[i][j][k]</code> be the cost of shortest path of rank at most <code>k</code> from \\(v_i\\) to \\(v_j\\).</p> <p>\u9012\u63a8\u5f62\u5f0f\uff1a<code>c[i][j][k] = min{c[i][j][k-1], c[i][k][k-1] + c[k][j][k-1]}</code></p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#5-amortized-analysis","title":"5 Amortized Analysis","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#51","title":"5.1 \u5747\u644a\u5206\u6790\u6982\u8ff0","text":"<p>\u5b9a\u4e49\uff1aworst-case bound for a sequences' (from empty structure) operation</p> <p>\u65b9\u6cd5\uff1a</p> <ol> <li>Aggregate Analysis - \u8fdb\u884c\\(M\\)\u6b21\u64cd\u4f5c\uff0c\u5219\u6bcf\u6b21\u7684\u5747\u644a\u590d\u6742\u5ea6\u4e3a\\(\\frac{T(M)}{M}\\) - \u8fd9\u4e2a\u65b9\u6cd5\u9002\u7528\u4e8e\u5bb9\u6613\u627e\u5230worst sequence\u7684\u60c5\u51b5</li> <li>Accounting Method</li> </ol> <p>amortized cost = actual cost + credit \\(\\to\\) \\(\\sum\\text{amortized cost} = \\sum\\text{actual cost} + \\sum\\text{credit}\\) \u4e14 \\(\\sum\\text{credit} \u2265 0\\)</p> <p>\u5176\u4e2d\uff0c\u5b58\u94b1\u7684\\(\\text{credit}\\)\u4e3a\u6b63\u6570\uff0c\u53d6\u94b1\u662f\u8d1f\u6570\u3002</p> <p>\u65b9\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u6211\u4eec\u5f15\u5165\u4e86\u4e00\u4e2a\\(\\text{credit}\\)\u53bb\u5747\u8861\u4e86\u90a3\u4e9b\u6bd4\u8f83\u8d35\u4f46\u662f\u5c11\u7684\\(\\text{cost}\\)\uff0c\u5e76\u4e14\u5229\u7528\u201d\u4e0d\u6b20\u94b1\u201c\u8fd9\u4e00\u9650\u5236\u6761\u4ef6\u4f7f\u5f97\u5747\u644a\u590d\u6742\u5ea6\u662f\u5b9e\u9645\u590d\u6742\u5ea6\u7684worst-case bound\uff0c\u8fdb\u800c\u5f97\u5230\u4e00\u4e2a\u6bd4\u8f83\u5e73\u6ed1\u7684\u5747\u644a\u590d\u6742\u5ea6\u3002</p> <p>\u4ee5\u4e24\u4e2astack\u5b9e\u73b0\u4e00\u4e2aqueue\u4e3a\u4f8b\uff1a</p> actual cost credit amortized enqueue c 2c 3c dequeue 2c\u00b7#elements moved + c -2c\u00b7#elements moved c <p>\\(\\to \\text{amortized cost} = O(1)\\)</p> <p>\u548c\u65b9\u6cd5\u4e00\u7684\u533a\u522b\u662f\u8ba4\u4e3a - The amortized costs of the operations may differ from each other</p> <ol> <li>Potential Function \u52bf\u80fd\u51fd\u6570\u5206\u6790\u6cd5</li> </ol> <p>\u6211\u4eec\u901a\u8fc7\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u7684\\(\\text{credit}\\)\u53bb\u5b9a\u4e49\u52bf\u80fd\u51fd\u6570\uff1a</p> <p>\\(\\Phi(i) = \\text{total credits in the bank after the }i\\text{th operation}\\)</p> <p>\u90a3\u4e48\u901a\u8fc7\u6539\u5199\u4e0a\u4e00\u4e2a\u65b9\u6cd5\u7684\u5f0f\u5b50\uff0c\u6211\u4eec\u6709\uff1a\\(\\text{amortized cost} = \\text{actual cost} + \\Phi(i) - \\Phi(i-1)\\)</p> <p>\u81ea\u7136\u800c\u7136\u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u7684\u52bf\u80fd\u51fd\u6570\u4e3a\uff1a\\(\\Phi(Q)=2c*\\) (#element in StackIn)</p> <p></p> <ul> <li>In general, a good potential function should always assume its minimum at the start of the sequence.</li> </ul>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#52-splay-tree","title":"5.2 Splay Tree\u5747\u644a\u5206\u6790","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#53-skew-heap","title":"5.3 Skew Heap\u5747\u644a\u5206\u6790","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#54","title":"5.4 \u5747\u644a\u5206\u6790\u4f8b\u9898","text":"<p>D\uff1f\u5207\u5165\u70b9\uff1a\u6700\u5f00\u59cb\u7684\u52bf\u80fd\u6700\u5c0f\u3001\u8d35\u7684\u64cd\u4f5c\u52bf\u80fd\u5dee\u662f\u8d1f\u7684\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#6","title":"6 \u90e8\u5206\u4f5c\u4e1a\u9898\u548c\u5386\u5e74\u9898\u7ea0\u9519\u4e0e\u5fc3\u5f97","text":"<p>\u9996\u5148\uff0c\u505a\u5b8c\u4e00\u5b9a\u8981\u68c0\u67e5\u4e00\u904d\uff0c\u5148\u4e0d\u68c0\u67e5\u522b\u7684\uff0c\u5c31\u68c0\u67e5max\u548cmin\u3001TRUE\u548cFALSE\u3001black\u548cred\u3001possible\u548cimpossible\u7b49\u7b49\u8bcd\u6709\u6ca1\u6709\u770b\u53cd\uff0c\u611f\u89c9\u4e0d\u5c11\u90fd\u662f\u56e0\u4e3a\u8fd9\u4e2a\u9519\u7684\u3002</p> <p>\u7a0b\u5e8f\u586b\u7a7a\u8bb0\u5f97\u518d\u770b\u770bppt\u6e90\u4ee3\u7801\u9632\u6b62\u548c\u8001\u5e08\u7684\u5b9a\u4e49\u4ec0\u4e48\u7684\u4e0d\u4e00\u6837\u3002</p> <p> </p> <p>\u611f\u89c9\u8fd9\u9053\u9898\u7684\u610f\u601d\u5c31\u662f\u4e00\u4e2arun\u662f\u5904\u7406\u4e86\u4e00\u8f6enode\u800c\u4e0d\u662f\u4e00\u6b21merge\uff0c\u7136\u540e\u6839\u636eC\u7684\u5f0f\u5b50\u53ef\u4ee5\u5f97\u51fa\u662f\\(O(N)\\)\u7684\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#_3","title":"\u540e\u534a\u5b66\u671f\u90e8\u5206\u68b3\u7406","text":"<p>\u53c2\u8003\u8d44\u6599\uff1a\u6bdb\u5b87\u5c18\u8001\u5e08\u667a\u4e91\u3001ads\u8bfe\u7a0b\u7ec4ppt\u3001Isshiki\u4fee's notebook</p> <p>\u540e\u534a\u5b66\u671f\u7684\u5185\u5bb9\u96c6\u4e2d\u5728\u7b97\u6cd5\u5206\u6790\u65b9\u9762\uff0c\u4e3b\u8981\u5206\u4e3a\u4ee5\u4e0b\u90e8\u5206\uff1a</p> <ol> <li>Greedy Algorithm</li> <li>NP</li> <li>Approximation</li> <li>Local Search</li> <li>Randomized Algorithms</li> <li>Parallel</li> <li>External Sorting</li> </ol> <p>\u5728\u6bd4\u8f83\u96be\u7b97\u6cd5\u7684\u90e8\u5206\uff0c\u6211\u4eec\u4e3b\u8981\u5206\u6210\u57fa\u672c\u601d\u60f3/\u6a21\u677f\u548c\u5178\u578b\u4f8b\u9898\u4e24\u5927\u5757\u68b3\u7406\uff0c\u8003\u8bd5\u7684\u65f6\u5019\u9762\u5bf9\u5f88\u65b0\u7684\u9898\u9664\u4e86\u4ece\u5b9a\u4e49/\u6a21\u677f\u51fa\u53d1\u3001\u7528\u4f8b\u9898\u62df\u5408\u4e4b\u5916\u597d\u50cf\u4e5f\u6ca1\u6709\u4ec0\u4e48\u6bd4\u8f83\u597d\u7684\u529e\u6cd5\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#0_1","title":"0 \u5907\u8003\u5efa\u8bae","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#_4","title":"\u590d\u4e60\u6d41\u7a0b","text":"<ol> <li>\u7ed3\u5408\u7b14\u8bb0+ppt\uff08\u4e0d\u8981\u6f0f\u7ec6\u8282\uff0c\u5f04\u6e05\u695a\u540d\u8bcd\u542b\u4e49\uff0c\u6bd4\u5982full tree\u662f\u6ee1\u8fd8\u662f\u5b8c\u5168\uff09+\u6bcf\u7ae0\u4f5c\u4e1a\uff08\u5f04\u6e05\u6240\u6709\u9009\u9879\uff09\u8fc7\u4e00\u904d\u5185\u5bb9\uff1b</li> <li>\u5237\u5386\u5e74\u5377\uff08\u5173\u6ce8\u65b0\u9898\u578b\uff09\u3002</li> </ol>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#_5","title":"\u77e5\u8bc6\u70b9","text":"<ul> <li> <p>\u7ea2\u9ed1\u6811\uff1a\u64cd\u4f5c\u6bd4\u8f83\u590d\u6742\uff0c\u5efa\u8bae\u6b7b\u8bb0\u786c\u80cc\uff08\u5426\u5219\u4f1a\u63a8\u51fa\u4e0d\u540c\u7248\u672c\u7684\u64cd\u4f5c\uff09\uff0c\u6bcf\u4e00\u6b65\u68c0\u67e5\u57fa\u672c\u5b9a\u4e49\u3002</p> </li> <li> <p>AVL\uff1a\u5173\u6ce8\u5b9e\u73b0\uff0c\u9700\u8981\u4f1a\u5199\u4ee3\u7801\u3002</p> </li> <li>\u644a\u8fd8\u5206\u6790\uff1a\u8003\u8651\u7279\u6b8a\u60c5\u51b5\uff0c\u6811\u9000\u5316\u6210\u94fe\u60c5\u51b5\u4e0b\u590d\u6742\u5ea6\uff0c\u5bf9/2\u654f\u611f\uff0c\u6811\u9ad8/2\u5f88\u53ef\u80fd\u7ed3\u679c\u5e26log\uff0c\u624b\u52a8\u6a21\u62df\u7279\u6b8a\u60c5\u51b5\uff1b\u6ce8\u610f\u52bf\u80fd\u7b26\u53f7\u65b9\u5411\u3002</li> <li>DP\uff1a\u6ce8\u610f\u6a21\u578b\uff0c\u8bbe\u8ba1\u72b6\u6001\u8981\u8003\u8651\u7684\uff1a\u662f\u5426\u662f\u5bf9\u5f53\u524d\u72b6\u6001\u6700\u4f18\u7684\u603b\u7ed3\uff0c\u662f\u5426\u80fd\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u72b6\u6001\uff1b\u53ef\u80fd\u4f1a\u8003\u7f16\u7a0b\u3002</li> <li>\u8d2a\u5fc3\uff1a\u9009\u62e9\u9898\u8003\u8651\u7279\u6b8a\u503c\uff0c\u9002\u5f53\u653e\u5f03\u3002\u6ce8\u610f\u6a21\u578b\uff0c\u53ef\u80fd\u4f1a\u8003\u7f16\u7a0b\u3002</li> <li>\u5206\u6cbb\uff1a\u4e3b\u5b9a\u7406\uff0c\u6ce8\u610f\u9002\u7528\u8303\u56f4\uff1b\u5982\u679c\u62ff\u4e0d\u51c6\u76f4\u63a5\u753b\u6811\u6c42\u89e3\uff0c\u5bf9\u6570\u5b66\u63a8\u7406\u8981\u6c42\u9ad8\uff0c\u6ce8\u610f\u4e0d\u5e73\u8861\u7684\u60c5\u51b5\u3002</li> <li>\u5e76\u884c\u548c\u5916\u90e8\u6392\u5e8f\uff1a\u96be\u5ea6\u4e0d\u9ad8\uff0c\u5efa\u8bae\u641e\u660e\u767d\u62ff\u5230\u5206\u6570\u3002</li> <li>\u5269\u4e0b\u7684\u90e8\u5206\u96be\u8d77\u6765\u4f1a\u5f88\u96be\uff0c\u641e\u660e\u767d\u57fa\u672c\u5b9a\u4e49\u548c\u5178\u578b\u4f8b\u9898\u5373\u53ef\uff0c\u9002\u5f53\u653e\u5f03\uff0c\u4e0d\u5efa\u8bae\u6b7b\u78d5\u3002</li> </ul>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#_6","title":"\u8003\u8bd5\u7b56\u7565","text":"<ul> <li>\u9884\u5206\u914d\u65f6\u95f4\uff0c\u5148\u505a\u81ea\u5df1\u64c5\u957f\u7684\uff0c\u5343\u4e07\u4e0d\u80fd\u5148\u505a\u7f16\u7a0b\u9898\uff0c\u4f1a\u505a\u7684\u4e0d\u8981\u6025\uff1b\u6ca1\u6709\u628a\u63e1\u7684\u3001\u770b\u4e0d\u61c2\u7684\u3001\u6ca1\u6709\u601d\u8def\u7684\u3001\u9ebb\u70e6\u7684\u5408\u7406\u8df3\u6700\u540e\u505a\u3002</li> <li>\u7a0b\u5e8f\u586b\u7a7a\u89c2\u5bdf\u6ca1\u6709\u7528\u5230\u7684\u53d8\u5316\uff0c\u7f16\u7a0b\u9898\u9002\u5f53\u91c7\u53d6\u9a97\u5206\u7b56\u7565\uff08\u4f8b\u5982DP\u7528\u8d2a\u5fc3\u89e3\u5927\u90e8\u5206case\uff09\u3002</li> </ul>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#1-greedy-algorithm","title":"1 Greedy Algorithm","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#11","title":"1.1 \u57fa\u672c\u601d\u60f3","text":"<p>\u5b9a\u4e49\u5c31\u662f\u5728\u6bcf\u4e00\u4e2a\u72b6\u6001\u4e0b\u9009\u62e9\u5f53\u4e0b\u7684\u6700\u4f18\u89e3\u5e76\u4e14\u4e0d\u518d\u5728\u4e4b\u540e\u7684\u7b97\u6cd5\u8fc7\u7a0b\u4e2d\u6539\u53d8\u3002</p> <p>\u7531\u5b9a\u4e49\uff0c\u6211\u4eec\u4e0d\u96be\u5f97\u51fa\uff1a\u8d2a\u5fc3\u7b97\u6cd5\u6709\u6548\u7684\u6761\u4ef6\u4e3a\\(OPT_{local}=OPT_{global}\\)\uff0c\u800c\u5728\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u65f6\u5019\uff0c\u7531\u5f53\u524d\u6700\u4f18\u89e3\u7ec4\u6210\u7684\u89e3\u4e5f\u4f1a\u76f8\u5bf9\u63a5\u8fd1\u5168\u5c40\u6700\u4f18\u89e3\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u5728\u8fd9\u4e2a\u95ee\u9898\u4e0b\u8981\u8ba8\u8bba\u7684\u662f\u4ee5\u4e0b\u51e0\u4e2a\u5b50\u95ee\u9898\uff1a</p> <ol> <li>\u6bcf\u4e00\u6b65\u4e4b\u4e0b\u7684\\(OPT_{local}\\)\u662f\u4ec0\u4e48\uff08\u5728\u8fd9\u91cc\u9700\u8981\u4fdd\u8bc1\\(OPT\\)\u6709\u89e3\uff09</li> <li>\u4e3a\u4ec0\u4e48/\u5982\u4f55\u8bc1\u660e\u5f97\u5230\u7684\u89e3\u5168\u5c40\u6700\u4f18 - \u5982\u679c\u6709\u9009\u62e9\u9898\u9009\u62e9\\(OPT_{local}\\)\uff0c\u53ef\u4ee5\u8003\u8651\u4e3e\u53cd\u4f8b</li> </ol> <p>\u4e0d\u8fc7\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u8d2a\u5fc3\u89e3\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\u5e76\u4e0d\u662f\u552f\u4e00\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u6545\u8d2a\u5fc3\u9650\u5236\u6761\u4ef6\u4e0d\u4e00\u5b9a\u9002\u7528\u4e8e\u6240\u6709\u5168\u5c40\u6700\u4f18\u89e3\u3002</p> <p> </p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#12","title":"1.2 \u57fa\u672c\u4f8b\u9898","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#121-activity-selection","title":"1.2.1 Activity Selection","text":"<p>\u9898\u76ee\u7684\u76ee\u7684\u662f\u89e3\u51fa\u4e00\u79cd\u6700\u591a\u7684\u4e0d\u91cd\u5408\u7684\u6d3b\u52a8\u96c6\u5408\u3002\u4f7f\u7528DP\u53ef\u89e3\u4f46\u662f\u662f\\(O(N^2)\\)\u7684\u3002</p> <p>\u8003\u8651\u6211\u4eec\u5728\u57fa\u672c\u601d\u60f3\u63d0\u5230\u7684\u4e24\u4e2a\u5b50\u95ee\u9898\uff1a</p> <p>1.\u6bcf\u4e00\u6b65\u4e4b\u4e0b\u7684\\(OPT_{local}\\)\u662f\u4ec0\u4e48\uff08\u5728\u8fd9\u91cc\u9700\u8981\u4fdd\u8bc1\\(OPT\\)\u6709\u89e3\uff09</p> <p>earliest finish time</p> <p>2.\u4e3a\u4ec0\u4e48/\u5982\u4f55\u8bc1\u660e\u5f97\u5230\u7684\u89e3\u5168\u5c40\u6700\u4f18</p> <p>\u5728\u8fd9\u91cc\u6211\u4eec\u91c7\u53d6\u53cd\u8bc1\u6cd5\u7684\u65b9\u5f0f\uff0c\u5373\u5047\u8bbe\u4e00\u4e2a\u4e0d\u7b49\u4e8e\u8d2a\u5fc3\u89e3\u7684\u6700\u4f18\u89e3\uff0c\u7136\u540e\u628a\u6700\u4f18\u89e3\u5411\u8d2a\u5fc3\u89e3\u62df\u5408/\u8f6c\u6362\uff0c\u627e\u5230\u77db\u76fe\uff08\u53ef\u80fd\u662f\u6700\u4f18\u89e3\u591a\u51fa\u6765\u7684\u5143\u7d20\uff0c\u6216\u8005\u8bf4\u201c\u66f4\u4f18\u7684\u90a3\u90e8\u5206\u201d\uff0c\u548c\u8d2a\u5fc3\u7b97\u6cd5\u6216\u662f\u5176\u4ed6\u9650\u5236\u6761\u4ef6\u51b2\u7a81\uff09\uff0c\u5373\u53ef\u8bc1\u660e\u4e0d\u5b58\u5728\u6bd4\u8d2a\u5fc3\u89e3\u66f4\u4f18\u7684\u89e3\uff0c\u90a3\u4e48\u8d2a\u5fc3\u89e3\u5c31\u662f\u5168\u5c40\u6700\u4f18\u3002</p> <pre><code>// \u6211\u89c9\u5f97\u6211\u5199\u5f97\u597d\u610f\u8bc6\u6d41\uff0c\u5e94\u8be5\u4e0d\u662f\u6211\u7684\u95ee\u9898\uff0c\u662fads\u7684\u95ee\u9898\uff08\u786e\u4fe1\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6 - \u6392\u5e8f+scan\u9009\uff08online\uff09 - \\(O(N\\log{N})\\)</p> <ul> <li>\u5728\u8fd9\u91cc\u6211\u4eec\u8fd8\u884d\u751f\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5f53\u6bcf\u4e2a\u6d3b\u52a8\u90fd\u5e26\u4e0d\u4e00\u6837\u7684\u6743\u91cd\u7684\u65f6\u5019\uff0c\u8d2a\u5fc3\u89e3\u8fd8\u6709\u6548\u5417\uff1f\u7b54\u6848\u662f\u5426\u5b9a\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3e\u53cd\u4f8b\u8bc1\u660e\u3002\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u5c31\u4e0d\u5f97\u4e0d\u4f7f\u7528DP\u4e86\u3002\u7b97\u6cd5\u5982\u4e0b\uff1a</li> </ul> <p> </p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#122-huffman-coding","title":"1.2.2 Huffman Coding","text":"<p>\u95ee\u9898\u5f15\u5165</p> <p>\u5728\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5148\u5f15\u5165\u4e86\u4e00\u4e2a\u6982\u5ff5\uff1aprefix (free) code - \u5728\u8fd9\u4e2a\u7f16\u7801\u65b9\u5f0f\u4e0b\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\u4e0d\u4e3a\u53e6\u4e00\u4e2a\u5143\u7d20\u7684\u524d\u7f00\u3002</p> <p>\u90a3\u4e48\u5728\u591a\u79cd\u7f16\u7801\u65b9\u5f0f\u4e2d\uff0c\u4e5f\u5c31\u5f15\u8fdb\u4e86\u6c42\u4ee5\u9891\u7387\u4e3a\u6743\u7684\u52a0\u6743\u5e73\u5747\u4e0b\u6700\u5c0f\u7f16\u7801\u957f\u5ea6\uff08\u4ee5\u53ca\u5bf9\u5e94\u7f16\u7801\u65b9\u5f0f\uff09\u95ee\u9898\u3002</p> <p>\u95ee\u9898\u8f6c\u5316</p> <p>\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u9996\u5148\u6211\u4eec\u628a\u7f16\u7801\u8f6c\u6362\u6210\u5efa\u4e8c\u53c9\u6811\uff0c\u5de6\u5b69\u5b50\u6807<code>0</code>\u53f3\u5b69\u5b50\u6807<code>1</code>\uff0c\u5bb9\u6613\u5f97\u5230\u53d6\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u7f16\u7801\u662f\u4e00\u4e2aprefix free code\u3002\u7531\u6b64\u6211\u4eec\u5c06\u7f16\u7801\u95ee\u9898\u8f6c\u6362\u6210\u4e86\u627e\u6811\u7684\u95ee\u9898\u3002</p> <p>\u4e24\u4e2a\u8d2a\u5fc3\u5b50\u95ee\u9898</p> <p>1.\u6bcf\u4e00\u6b65\u4e4b\u4e0b\u7684\\(OPT_{local}\\)\u662f\u4ec0\u4e48\uff08\u5728\u8fd9\u91cc\u9700\u8981\u4fdd\u8bc1\\(OPT\\)\u6709\u89e3\uff09</p> <p>\u91c7\u7528bottom-up\u65b9\u5f0f\u81ea\u5e95\u5411\u4e0a\u6784\u5efa\u6811\uff0c\u6bcf\u6b21\u53d6\u4e24\u4e2a\u9891\u7387\u6700\u5c0f\u7684\u5b50\u6811/node\u5408\u5e76\u4e3a\u65b0\u5b50\u6811\u5e76\u5c06\u65b0\u5b50\u6811\u7684\u9891\u7387\u8bbe\u4e3a\u4e24\u4e2a\u65e7\u5b50\u6811\u7684\u9891\u7387\u548c\u3002\u5faa\u73af\u76f4\u5230\u5408\u5e76\u6210\u4e00\u4e2a\u6811\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6 - \u4e00\u6b21\u51cf\u5c11\u4e00\u4e2anode\uff0c\\(O(C\\log{C})\\)</p> <p>2.\u4e3a\u4ec0\u4e48/\u5982\u4f55\u8bc1\u660e\u5f97\u5230\u7684\u89e3\u5168\u5c40\u6700\u4f18</p> <p>\u9996\u5148\u6211\u4eec\u901a\u8fc7\u4e4b\u524d\u63d0\u5230\u7684exchange\u5230\u8d2a\u5fc3\u89e3+\u53cd\u8bc1\u7684\u65b9\u6cd5\u8bc1\u660e\u5728\u4e00\u4e2aopt\u7684tree\u4e2d\u9891\u7387\u6700\u5c0f\u7684\u4e24\u4e2anode\u4e00\u5b9a\u662fsiblings\uff0c\u7136\u540e\u901a\u8fc7\u4e0d\u65ad\u628a\\(T\\)\u4e2d\u4e24\u4e2a\u9891\u7387\u6700\u4f4e\u7684node\u770b\u6210\u5408\u5e76\u7684\u4e00\u4e2anode\u7684\\(T'\\)\u7684\u65b9\u5f0f\uff0c\u91c7\u7528\u524d\u9762\u7684LEMMA\u8bc1\u660e\\(T'\\)\u7684opt\u53ef\u63a8\\(T\\)\u7684opt\uff0c\u8fdb\u800c\u4f7f\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u8bc1\u660eHuffman\u7b97\u6cd5\u7684\u5168\u5c40\u6700\u4f18\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#123-prims-algorithm","title":"1.2.3 Prim's Algorithm","text":"<p>\u8bc1\u660e\u7684\u5b9a\u7406\u662f\u4efb\u610f\u5272\u8fb9\u96c6\u7684\u6700\u5c0f\u8fb9\u4e00\u5b9a\u5728MST\u5185\u3002\u4e5f\u662f\u91c7\u7528\u53cd\u8bc1\u6cd5+\u5c1d\u8bd5exchange\u5230\u8d2a\u5fc3\u89e3\u5f97\u77db\u76fe\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#13","title":"1.3 \u505a\u9898\u601d\u8def","text":"<p>\u4e3b\u8981\u8003\u70b9\u57281.2\u7684\u524d\u4e24\u4e2a\u6a21\u578b\u548c\u8d2a\u5fc3\u7684\u9002\u7528\u8303\u56f4\u8bc1\u660e\u3002\u57fa\u672c\u601d\u8def\u4e5f\u662f\u4ece\u5047\u8bbe\u975e\u8d2a\u5fc3opt\u5e76\u4e14\u5c1d\u8bd5\u66ff\u6362\u4e3a\u8d2a\u5fc3\u89e3\u7684\u53cd\u8bc1\u6cd5\u5165\u624b\u7684\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#2-np-completeness","title":"2 NP Completeness","text":"<pre><code>// \u8fd9\u4e2a\u7ae0\u8282\u6bd4\u8f83\u6709\u96be\u5ea6\uff0c\u96be\u8d77\u6765\u771f\u7684\u4e0d\u77e5\u6240\u4e91\uff0c\u6211\u4eec\u8fd8\u662f\u5c31\u68b3\u7406\u6bd4\u8f83\u57fa\u672c\u7684\u6982\u5ff5\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u611f\u89c9\u8003\u8bd5\u5927\u591a\u6570\u4e5f\u5c31\u8003\u57fa\u672c\u6982\u5ff5\u548c\u57fa\u672c\u5173\u7cfb\u3002\n</code></pre> <p>\u4ece\u8ba1\u7b97\u590d\u6742\u5ea6\u5c42\u9762\uff0c\u95ee\u9898\u6839\u636e\u662f\u5426\u53ef\u89e3\u53ef\u4ee5\u5206\u6210\u4ee5\u4e0b\u4e24\u7c7b\uff1a</p> <ul> <li>incomputable / undecidable - \u4e0d\u53ef\u89e3\u95ee\u9898\uff0c\u4e25\u683c\u6765\u8bf4\u5c31\u662f\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6bd4\u8f83\u5178\u578b\u7684\u4f8b\u5b50\u6709Halting problem\u3002</li> <li>computable  - \u53ef\u89e3\u95ee\u9898\u3002\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u7b97\u6cd5\u89e3\u51fa\u7684\u95ee\u9898\u3002\u5176\u4e2d\u6839\u636e\u590d\u6742\u5ea6\u53c8\u53ef\u4ee5\u7ec6\u5206\u4e3aP\u3001NP\u3001EXP\u3001PSPACE\u3001CO-NP\u3001RP\u7b49\u95ee\u9898\uff0c\u8981\u6ce8\u610f\u8fd9\u4e9b\u5206\u7c7b\u4e0d\u662f\u4e25\u683c\u6b63\u4ea4\u7684\u3002</li> <li>P - \u591a\u9879\u5f0f\u65f6\u95f4\u53ef\u89e3</li> <li>NP - \u591a\u9879\u5f0f\u65f6\u95f4\u53ef\u4ee5\u9a8c\u8bc1\uff0c\u6bd4\u5982SAT problem\u3001\u54c8\u5bc6\u987f\u73af\u95ee\u9898<ul> <li>\u5982\u679c\u95ee\u9898\u5c5e\u4e8eNP\u7c7b\uff0c\u90a3\u4e48\u5b58\u5728\u4e00\u4e2a\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\uff0c\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u4e0d\u8fc7\u5e76\u4e0d\u662f\u6240\u6709\u7684\u8bed\u8a00\u90fd\u53ef\u4ee5\u7531\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\u51b3\u5b9a\uff0c\u5b58\u5728\u4e00\u4e9b\u8bed\u8a00\u5c5e\u4e8e\u4e0d\u53ef\u8ba1\u7b97\u8bed\u8a00\uff0c\u5373\u5b83\u4eec\u4e0d\u80fd\u88ab\u4efb\u4f55\u7c7b\u578b\u7684\u56fe\u7075\u673a\uff08\u65e0\u8bba\u662f\u786e\u5b9a\u6027\u7684\u8fd8\u662f\u975e\u786e\u5b9a\u6027\u7684\uff09\u51b3\u5b9a\u3002</li> </ul> </li> <li>CO-NP - \u591a\u9879\u5f0f\u65f6\u95f4\u53ef\u4ee5\u9a8c\u8bc1\u7b54\u6848\u662f\u5426\u5b9a\u7684</li> </ul> <p>\u4e0d\u96be\u5f97\u51fa\uff0cP\u662fNP\u7684\u5b50\u96c6\uff08\u4e5f\u662fCO-NP\u7684\u5b50\u96c6\uff09\uff0c\u4f46\u662f\u662f\u5426\u4e3a\u771f\u5b50\u96c6\u6216\u8005\u4e24\u4e2a\u96c6\u5408\u662f\u5426\u76f8\u7b49\uff0c\u6682\u65f6\u662f\u6ca1\u6709\u88ab\u8bc1\u660e\u6216\u8005\u8bc1\u4f2a\u7684\u3002\u7136\u800c\u8003\u8651\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5176\u4e2d\u4e00\u4e2a\u601d\u8def\u5c31\u662f\u53bb\u627e\u5230NP\u4e2d\u6700\u590d\u6742\u7684\u95ee\u9898\u6bd4\u8f83\uff0c\u770b\u770b\u662f\u4e0d\u662fP\u7684\u3002\u90a3\u4e48\u8fd9\u5c31\u6d89\u53ca\u5230\u95ee\u9898\u4e4b\u95f4\u7684\u96be\u5ea6\u6bd4\u8f83\uff0c\u6211\u4eec\u91c7\u53d6\u5f52\u7ea6\uff08reduction\uff09\u7684\u65b9\u5f0f\u3002</p> <p> </p> <p>\u5728\u8fd9\u91cc\u6709\u4e24\u4e2a\u4f8b\u5b50\uff1a</p> <ol> <li>HCP(Hamilton Cycle Problem)\u53ef\u4ee5\u901a\u8fc7\u201c\u7ed9\u5df2\u6709\u8fb9\u6743\u91cd\u8d4b<code>1</code>\uff0c\u6ca1\u6709\u7684\u8fb9\u6743\u91cd\u8d4b<code>2</code>\u6269\u5c55\u4e3a\u5b8c\u5168\u56fe\u201d\u7684\u65b9\u5f0f\u5f52\u7ea6\u5230TSP(Travelling Salesman Problem) - \u5982\u679cTSP\u6709\u5c0f\u4e8e\u7b49\u4e8e\\(|V|\\)\u7684\u89e3\u5219HCP\u6709\u89e3\u3002</li> <li>Clique Problem\u53ef\u4ee5\u901a\u8fc7\u201c\u6784\u9020\u70b9\u96c6\u4e00\u6837\u3001\u8fb9\u96c6\u4e92\u8865\u7684\u56fe\\(G'\\)\u201d\u7684\u65b9\u5f0f\uff0c\u5f52\u7ea6\u5230Vertex Cover Problem\uff08\u6240\u6709\u8fb9\u5fc5\u81f3\u5c11\u6709\u4e00\u4e2a\u7aef\u70b9\u5728\u96c6\u5408\u5185\uff09\uff0c\u8fd9\u91cc\u6211\u611f\u89c9\u6784\u9020\\(G'\\)\u7684\u8fc7\u7a0b\u662f\u53ef\u9006\u7684\u4e14\u4e24\u8005\u662f\u4e92\u63a8\u7684\u6240\u4ee5\u4e8c\u8005\u53ef\u4ee5\u4e92\u76f8\u5f52\u7ea6\uff08\u5b58\u7591\uff09\uff0c\u57fa\u4e8e\u7684\u5b9a\u7406\u4e3a\uff1aC is a clique in G if and only if V - C is a vertex cover in G'\u3002\u8bc1\u660e\u53ef\u91c7\u53d6\u53cd\u8bc1\u6cd5\uff08\u6b63\u63a8\u9006\u63a8\u90fd\u8981\u8bc1\u660e\u5e76\u4e14\u90fd\u53ef\u4ee5\u8bc1\u660e\uff09\u3002</li> </ol> <p>\u5728\u5b9a\u4e49\u5f52\u7ea6\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u51faNP-C\u7684\u5b9a\u4e49\uff1aX\u662fNP-C\u7684if</p> <ul> <li>X\u662fNP\u7684</li> <li>\u4efb\u610fNP\u7684\u95ee\u9898\u90fd\u53ef\u4ee5\u5f52\u7ea6\u5230X</li> </ul> <p>\u7b2c\u4e00\u4e2aNP-C\u7684\u95ee\u9898\u662fcircuit-SAT problem\u3002</p> <p>\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u7ed9\u51fa</p> <ul> <li>\u4e00\u4e2a\u5f15\u7406\uff1a\u4e00\u4e2aNP-C\u7684\u95ee\u9898\u5982\u679c\u53ef\u4ee5\u5f52\u7ea6\u5230\u4e00\u4e2aNP\u7684\u95ee\u9898X\uff0c\u90a3\u4e48X\u4e5f\u662fNPC\u7684\u3002</li> <li>\u4e00\u4e2aLEMMA\uff1a\u5982\u679c\u4e00\u4e2aNP-C\u7684\u95ee\u9898\u88ab\u8bc1\u660e\u662fP\u7684\uff0c\u90a3\u4e48P=NP\u3002</li> <li>\u8fd9\u51e0\u4e2a\u590d\u6742\u5ea6\u7684\u5173\u7cfb\uff1a NP-H\uff1a\u81f3\u5c11\u548cNP-C\u4e00\u6837\u590d\u6742</li> </ul>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#3-approximation","title":"3 Approximation","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#31_1","title":"3.1 \u57fa\u672c\u601d\u60f3","text":"<p>\u8fd9\u5757\u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u6211\u4eec\u628a\u8ffd\u6c42opt\u7684\u8981\u6c42\u677e\u5f1b\u6210\u4e86\u8ffd\u6c42\u8fd1\u4f3c\u89e3\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u83b7\u53d6opt\u590d\u6742\u5ea6\u8fc7\u9ad8\u7684\u60c5\u51b5\u3002</p> <p>\u800c\u6211\u4eec\u4e3a\u4e86\u8861\u91cf\u8fd9\u4e2a\u8fd1\u4f3c\u7a0b\u5ea6\u7684\u597d\u574f\uff0c\u5f15\u5165\u4e86\u8fd1\u4f3c\u6bd4\u8fd9\u4e2a\u6982\u5ff5\uff1a</p> <p> </p> <p>\u800c\u6211\u4eec\u5b9a\u4e49\u5bf9\u4e8e\u4e00\u4e2a\\((1+\\epsilon)\\) - approximation\u7684\u7b97\u6cd5\uff0c\u6839\u636e\u5176\u590d\u6742\u5ea6\uff08\u5bf9\u4efb\u610f\\(\\epsilon\\)\u90fd\u6ee1\u8db3\uff09\u6709\u4ee5\u4e0b\u5206\u7c7b\uff1a</p> <p> </p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#32_1","title":"3.2 \u57fa\u672c\u4f8b\u9898","text":"<pre><code>// \u8fd9\u5757\u8bc1\u660e\u592a\u590d\u6742\u800c\u4e14\u8003\u8651\u5230\u8003\u8bd5\u662f\u9009\u62e9\u9898\uff0c\u6211\u5c31\u56eb\u56f5\u541e\u67a3\u76f4\u63a5\u8bb0\u7ed3\u8bba\u4e86\u3001\u3001\uff08\u771f\u6765\u4e0d\u53ca\u4e86.jpg\uff09\n</code></pre>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#321-bin-packing","title":"3.2.1 Bin Packing","text":"<p>\u8fd9\u4e2a\u95ee\u9898\u672c\u8eab\u662fNP-Hard\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u91c7\u53d6\u4e00\u4e9b\u8fd1\u4f3c\u7b97\u6cd5\u3002</p> <ol> <li> <p>next fit - \u987a\u5e8f\u5b58\u653e\uff0c\u653e\u4e0d\u4e0b\u5c31\u653e\u4e0b\u4e00\u4e2a\u7bb1\u5b50 - 2-approximation\uff08bound is tight\uff09 \u4e00\u4e2a tight \u7684\u8fd1\u4f3c\u6bd4\u53ea\u80fd\u8bf4\u660e\u4f60\u5bf9\u8fd9\u79cd\u7b97\u6cd5\u7684\u5206\u6790\u5230\u4f4d\u4e86\uff0c\u800c\u4e0d\u80fd\u8bf4\u660e\u8fd9\u4e2a\u95ee\u9898\u6ca1\u6709\u66f4\u597d\u7684\u7b97\u6cd5</p> </li> <li> <p>any fit</p> <ul> <li>first fit - \u627e\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u88c5\u7684\u88c5 - 1.7approximation\uff08bound is tight\uff09</li> <li>best fit - \u627e\u6700\u6ee1\u7684\u88c5 - 1.7approximation\uff08bound is tight\uff09</li> <li>worst fit - \u627e\u6700\u7a7a\u7684\u88c5</li> </ul> </li> <li> <p>fit+sort</p> <ul> <li>first fit decreasing - sort + first fit</li> <li>best fit decreasing - sort + best fit   \u8fd1\u4f3c\u6bd4\uff1a    </li> </ul> </li> </ol> <p>\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u8fd1\u4f3c\u6bd4\u6709\u4ee5\u4e0b\u7ed3\u8bba\uff1a\u9664\u975eP=NP\uff0c\u5426\u5219online\u7684\u7b97\u6cd5\u8fd1\u4f3c\u6bd4\u4e0a\u9650\u662f\\(\\frac{5}{3}\\)\uff0coffline\u5219\u662f\\(\\frac{3}{2}\\)\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#322-knapsack-problem","title":"3.2.2 Knapsack Problem","text":"<p>\u5df2\u77e5\u4f7f\u7528DP\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4f2a\u591a\u9879\u5f0f\\(O(N^2*v_{max})\\)\u7684\u7b97\u6cd5\uff0c\u5bf9\u4e8eitem\u6570\u91cf\u53ea\u80fd\u662f\u6574\u6570\u7684\u60c5\u51b5\u662fNP-Hard\u7684\u3002\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u505a\u8fd1\u4f3c\uff1f</p> <ul> <li> <p>A1 - greedy on \\(\\frac{v_i}{w_i}\\)</p> </li> <li> <p>A2 - greedy on \\(v_{i}\\)</p> </li> </ul> <p>\u663e\u7136\u8fd9\u4e24\u8005\u90fd\u4e0d\u662f\u5f88\u597d\u7684\u7b97\u6cd5\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u7ed3\u5408\u4e00\u4e0b\uff1a</p> <p>\u628a\u4e24\u4e2a\u7b97\u6cd5\u90fd\u8dd1\u4e00\u904d\uff0c\u53d6\u66f4\u4f18\u7684\u90a3\u4e2a\uff0c\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e2a\u662f2-approximation\u7684\uff0c\u8bc1\u660e\u7565\u8fc7\u4e86\uff0c\u6765\u4e0d\u53ca\u4e86\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#323-k-center-problem","title":"3.2.3 K-center Problem","text":"<p>\u8fd9\u4e2a\u95ee\u9898\u662f\u8981\u9009\u53d6k\u4e2a\u4e2d\u5fc3\u7ad9\u70b9\u4f7f\u5f97n\u4e2a\u7ad9\u70b9\u5230\u79bb\u5404\u81ea\u6700\u8fd1\u7684\u4e2d\u5fc3\u7684\u8ddd\u79bb\u6700\u5927\u503c\u6700\u5c0f\u3002</p> <p>\u76f4\u63a5\u4e0a\u7b97\u6cd5\u5427\uff1a</p> <p> </p> <p> </p> <p>\u8fd9\u91cc\u6709\u51e0\u4e2a\u6982\u5ff5\uff1a</p> <ul> <li>r - \u8fd9\u4e2a\u7b97\u6cd5\u7684\u76ee\u6807\u503c</li> <li> </li> </ul> <p>\u8fd9\u4e2a\u7b97\u6cd5\u662f2-approximation\u7684\uff0c\u5982\u679cP=NP\u90a3\u4e48bound tight\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#4-local-search","title":"4 Local Search","text":"<pre><code>// \u65f6\u95f4\u5306\u5fd9\uff0c\u53ea\u987a\u6982\u5ff5\u4e86\n</code></pre>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#41","title":"4.1 \u57fa\u672c\u6982\u5ff5","text":"<p>\u6838\u5fc3\u601d\u60f3\u662f\u5728\u89e3\u7a7a\u95f4\u9009\u4e00\u4e2a\u89e3\uff0c\u5982\u679c\u8fd9\u4e2a\u89e3\u6709\u4e00\u4e2a\u66f4\u597d\u7684neighbor\u5c31\u9009\u8fd9\u4e2aneighbor\uff0c\u4ee5\u6b64\u5faa\u73af\u3002</p> <p>\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u5c31\u662f\u5982\u4f55\u627eneighbor\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#42","title":"4.2 \u57fa\u672c\u4f8b\u9898","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#421-vertex-cover-problem","title":"4.2.1 Vertex Cover Problem","text":"<p>\u627e\u6700\u5c0f\u7684vertex cover\uff0cneighbor\u5c31\u662f\u627e\u4e00\u4e2a\u53ef\u4ee5\u901a\u8fc7\u5355\u72ec\u52a0\u4e00\u4e2a\u6216\u8005\u51cf\u4e00\u4e2a\u70b9\u5f97\u5230\u7684\u89e3\u3002\u968f\u673a\u53d6\u4e00\u4e2a\u539f\u89e3neighbor\uff0c\u5982\u679c\u70b9\u4e2a\u6570\u6bd4\u539f\u89e3\u5c11\uff0c\u76f4\u63a5\u66ff\u6362\uff0c\u5982\u679c\u5927\u4e8e\u7b49\u4e8e\u539f\u89e3\uff0c\u5b9e\u65bd\u201c\u9000\u706b\u201d\u6982\u7387\uff08\u548c\u70b9\u6570\u5dee\u6210\u53cd\u6bd4\u7684\uff09\u66ff\u6362\u3002\u5982\u679c\u4e0d\u66ff\u6362\u5219\u5faa\u73af\u7ed3\u675f\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#422-hopfield-network-problem","title":"4.2.2 Hopfield Network Problem","text":"<p>good edge - \\(W_{e}S_{u}S_{v} \uff1c 0\\)\uff0c\u5426\u5219\u4e3abad edge\u3002</p> <p> \u53ef\u4ee5\u901a\u8fc7flip unsatisfied\u7684node\u5f97\u5230\u5168\u5c40\u6700\u4f18 - \u6700\u5927\u597d\u8fb9\u6743\u91cd\u548c</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#423-maximum-cut","title":"4.2.3 Maximum Cut","text":"<p>\u662fNP-Hard\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7local search\u627e2-approximation\u89e3\uff0c\u76ee\u7684\u662f\u5272\u8fb9\u6743\u548c\u6700\u5927\u3002</p> <p>\u7b97\u6cd5\u5c31\u662fflip node u\u7684\u5f52\u5c5e\u5982\u679c</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#5-randomized-algorithms","title":"5 Randomized Algorithms","text":"<p>\u6982\u5ff5\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u5982\u6807\u9898\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#51_1","title":"5.1 \u57fa\u672c\u4f8b\u9898","text":""},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#511-hiring-problem","title":"5.1.1 Hiring Problem","text":"<p>\u8981\u6c42\u662f\u62db\u5230\u6700\u597d\u7684candidate\u7684\u524d\u63d0\u4e0b\u5c3d\u53ef\u80fd\u51cf\u5c11\u62db\u7684candidates\u6570\u91cf\uff0c\u76f4\u63a5scan\u6700\u574f\u60c5\u51b5\u4e0b\u662fn\u4e2a\uff0c\u5148\u6253\u4e71\u4e00\u904d\u518dscan\u5c31\u662f\\(O(\\log{N})\\)\u7684\u671f\u671b\u4e2a\u6570\u3002</p> <p>\u5982\u679c\u628a\u95ee\u9898\u6539\u6210\u53ea\u62db\u4e00\u4e2a\uff0c\u8981\u63d0\u9ad8\u62db\u5230\u6700\u597d\u90a3\u4e2a\u7684\u6982\u7387\\(p\\)\uff0c\u6211\u4eec\u5c31\u5148\u968f\u673a\u6253\u4e71\uff0c\u518dscan\u524dk\u4e2a\u627e\u5230\u524dk\u4e2a\u6700\u9ad8\u5206x\uff0c\u5f80\u540escan\u53d1\u73b0\u6bd4x\u8fd8\u9ad8\u5206\u7684\u5c31hire\u8fd9\u4e2a\u3002\u53ef\u4ee5\u901a\u8fc7\u6982\u7387\u8bba\u77e5\u8bc6\u8ba1\u7b97\u5f97\u5230\\(k = \\frac{n}{e}\\)\u65f6\\(p\\)\u53d6max = \\(\\frac{1}{e}\\)\u3002</p> <p>\u90a3\u4e48\u5728\u8fd9\u91cc\u8fd8\u6d89\u53ca\u5230\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u6211\u4eec\u600e\u4e48\u6253\u4e71\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e86\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <p> </p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#512-3-sat","title":"5.1.2 3-SAT","text":"<p>3\u4e2a\u53d8\u91cf\u53d6\u6216\u7684k\u4e2a\u8868\u8fbe\u5f0f\u53d6\u4e0e\u3002</p> <p>\u91c7\u7528\u4e00\u534a\u6982\u7387T\u4e00\u534a\u6982\u7387F\u7684\u65b9\u5f0f\u7ed9\u6bcf\u4e2a\u53d8\u91cf\u8d4b\u503c\uff0c\u671f\u671b\u662f\\(\\frac{7}{8}\\)\u7684\u8868\u8fbe\u5f0f\u7b26\u5408\uff0c\u800c\u6211\u4eec\u9700\u8981\u968f\u673a\\(8k\\)\u6b21\u8fd9\u6837\u53ef\u4ee5\u8fbe\u5230\u5927\u4e8e\u671f\u671b\u7684\u4e3aT\u7684\u8868\u8fbe\u5f0f\u6570\u91cf\u3002</p> <p>\u8fd9\u4e2a\u8bfe\u7a0b\u7ec4ppt\u6ca1\u6709\uff0c\u4e0d\u7ec6\u7a76\u4e86\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#513-quicksort","title":"5.1.3 QuickSort","text":"<p>\u5982\u679c\u6570\u636e\u89c4\u6a21\u5c0f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6392\uff0c\u4f46\u662f\u6570\u636e\u89c4\u6a21\u592a\u5927\u5c31\u8981\u627epivot\u7136\u540e\u5206\u5272\u95ee\u9898\uff08\u5c0f\u4e8ep\u548c\u5927\u4e8ep\u7684\u5206\u522bqsort\uff09\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u9700\u8981\u627e\u4e00\u4e2a\u8fd8\u4e0d\u9519\u7684pivot\uff0c\u4fdd\u8bc1\u53ef\u4ee5\u628a\u95ee\u9898\u5206\u5272\u5f97\u6bd4\u8f83\u597d\u3002\u6211\u4eec\u8fd9\u6837\u5b9a\u4e49\u597d\u7684pivot\uff1a</p> <p> </p> <p>\u81f3\u4e8e\u9009\u53d6\uff0c\u6211\u4eec\u5c31random pick\uff0c\u4e0d\u6ee1\u8db3\u518d\u91cd\u65b0pick\uff0c\u590d\u6742\u5ea6\u7684\u671f\u671b\u662f\\(O(N)\\)\uff0c\u603b\u590d\u6742\u5ea6\u671f\u671b\u662f\\(O(N\\log{N})\\) - \u6811\u9ad8\u6700\u591a\\(O(\\log_{\\frac{4}{3}}{N})\\)\u5c42</p> <p>\u4f46\u662f\u5176\u5b9e\u4e0d\u9009\u597dpivot\u76f4\u63a5\u6392\u7684\u671f\u671b\u4e5f\u662f\\(O(N\\log{N})\\)\uff0c\u53ef\u80fd\u65b9\u5dee\u66f4\u5927\u4e00\u70b9\u3002</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#6-parallel","title":"6 Parallel","text":"<pre><code>// \u5b66\u957f\u8bf4\u540e\u9762\u8fd9\u4e24\u5757\u8fd8\u7b97\u7b80\u5355\uff0c\u597d\u597d\u590d\u4e60\u4e00\u4e0b\n</code></pre> <p>\u786c\u4ef6\u5c42\u9762\uff0cPRAM\u662f\u7531\u5f88\u591a\u4e2a\u5904\u7406\u5668\u548c\u5171\u4eab\u7684\u4e00\u4e2a\u5185\u5b58\u6784\u6210\u7684\uff0c\u4e5f\u5c31\u6709\u4e86\u5bf9\u5e94\u7684\u4e0d\u540c\u7684\u8bfb\u5199\u7b56\u7565\uff1a</p> <ul> <li>CREW - \u540c\u65f6\u8bfb\u4e0d\u540c\u65f6\u5199</li> <li>EREW - \u4e0d\u652f\u6301\u540c\u65f6\u8bfb\u6216\u5199</li> <li>CRCW - \u90fd\u53ef\u4ee5\u540c\u65f6\u8bfb/\u5199\uff0c\u8fd9\u540e\u9762\u5305\u542b\u4e86\u5f88\u591a\u5904\u7406\u5e76\u884c\u7684\u89c4\u5219</li> </ul> <p>\u800c\u5bf9\u4e8e\u51e0\u4e2a\u5e76\u884c\u7684\u5904\u7406\u5668\uff0c\u6211\u4eec\u5c31\u8003\u8651\u4e86\u4e00\u4e9b\u5e76\u884c\u7684\u7b97\u6cd5\uff0c\u5f15\u5165\u4e24\u4e2a\u53d8\u91cf\uff1a</p> <ul> <li>\\(W\\) - \u4e0d\u8003\u8651\u5e76\u884c\u60c5\u51b5\u4e0b\u8fd9\u4e2a\u7b97\u6cd5\u603b\u5de5\u4f5c\u91cf</li> <li>\\(D\\) - \u5e76\u884c\u7b97\u6cd5\u4e0b\u6700\u957f\u7684\u4e00\u6761\u7684\u5de5\u4f5c\u91cf\uff08\u6811\u9ad8\uff09 - \u8861\u91cf\u4e86\u5e76\u884c\u7a0b\u5ea6</li> </ul> <p>\u6ce8\uff1a\u4e00\u822c\u60c5\u51b5\uff08\u9898\u76ee\u6ca1\u6709\u7279\u522b\u8bf4\u660e\uff09\u4e0b\uff0c\u6211\u4eec\u9ed8\u8ba4\u53c8\u65e0\u9650\u591a\u4e2a\u5904\u7406\u5668\uff0c\u8fd9\u4e2a\u65f6\u5019parallel\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u7b49\u540c\u4e8eD</p> <p>\u800c\u5bf9\u4e8e\u4e24\u4e2a\u7b97\u6cd5\uff0c\u5982\u679c\u4e24\u4e2a\u7b97\u6cd5\u662f\u4e32\u884c\u7684\uff0c\u90a3\u4e48\\(W = W_1 + W_2\\)\u4e14\\(D = D_1 + D_2\\)\uff1b</p> <p>\u5982\u679c\u662f\u5e76\u884c\u7684\uff0c\u90a3\u4e48\\(W = W_1 + W_2\\)\u4e14\\(D = max(D_1, D_2)\\)\u3002</p> <p>\u5bf9\u4e8e\u5904\u7406\u5668\u6570\u91cf\u4e3a\\(P\\)\u7684\u60c5\u51b5\uff0c\u6211\u4eec\uff08\u65f6\u95f4\u7d27\u8feb\u4e0d\u52a0\u8bc1\u660e\u5730\uff09\u7ed9\u51fa\u4e86\u6267\u884c\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u4e0a\u4e0b\u754c\uff1a</p> <p>\\(max(D, \\frac{W}{P}) \u2264 T_P(N) \u2264 \\frac{W}{P}+D\\)</p> <p>\u770b\u51e0\u4e2a\u4f8b\u5b50\u5427\uff1a</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#61-summation","title":"6.1 Summation","text":"<p>\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5efa\u4e2a\u6811\u81ea\u5e95\u5411\u4e0a\u4e24\u4e24\u6c42\u548c\uff0c\u540c\u5c42\u5e76\u884c\u3002</p> <p>\u6ce8\u610f\u4e00\u4e0b\uff1a</p> <ol> <li>\u8fd9\u4e2a\u6811\u7684\u56fe\u548c\u5bf9\u5e94\u4e0b\u6807\uff0c\u6700\u5e95\u5c42\u662f\\(B(0,x)\\)\uff0c\u8fd4\u56de\u503c\u662f\\(B(\\log_2{N},1)\\)</li> <li>\u8ba1\u7b97\u65b9\u5f0f\u662f\\(B(h,i) = B(h - 1, 2i-1) + B(h - 1, 2i)\\)\uff0c\u8003\u573a\u4e0a\u641e\u4e0d\u6e05\u695a\u53ef\u4ee5\u4ee3\u4e2a\u7279\u6b8a\u503c</li> </ol> <p> </p> <p>\\(W=O(N), D=O(\\log{N})\\)</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#62-prefix-sum","title":"6.2 Prefix Sum","text":"<p>\u76ee\u7684\u662f\u6c42\u4e00\u4e2a\u5e8f\u5217\u7684N\u4e2a\u524d\u7f00\u548c\u3002</p> <p>\u8003\u8651\u4e24\u79cd\u57fa\u672c\u601d\u8def\uff1a</p> <ol> <li>\u4e32\u884c\u626b\u63cf\uff0c\\(W = O(N), D = O(N)\\)</li> <li>\u4ece1\u5230N\u5efaN\u4e2a6.1\u7684\u6c42\u548c\u6811\u5e76\u884c\u8ba1\u7b97\uff0c\\(W = O(N^2), D = O(\\log{N})\\)</li> </ol> <p>\u8fd9\u4e24\u4e2a\u60c5\u51b5\u8981\u4e48\\(W\\)\u5f88\u5927\uff0c\u8981\u4e48\\(D\\)\u5f88\u5927\uff0c\u6211\u4eec\u600e\u4e48\u4f18\u5316\u5462\uff1f</p> <p>\u5f15\u5165\u4e00\u4e2a\u8282\u70b9\u7684\\(C(h,i)\\)\u8fd9\u4e2a\u5b9a\u4e49 - \u5373\\(A(1)\\)\u5230\u8fd9\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u6700\u53f3\u8fb9\u7684\u53f6\u5b50\u8282\u70b9\u7684\u548c\u3002</p> <p>\u6211\u4eec\u5148\u548c6.1\u4e00\u6837\u81ea\u5e95\u5411\u4e0a\u7b97\u597d\u6240\u6709\u7684\\(B\\)\uff0c\u4e0d\u96be\u5f97\u51fa\u6574\u68f5\u6811\u7684\u6839\u8282\u70b9\\(C\\)\u548c\\(B\\)\u662f\u76f8\u7b49\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u4ee5\u4e0b\u5173\u7cfb\u81ea\u9876\u5411\u4e0b\u8ba1\u7b97\uff1a</p> <ul> <li>\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u5b69\u5b50\\(C(h,i) = C(h+1,\\frac{i-1}{2}) + B(h,i)\\)</li> <li>\u4e00\u4e2a\u8282\u70b9\u7684\u53f3\u5b69\u5b50\\(C(h,i) = C(h+1, \\frac{i}{2})\\)</li> </ul> <p>\u6700\u540e\u6211\u4eec\u8fd4\u56de\u7684\u662f\\(C(0,1\u5230N)\\)</p> <p>\\(BC\\)\u4e32\u884c\uff0c\u6839\u636e\u4e4b\u524d\u7684\u5b9a\u7406\\(W = O(N), D= O(\\log{N})\\)</p>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#63-parallel-merge-sort","title":"6.3 Parallel Merge Sort","text":"<p>\u5728\u5f52\u5e76\u6392\u5e8f\u4e2d\u6211\u4eec\u6027\u80fd\u7684\u74f6\u9888\u5728\u4e8emerge\uff1a</p> <p> </p> <p>\u73b0\u5728\u6709\u4e00\u4e2a\u4ec0\u4e48\u7b97\u6cd5\u53ef\u4ee5\u628a\\(D\\)\u964d\u5230\\(O({\\log{N}}^2)\\)\u3002</p> <p>\u6211\u4eec\u8003\u8651\u5bf9Merge\u7684\u4f18\u5316\uff0c\u8fd9\u91cc\u5f15\u5165\u4e86rank\u7684\u6982\u5ff5\uff0c\u5148\u8ba1\u7b97\u6240\u6709rank\u518dmerge\uff1a</p> <p> </p> <p>\u5bf9\u4e8e\u5e76\u884c\u8ba1\u7b97\u6bcf\u4e00\u4e2arank\uff0c\u4e5f\u6709\u4e09\u79cd\u65b9\u5f0f\uff1a</p> <ol> <li> <p>\u4e24\u4e2a\u6307\u9488\u5206\u522b\u5728A\u548cB\u4e0a\uff0c\u987a\u5e8f\u626b\u63cf\uff1a  </p> </li> <li> <p>\u5bf9\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e8c\u5206\u67e5\u627e\uff1a  </p> </li> <li> <p>parallel ranking \u9996\u5148\u5bf9A\u548cB\u6bcf\u9694k\u53d6\u4e00\u4e2a\u5143\u7d20\uff0c\u5bf9\u8fd9\u4e9b\u5143\u7d20\u5e76\u884c\u91c7\u7528\u4e8c\u5206\u67e5\u627e\uff08\u65b9\u5f0f2\uff09\u7b97\u51farank\u5e76\u6309\u7167rank\u7684\u4f4d\u7f6e\u5206\u7ec4\uff0c\u53ef\u4ee5\u901a\u8fc7\u53cd\u8bc1\u6cd5\u8bc1\u660e\u4e24\u7ebf\u4e0d\u4f1a\u4ea4\u53c9\uff0c\u90a3\u4e48\u6bcf\u7ec4\u6700\u591a2k\u4e2a\u5143\u7d20\uff1a  \\(W_1 = O(\\frac{2N}{k}\\log{N}), D_1 = O(\\log{N})\\) \u5bf9\u6bcf\u4e00\u4e2a\u7ec4\u5e76\u884c\u5730\u91c7\u7528\u65b9\u5f0f1\u4e32\u884c\u626b\u63cf\uff0c\\(W_2 = O(N), D_2 = O(k)\\) \u56e0\u4e3a\u6b65\u9aa41\u548c2\u4e32\u884c\uff0c\u53ef\u5f97\u590d\u6742\u5ea6\uff1a</p> </li> </ol>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#64-maximum-finding","title":"6.4 Maximum Finding","text":"<p>\u6709\u5f88\u591a\u79cd\u65b9\u6cd5\u5b9e\u73b0\uff1a</p> <ol> <li> <p>\u4e32\u884c\u626b\u63cf\uff0c\\(W = O(N), D = O(N)\\)</p> </li> <li> <p>\u548csummation\u4e00\u6837\u81ea\u5e95\u5411\u4e0a\u5efa\u6811\uff0c\u8bb0\u5f55\u7684\u503c\u53d8\u6210\u5b69\u5b50\u7684max\uff0c\\(W = O(N), D = O(\\log{N})\\)</p> </li> <li> <p>\u5e76\u884c\u5730\u6bd4\u8f83\u6240\u6709\u7684pair\uff0c\u628a\u6bcf\u4e2apair\u91cc\u9762\u8f83\u5c0f\u503c\u6807\u6210<code>1</code>\uff0c\u5e76\u884c\u8bbf\u95ee\u6240\u6709\u5143\u7d20\uff0c\u53d6\u51fa\u552f\u4e00\u4e00\u4e2a\u6ca1\u6709\u6807\u6210<code>1</code>\u7684\uff0c\\(W = O(N^2), D = O(1)\\)</p> </li> <li> <p>\u57fa\u4e8epair\u6bd4\u8f83\u7684\u5206\u6cbb\u6cd5\uff0c\u5373\u5206\u6210\\(\\sqrt{N}\\)\u5757\uff0c\u6bcf\u5757\u5e76\u884c\u5730\u8dd12\uff0c\u590d\u6742\u5ea6\uff1a</p> </li> <li> <p>\u7ed3\u5408\u65b9\u6cd51\u548c\u65b9\u6cd53\uff0c\u5206\u6210\\(k\\)\u5757\uff0c\u5148\u5bf9\u6bcf\u4e00\u5757\u5e76\u884c\u5730\u4e32\u884c\u626b\u63cf\uff0c\u626b\u51fa\\(k\\)\u4e2a\u6700\u5927\u503c\uff0c\u518d\u5bf9\u8fd9\\(k\\)\u4e2a\u503c\u91c7\u7528\u65b9\u6cd53\u3002\u590d\u6742\u5ea6\uff1a  let \\(k = \\frac{N}{\\log{\\log{N}}}\\)</p> </li> <li> <p>Random Sampling \u6982\u62ec\u6765\u8bb2\u5c31\u662f\u628aA\u901a\u8fc7random sample\u7b97\u6cd5\u53d8\u6210\u4e00\u4e2a\\(N^{\\frac{7}{8}}\\)\u89c4\u6a21\u7684B\uff1a   \u7136\u540e\u4e0d\u505c\u5730\u5de7\u5999\u5206\u6cbb\u627e\u5230B\u7684max\uff1a  \u6700\u540e\u7684\u590d\u6742\u5ea6\u548c\u6982\u7387\uff1a</p> </li> </ol>"},{"location":"ADS_%E5%A4%8D%E4%B9%A0%E6%95%B4%E7%90%86/#7-external-sorting","title":"7 External Sorting","text":"<pre><code>// \u65f6\u95f4\u7d27\u8feb\uff0c\u4e0d\u518d\u7406\u4e86\uff0c\u5b66\u957f\u8bf4\u8fd9\u4e2a\u4e5f\u8981\u597d\u597d\u590d\u4e60\uff0c\u76f8\u5bf9\u7b80\u5355\n</code></pre> <p>\u8fd9\u7ae0\u53ef\u4ee5\u770bIsshiki\u4fee's notebook\u7684</p> <p>\u8003\u540e\u8865\u5751\uff1a\u8fd9\u5757\u770b\u4e0a\u9762\u5b66\u957f\u7684\u7b14\u8bb0\u786e\u5b9e\u5f88\u8db3\u591f\u4e86\uff0c\u65f6\u95f4\u6765\u4e0d\u53ca\u4e5f\u53ef\u4ee5\u9762\u5411\u5386\u5e74\u5377\u590d\u4e60\uff0c\u4e3b\u8981\u8003\u70b9\u662f\uff1a\u591a\u4e2atape\u600e\u4e48merge\u7684\u3001\u600e\u4e48\u8ba1\u7b97\u591a\u5c11\u6b21pass\uff0creplacement\u5230\u5e95\u5982\u4f55\u6267\u884c\u7684\u3002</p>"},{"location":"CMU_DeepVision_0807/","title":"Lec of prof. mattia","text":""},{"location":"CMU_DeepVision_0807/#1-transformers","title":"1 Transformers","text":"<p>\u7b80\u5355\u7684\u4ecb\u7ecdfrom chatGPT:</p> <ol> <li>\u81ea\u6ce8\u610f\u529b\u673a\u5236\uff08Self-Attention\uff09\uff1a</li> <li>Transformer\u6a21\u578b\u7684\u6838\u5fc3\u662f\u81ea\u6ce8\u610f\u529b\u673a\u5236\uff0c\u5b83\u5141\u8bb8\u6a21\u578b\u5728\u5904\u7406\u8f93\u5165\u7684\u5e8f\u5217\u65f6\uff0c\u5bf9\u5e8f\u5217\u4e2d\u4e0d\u540c\u4f4d\u7f6e\u7684\u6570\u636e\u8fdb\u884c\u6743\u8861\u548c\u5173\u8054\u3002\u8fd9\u79cd\u673a\u5236\u5e2e\u52a9\u6a21\u578b\u6355\u6349\u5230\u5e8f\u5217\u5185\u7684\u957f\u8ddd\u79bb\u4f9d\u8d56\u5173\u7cfb\u3002</li> <li>\u5728\u4e00\u4e2a\u5178\u578b\u7684\u6ce8\u610f\u529b\u673a\u5236\u5b9e\u73b0\u4e2d\uff0c\u6709\u4e09\u4e2a\u4e3b\u8981\u7684\u7ec4\u6210\u90e8\u5206\uff1aQueries\uff08\u67e5\u8be2\uff09\u3001Keys\uff08\u952e\uff09\u548cValues\uff08\u503c\uff09\u3002\u4f8b\u5982\uff0c\u5728\u7f16\u7801\u5668-\u89e3\u7801\u5668\u67b6\u6784\u4e2d\uff1a<ul> <li>\u7f16\u7801\u5668\u4f1a\u751f\u6210\u4e00\u7cfb\u5217\u8f93\u51fa\uff08\u952e\u548c\u503c\uff09\u3002</li> <li>\u89e3\u7801\u5668\u5728\u6bcf\u4e00\u6b65\u751f\u6210\u67e5\u8be2\u3002</li> <li>\u67e5\u8be2\u548c\u952e\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\uff08\u901a\u5e38\u4f7f\u7528\u70b9\u79ef\u6216\u5176\u4ed6\u76f8\u4f3c\u6027\u5ea6\u91cf\uff09\u6765\u51b3\u5b9a\u6bcf\u4e00\u4e2a\u503c\u7684\u6743\u91cd\uff08\u5373\u5173\u6ce8\u7684\u7a0b\u5ea6\uff09\u3002</li> </ul> </li> <li>\u591a\u5934\u6ce8\u610f\u529b\uff08Multi-Head Attention\uff09\uff1a</li> <li>\u5728\u4f20\u7edf\u7684\u81ea\u6ce8\u610f\u529b\u673a\u5236\u4e0a\uff0cTransformer\u4f7f\u7528\u4e86\u6240\u8c13\u7684\u591a\u5934\u6ce8\u610f\u529b\u673a\u5236\u3002\u8fd9\u79cd\u673a\u5236\u5b9e\u8d28\u4e0a\u662f\u5e76\u884c\u8fd0\u884c\u591a\u4e2a\u81ea\u6ce8\u610f\u529b\u5c42\uff0c\u6bcf\u4e2a\u5c42\u5173\u6ce8\u8f93\u5165\u6570\u636e\u7684\u4e0d\u540c\u90e8\u5206\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u4fe1\u606f\u7efc\u5408\u5728\u4e00\u8d77\u3002\u8fd9\u6837\u53ef\u4ee5\u8ba9\u6a21\u578b\u4ece\u591a\u4e2a\u89d2\u5ea6\u7406\u89e3\u6570\u636e\u3002</li> <li>\u6bcf\u4e2a\u5c42\u5173\u6ce8\u7684\u4e0d\u540c\u7684\u90e8\u5206\u53ef\u4ee5\u662f\u4e0d\u540crange\u7684\u5e8f\u5217\u5185\u5bb9\u3002</li> <li>\u4f4d\u7f6e\u7f16\u7801\uff08Positional Encoding\uff09\uff1a</li> <li>\u7531\u4e8eTransformer\u4e0d\u4f7f\u7528\u4efb\u4f55\u9012\u5f52\u6216\u5377\u79ef\u5c42\uff0c\u6a21\u578b\u672c\u8eab\u5e76\u4e0d\u5177\u5907\u5904\u7406\u5e8f\u5217\u987a\u5e8f\u7684\u80fd\u529b\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cTransformer\u5f15\u5165\u4e86\u4f4d\u7f6e\u7f16\u7801\uff0c\u901a\u8fc7\u6dfb\u52a0\u4e00\u4e9b\u4e0e\u4f4d\u7f6e\u76f8\u5173\u7684\u4fe1\u606f\u5230\u8f93\u5165\u5e8f\u5217\u4e2d\uff0c\u4f7f\u6a21\u578b\u80fd\u591f\u5229\u7528\u5e8f\u5217\u4e2d\u5143\u7d20\u7684\u987a\u5e8f\u4fe1\u606f\u3002</li> <li>\u5c42\u6b21\u7ed3\u6784\uff1a</li> <li>Transformer\u6a21\u578b\u901a\u5e38\u7531\u591a\u4e2a\u76f8\u540c\u7684\u5c42\u5806\u53e0\u800c\u6210\uff0c\u6bcf\u4e00\u5c42\u90fd\u5305\u542b\u591a\u5934\u6ce8\u610f\u529b\u5b50\u5c42\u548c\u524d\u9988\u795e\u7ecf\u7f51\u7edc\u5b50\u5c42\u3002\u6bcf\u4e2a\u5b50\u5c42\u7684\u8f93\u51fa\u90fd\u4f1a\u8fdb\u884c\u4e00\u6b21\u89c4\u8303\u5316\uff08Layer Normalization\uff09\uff0c\u5e76\u901a\u8fc7\u6b8b\u5dee\u8fde\u63a5\u4f20\u9012\u7ed9\u4e0b\u4e00\u4e2a\u5b50\u5c42\u3002</li> <li>\u7f16\u7801\u5668-\u89e3\u7801\u5668\u67b6\u6784\uff1a</li> <li>\u5728\u8bb8\u591a\u5e94\u7528\u4e2d\uff0cTransformer\u6a21\u578b\u88ab\u6784\u9020\u4e3a\u7f16\u7801\u5668-\u89e3\u7801\u5668\u7684\u5f62\u5f0f\u3002\u7f16\u7801\u5668\u8d1f\u8d23\u5904\u7406\u8f93\u5165\u6570\u636e\uff0c\u89e3\u7801\u5668\u5219\u8d1f\u8d23\u751f\u6210\u8f93\u51fa\u3002\u89e3\u7801\u5668\u5728\u751f\u6210\u6bcf\u4e2a\u8f93\u51fa\u65f6\u4e5f\u4f1a\u5229\u7528\u81ea\u6ce8\u610f\u529b\u673a\u5236\u5173\u6ce8\u5230\u7f16\u7801\u5668\u751f\u6210\u7684\u6240\u6709\u8f93\u51fa\u3002</li> </ol>"},{"location":"CMU_DeepVision_0807/#attention","title":"Attention","text":"<p>attention\u8be6\u89e3</p>"},{"location":"CMU_DeepVision_0807/#transformer-architecture","title":"Transformer architecture","text":"<p>transformer architecture\u8be6\u89e3</p>"},{"location":"CMU_DeepVision_0807/#training-bert","title":"Training BERT","text":"<p>pre-training: masked language modelling</p>"},{"location":"CMU_DeepVision_0807/#training-gpt","title":"Training GPT","text":"<p>pre-training: next token prediction</p> <p></p> <p>RLHF - reinforcement learning with human feedback: rank the output by human preference, the training the language model on [sample, reward] pairs</p> <p></p> <p>\u8fd9\u4e2a\u51cf\u4ee3\u8868\u7684\u662f\u5982\u679creward\u5728\u4e00\u6b21\u8bad\u7ec3\u4e2d\u53d8\u5316\u8fc7\u5927\uff0c\u5219\u4e0d\u592a\u503c\u5f97\u4fe1\u4efb\u8fd9\u4e2a\u7ed3\u679c\u3002</p> <p></p> <p>\u6982\u62ec\u6765\u8bf4\uff0c\u6211\u4eec\u4f1a\u6839\u636ereward\u548c\u4e24\u4e2a\u6a21\u578b\u4e4b\u95f4\u7684\u53d8\u5316\u7a0b\u5ea6\u7efc\u5408\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\u7684\u4f18\u5316\u3002</p>"},{"location":"CMU_DeepVision_0807/#2-retrieval-augmented-generation","title":"2 Retrieval augmented generation","text":""},{"location":"CMU_DeepVision_0807/#shortcomings-of-large-language-models","title":"Shortcomings of Large Language Models","text":"<ol> <li>hallucinate: \u6bd4\u5982\u4f1a\u5bf9\u8bed\u6cd5\u6b63\u786e\u4f46\u662f\u5b9e\u9645\u4e0d\u6b63\u786e\u3001\u6709\u95ee\u9898\u7684prompt\u4f5c\u51fa\u56de\u5e94</li> <li>train system not cover everything - \u6d89\u53ca\u5230\u4e2a\u4eba\u79c1\u4eba\u4fe1\u606f\u7684\u95ee\u9898LLM\u5e76\u4e0d\u4f1a\u77e5\u9053</li> <li>\u53ef\u80fd\u4e0d\u4f1a\u4f7f\u7528\u6700\u65b0\u7684\u4fe1\u606f\u8bad\u7ec3</li> </ol> <p>RAG\u8bd5\u56fe\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u3002</p>"},{"location":"CMU_DeepVision_0807/#process-of-rag","title":"Process of RAG","text":"<p>Given</p> <ul> <li>an LLM</li> <li>a prompt</li> </ul> <p>RAG is</p> <ol> <li>Retrieving information related to the prompt from one or multiple data sources.</li> <li>Augmenting the prompt with the retrieved information.</li> <li>Allowing the LLM to generate a response.</li> </ol>"},{"location":"CMU_DeepVision_0807/#preparation","title":"Preparation","text":"<p>load \\(\\to\\) split \\(\\to\\) embed \\(\\to\\) store</p>"},{"location":"CMU_DeepVision_0807/#query","title":"Query","text":"<p>query related information in the prepared data</p> <p></p> <p>\u5728retrieving\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5148\u5c06question embedded into vector</p>"},{"location":"CMU_DeepVision_0807/#techniques","title":"Techniques","text":"<ul> <li>embeddings: encoder, e.g. sentence transformers (frequently used default)</li> </ul> <ul> <li>cosine similarity:</li> </ul> <p>\u8bed\u4e49\u76f8\u540c<code>cos</code>\u503c\u4f1a\u8d8b\u8fd1\u4e8e1\uff0c\u8bed\u4e49\u76f8\u53cd\u4f1a\u8d8b\u8fd1\u4e8e-1\u3002\u6beb\u4e0d\u76f8\u5e72\u4f1a\u8d8b\u8fd1\u4e8e0\u3002</p> <ul> <li> <p>database: vector database</p> </li> <li> <p>framework to code system up</p> </li> </ul>"},{"location":"CMU_DeepVision_0807/#3-vector-databases","title":"3 Vector databases","text":"<p>why we need?</p> <ul> <li>Recall in RAG - provide store and a faster query</li> </ul>"},{"location":"CMU_DeepVision_0807/#hnsw-algorithm","title":"HNSW algorithm","text":""},{"location":"CMU_DeepVision_0807/#probability-skip-lists","title":"Probability Skip Lists","text":""},{"location":"CMU_DeepVision_0807/#navigable-small-world-graphs","title":"Navigable Small World Graphs","text":""},{"location":"CMU_DeepVision_0807/#4-api-application-programming-interface","title":"4 API - Application Programming Interface","text":""},{"location":"CMU_DeepVision_0807_1/","title":"Introductions to graphics and rendering","text":""},{"location":"CMU_DeepVision_0807_1/#forward-rendering","title":"Forward rendering","text":"<p>\u4e0b\u56fe\u4ece\u5de6\u5230\u53f3\u5c31\u662fforward rendering</p>"},{"location":"CMU_DeepVision_0807_1/#inverse-rendering","title":"Inverse rendering","text":""},{"location":"CMU_DeepVision_0807_1/#differentiable-rendering","title":"Differentiable rendering","text":"<p>\u4ece\u6e32\u67d3\u7684\u6700\u7ec8\u8f93\u51fa\uff08\u5373\u751f\u6210\u7684\u56fe\u50cf\uff09\u53ef\u4ee5\u8ba1\u7b97\u5f97\u5230\u5173\u4e8e\u5176\u8f93\u5165\u53c2\u6570\uff08\u5982\u573a\u666f\u51e0\u4f55\u3001\u6750\u8d28\u5c5e\u6027\u3001\u5149\u7167\u6761\u4ef6\u7b49\uff09\u7684\u68af\u5ea6\u3002\u6709\u4e86\u8fd9\u4e9b\u68af\u5ea6\u4fe1\u606f\uff0c\u5c31\u53ef\u4ee5\u5229\u7528\u6807\u51c6\u7684\u673a\u5668\u5b66\u4e60\u4f18\u5316\u6280\u672f\uff0c\u5982\u68af\u5ea6\u4e0b\u964d\uff0c\u6765\u81ea\u52a8\u8c03\u6574\u6e32\u67d3\u53c2\u6570\uff0c\u4ee5\u8fbe\u5230\u67d0\u79cd\u7279\u5b9a\u7684\u4f18\u5316\u76ee\u6807\u3002</p>"},{"location":"CMU_DeepVision_0807_1/#ray-tracing-and-geometric-representations","title":"Ray tracing and geometric representations","text":"<p>// to be continued</p>"},{"location":"CMU_DeepVision_0809/","title":"3D Vision","text":""},{"location":"CMU_DeepVision_0809/#3d-representations","title":"3D Representations","text":"<p>surface/boundary representations:</p>"},{"location":"CMU_DeepVision_0809/#depth-maps","title":"Depth Maps","text":"<p>representing the visible without 3D structure - 2.5D</p>"},{"location":"CMU_DeepVision_0809/#point-clouds","title":"Point Clouds","text":""},{"location":"CMU_DeepVision_0809/#triangular-meshes","title":"Triangular Meshes","text":"<p>\u4e09\u4e2a\u70b9\u7ec4\u6210\u7684\u4e09\u89d2\u5f62\u53ebface\uff0c\u8868\u793a\u4e86point cloud\u4e4b\u95f4\u70b9\u7684\u5173\u7cfb</p> <p>\u53ef\u4ee5\u8ba1\u7b97ray-triangle intersections</p> <p>\u53ef\u80fd\u6709\u6b67\u4e49\uff08\u5411\u5185\u8fd8\u662f\u5411\u5916\uff09</p> <p>\u6539\u53d8\u70b9\u7684\u4f4d\u7f6e\u53ef\u4ee5\u6539\u53d8\u7269\u54c1\u7684shape\uff0c\u4f46\u662f\u6709\u4e9b\u6539\u53d8\u6d89\u53ca\u5230\u7684\u6570\u636e\u4f1a\u6bd4\u8f83\u591a\uff0c\u4e5f\u6bd4\u8f83\u590d\u6742</p>"},{"location":"CMU_DeepVision_0809/#parametric-surfaces","title":"Parametric Surfaces","text":"<p>\u4f8b\u5982\uff1a</p> \\[f((u,v)) = (u, v, u^2- v^2)\\] <p>\u63d0\u4f9b\u4e86\u4e8c\u7ef4\u5e73\u9762\u5750\u6807\u5230\u4e09\u7ef4\u5750\u6807\u7684\u6620\u5c04</p> <p></p> <p>\u95ee\u9898\u5c31\u662f\u5982\u4f55\u627e\u5230\u4e00\u4e2aglobal structure\u53bb\u8868\u793a\u5f62\u72b6\u5916\u7684\u70b9</p> <p>rendering\u4e5f\u6bd4\u8f83\u56f0\u96be\uff0c\u56e0\u4e3a\u5bf9\u4e8e\\(f\\)\u800c\u8a00\u5f88\u96be\u5e94\u7528\u5230ray-triangle intersections</p> <p>volume representations:</p>"},{"location":"CMU_DeepVision_0809/#voxelized-3d","title":"Voxelized 3D","text":"<p>\u5c06\u4e09\u7ef4\u7a7a\u95f4\u5206\u5272\u6210\u5c0f\u7acb\u65b9\u4f53\uff08\u4f53\u7d20\uff09\uff0c\u6bcf\u4e2a\u4f53\u7d20\u4ee3\u8868\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u56fa\u5b9a\u4f53\u79ef\uff0c\u7c7b\u4f3c\u4e8e\u4e8c\u7ef4\u56fe\u50cf\u4e2d\u7684\u50cf\u7d20\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u7528\u4f53\u7d20\u6765\u63cf\u8ff0\u548c\u8868\u793a\u590d\u6742\u7684\u4e09\u7ef4\u5f62\u72b6\u548c\u7ed3\u6784\u3002</p> <p>\u76f8\u6bd4mesh\uff08\u53ea\u662f\u8868\u793a\u8868\u9762\uff09\uff0c\u8fd9\u79cd\u65b9\u5f0f\u9700\u8981\u66f4\u591a\u6570\u91cf\u7684\u4f53\u7d20\u53bb\u8fbe\u5230\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u8868\u793a\u6548\u679c\u3002</p>"},{"location":"CMU_DeepVision_0809/#implicit-surfaces","title":"Implicit Surfaces","text":"<p>\u4e00\u822c\u7684\u5f0f\u5b50\u4e3a\\(F(x,y,z) = 0\\)</p> <p>\u7269\u54c1\u5916\u90e8\u4e3a\u6b63\uff0c\u5185\u90e8\u4e3a\u8d1f</p> <p>\u5bf9\u4e8e\u8fd9\u79cd\u8868\u8fbe\u65b9\u5f0f\uff0cBoolean operations are easy\u3002</p> <ol> <li>\u8bc6\u522b\u4ea4\u70b9\u548c\u4ea4\u7ebf\uff1a</li> <li>\u8ba1\u7b97\u4e24\u4e2a\u51e0\u4f55\u4f53\u4e4b\u95f4\u7684\u4ea4\u70b9\u548c\u4ea4\u7ebf\u3002\u8fd9\u901a\u5e38\u6d89\u53ca\u51e0\u4f55\u4f53\u7684\u8fb9\u4e0e\u9762\u7684\u76f8\u4ea4\u68c0\u6d4b\u3002</li> <li>\u5bf9\u4e8e\u591a\u8fb9\u5f62\u7f51\u683c\uff0c\u8fd9\u53ef\u80fd\u9700\u8981\u904d\u5386\u6240\u6709\u9762\u548c\u8fb9\uff0c\u4f7f\u7528\u5c04\u7ebf\u6295\u5c04\u6216\u5176\u4ed6\u51e0\u4f55\u7b97\u6cd5\u6765\u68c0\u6d4b\u4ea4\u70b9\u3002</li> <li>\u5206\u5272\u51e0\u4f55\u4f53\uff1a</li> <li>\u4f7f\u7528\u4ea4\u70b9\u548c\u4ea4\u7ebf\u5c06\u539f\u59cb\u51e0\u4f55\u4f53\u5206\u5272\u6210\u591a\u4e2a\u90e8\u5206\u3002\u6bcf\u4e2a\u90e8\u5206\u4ee3\u8868\u51e0\u4f55\u4f53\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4e9b\u90e8\u5206\u53ef\u4ee5\u662f\u9762\u7247\u3001\u4f53\u7d20\u6216\u5176\u4ed6\u51e0\u4f55\u5143\u7d20\u3002</li> <li>\u786e\u4fdd\u5206\u5272\u540e\u7684\u51e0\u4f55\u4f53\u4ecd\u7136\u4fdd\u6301\u6b63\u786e\u7684\u62d3\u6251\u7ed3\u6784\u3002</li> <li>\u9009\u62e9\u4fdd\u7559\u90e8\u5206\uff1a</li> <li>\u6839\u636e\u6240\u9009\u7684\u5e03\u5c14\u64cd\u4f5c\u7c7b\u578b\uff08\u5e76\u96c6\u3001\u4ea4\u96c6\u6216\u5dee\u96c6\uff09\uff0c\u786e\u5b9a\u54ea\u4e9b\u90e8\u5206\u9700\u8981\u4fdd\u7559\u3002</li> <li>\u5e76\u96c6\uff1a\u4fdd\u7559\u4e24\u4e2a\u51e0\u4f55\u4f53\u7684\u6240\u6709\u90e8\u5206\u3002</li> <li>\u4ea4\u96c6\uff1a\u4ec5\u4fdd\u7559\u4e24\u4e2a\u51e0\u4f55\u4f53\u7684\u91cd\u53e0\u90e8\u5206\u3002</li> <li>\u5dee\u96c6\uff1a\u4fdd\u7559\u4e00\u4e2a\u51e0\u4f55\u4f53\u7684\u90e8\u5206\uff0c\u540c\u65f6\u53bb\u9664\u4e0e\u53e6\u4e00\u4e2a\u51e0\u4f55\u4f53\u91cd\u53e0\u7684\u90e8\u5206\u3002</li> <li>\u5408\u5e76\u51e0\u4f55\u4f53\uff1a</li> <li>\u5c06\u4fdd\u7559\u7684\u90e8\u5206\u5408\u5e76\u6210\u4e00\u4e2a\u65b0\u7684\u51e0\u4f55\u4f53\u3002\u8fd9\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u751f\u6210\u7f51\u683c\u6216\u66f2\u9762\u3002</li> <li>\u786e\u4fdd\u5408\u5e76\u540e\u7684\u51e0\u4f55\u4f53\u662f\u5c01\u95ed\u7684\uff0c\u5e76\u4e14\u6ca1\u6709\u81ea\u76f8\u4ea4\u7684\u90e8\u5206\u3002</li> <li>\u4fee\u590d\u62d3\u6251\u7ed3\u6784\uff1a</li> <li>\u68c0\u67e5\u5e76\u4fee\u590d\u4efb\u4f55\u62d3\u6251\u9519\u8bef\uff0c\u5982\u91cd\u590d\u9876\u70b9\u3001\u8fb9\u6216\u9762\u3002</li> <li>\u786e\u4fdd\u6240\u6709\u7684\u6cd5\u7ebf\u65b9\u5411\u4e00\u81f4\uff0c\u5e76\u4e14\u51e0\u4f55\u4f53\u7684\u8868\u9762\u662f\u5149\u6ed1\u7684\u3002</li> <li>\u4f18\u5316\u548c\u7b80\u5316\uff1a</li> <li>\u8fdb\u884c\u5fc5\u8981\u7684\u4f18\u5316\u6b65\u9aa4\uff0c\u5982\u53bb\u9664\u5197\u4f59\u7684\u51e0\u4f55\u5143\u7d20\u3001\u7b80\u5316\u7f51\u683c\u548c\u63d0\u9ad8\u8ba1\u7b97\u6548\u7387\u3002</li> <li>\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u7f51\u683c\u7b80\u5316\u7b97\u6cd5\u6765\u51cf\u5c11\u591a\u8fb9\u5f62\u6570\u91cf\uff0c\u540c\u65f6\u4fdd\u6301\u51e0\u4f55\u4f53\u7684\u5f62\u72b6\u548c\u7ec6\u8282\u3002</li> </ol> <p>\u80fd\u591f\u81ea\u7136\u5730\u63cf\u8ff0\u590d\u6742\u7684\u5f62\u72b6\u548c\u62d3\u6251\u7ed3\u6784\u3002</p>"},{"location":"CMU_DeepVision_0809/#signed-distance-function","title":"Signed Distance Function","text":"<p>\u5bf9\u4e8e\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\uff0cSDF\u8fd4\u56de\u8be5\u70b9\u5230\u6700\u8fd1\u7684\u8868\u9762\u7684\u8ddd\u79bb</p> <p>\u8fd9\u90fd\u662f\u5efa\u7acb\u5728solid shape\u7684\u57fa\u7840\u4e0a\u7684\uff0c\u4e0d\u652f\u6301\u5305\u542b\u70df\u96fe\u3001\u6db2\u4f53\u7684\u8868\u8fbe</p> <p>\u5bf9\u4e8e\u70df\u96fe\u6765\u8bf4\uff0c\u8bc6\u522b\u4e00\u4e2a\u70b9\u5728\u7269\u4f53\u91cc\u9762\u5916\u9762\u6ca1\u6709\u610f\u4e49\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u70b9\u7684\u5bc6\u5ea6\u53bb\u8868\u8fbe\u8fd9\u4e2ashape</p>"},{"location":"CMU_DeepVision_0809/#image-formation","title":"Image Formation","text":"<p>\u6211\u4eec\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u5982\u4f55\u901a\u8fc7Surface-based 3D\u5f62\u6210image</p> <p>\u6211\u4eec\u9700\u8981\u89e3\u51b3\uff1a</p> <ul> <li>Geometry - \u4e00\u4e2a3Dpoint\u5728image\u7684\u54ea\u4e2a\u70b9</li> <li>Physics - \u8fd9\u4e2a\u70b9\u6210\u50cf\u7ed3\u679c\u662f\u4ec0\u4e48\u6837\u7684</li> </ul>"},{"location":"CMU_DeepVision_0809/#geometry","title":"Geometry","text":"<p>\u4ece\u4e16\u754c\u5750\u6807\u7cfb\uff08World Frame\uff09\u5230\u76f8\u673a\u5750\u6807\u7cfb\uff08Camera Frame\uff09\u7684\u53d8\u6362\uff1a</p> <p></p> <p>\u76f8\u673a\u5750\u6807\u7cfb\u6620\u5c04\u5230image\uff1a</p> <p>\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\u4e00\u4e2a\u70b9\u4f1a\u63a5\u6536\u6765\u81ea\u56db\u9762\u516b\u65b9\u7684\u5149\uff0c\u6ca1\u6709\u529e\u6cd5\u6210\u50cf\uff0c\u6240\u4ee5\u6211\u4eec\u5f15\u5165\u4e86pinhole camera</p> <p>\u4ece\u6570\u5b66\u539f\u7406\u4e0a\u8bb2\uff0c\u6211\u4eec\u9700\u8981pinhole projection model\u5b8c\u62103D\u5f62\u72b6\u52302D image\u4f4d\u7f6e\u7684\u6620\u5c04</p> <p>\u5728\u6211\u4eec\u9ed8\u8ba4\\(f = 1\\)\u7684\u60c5\u51b5\u4e0b\uff0c\u6620\u5c04\u5173\u7cfb\u4e3a\\((X,Y,Z)\\to(\\frac{X}{Z}, \\frac{Y}{Z})\\)</p> <p>\u4f46\u662f\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u76f4\u63a5\u901a\u8fc7\u4e0a\u8ff0\u5f0f\u5b50\u5199\u51fa\u77e9\u9635\u5f62\u5f0f\uff0c\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u7ef4\u5ea6\u5b9e\u73b0\uff08\u5177\u4f53\u516c\u5f0f\u89c1prelearning\uff09</p> <p>\u5f53pinhole\u4f4d\u7f6e\u4e0d\u7b49\u4e8eimage\u539f\u70b9\u7684\u65f6\u5019\u6211\u4eec\u5bf9\u53d8\u6362\u77e9\u9635\u8981\u4f5c\u4e00\u5b9a\u7684\u6539\u53d8\u5373\u53ef\u5b9e\u73b0\u3002</p>"},{"location":"CMU_DeepVision_0809/#physics","title":"Physics","text":"<p>radiance: energy along a ray, \u53ef\u4ee5\u901a\u8fc7\u516c\u5f0f\u8ba1\u7b97\u51fa\u4e00\u6761ray\u5c04\u5230\u4e00\u4e2apoint\u4e0a\u9762\u7684energy</p> <p></p> <p>\u6839\u636e\u5f53\u524d\u70b9\u63a5\u6536\u5230\u7684ray energy\u5f3a\u5ea6\u4ee5\u53ca\u70b9\u4e0a\u7684material\u53ef\u4ee5\u8ba1\u7b97image pixel\u4e0a\u9762\u7684appearance</p> <p></p> <p>\\((\\omega\u00b7n)\\)\u662f\u76f4\u5c04\u548c\u504f\u5c04\u7684\u533a\u522b\uff08\u540c\u6837\u4e00\u6761\u5c04\u7ebf\u76f4\u5c04\u80fd\u91cf\u9ad8\uff0c\u504f\u5c04\u80fd\u91cf\u4f4e\uff09</p>"},{"location":"CMU_prelearning/","title":"\u7ebf\u4e0a\u8bfe\u7a0b","text":"<p>\u5b66\u4e60\u8def\u5f84\uff1a\u9879\u76ee\u7ebf\u4e0a\u8bfe\u7a0b\u7ed3\u5408gpt\u3001b\u7ad9\u5927\u5b66\u4ee5\u53ca\u5176\u4ed6\u5f00\u6e90\u8d44\u6e90\u81ea\u5b66\uff0c\u5982\u6709\u4fb5\u6743\u8bf7\u8054\u7cfb\u5220\u9664\ud83d\ude4f</p> <p></p>"},{"location":"CMU_prelearning/#lec0","title":"Lec0","text":""},{"location":"CMU_prelearning/#_1","title":"\u57fa\u672c\u6280\u672f","text":"<ul> <li>python</li> <li>pytorch<ul> <li>\u4e00\u70b9\u96f6\u788e\u7684\u57fa\u7840\u5b66\u4e60\u7b14\u8bb0\uff1apytorch</li> </ul> </li> <li>GitHub</li> <li>LLM (ChatGPT\u7b49)</li> </ul> <p>\u53ef\u4ee5\u4f7f\u7528GPT\u81ea\u5b66</p>"},{"location":"CMU_prelearning/#_2","title":"\u7b80\u8981\u4ecb\u7ecd","text":"<p>\u8ba1\u7b97\u673a\u89c6\u89c9\u5e94\u7528\uff1f - \u81ea\u52a8\u9a7e\u9a76\u3001\u6838\u78c1\u5171\u632f\uff08\u75be\u75c5\u68c0\u6d4b\uff09\u3001\u4fee\u56fe\u8f6f\u4ef6\uff08\u66f4\u597d\u5730\u7b26\u5408\u4eba\u7c7b\u5bf9\u7f8e\u5b66\u7684\u7406\u89e3\uff09\u3001scan\u4e00\u4e2a\u7269\u54c1\u53d8\u62103D\u6a21\u578b</p> <p>\u57fa\u672c\u4efb\u52a1\uff1a</p> <ol> <li>\u56fe\u50cf\u5206\u7c7b\uff08Image Classification\uff09\uff1a    \u56fe\u50cf\u5206\u7c7b\u7684\u4efb\u52a1\u662f\u5c06\u4e00\u5f20\u56fe\u50cf\u5206\u914d\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u7c7b\u522b\u6807\u7b7e\u4e2d\u3002\u4f8b\u5982\uff0c\u7cfb\u7edf\u53ef\u80fd\u9700\u8981\u5224\u65ad\u4e00\u5f20\u56fe\u7247\u662f\u663e\u793a\u732b\u3001\u72d7\u8fd8\u662f\u6c7d\u8f66\u3002\u8fd9\u662f\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u6700\u57fa\u7840\u4e5f\u662f\u6700\u5e7f\u6cdb\u5e94\u7528\u7684\u4e00\u79cd\u5f62\u5f0f\u3002    \u628a\u6bcf\u4e2a\u50cf\u7d20\u5206\u7c7b - \u8bc6\u522b\u7269\u54c1</li> <li>\u76ee\u6807\u68c0\u6d4b\uff08Object Detection\uff09\uff1a    \u76ee\u6807\u68c0\u6d4b\u4e0d\u4ec5\u6d89\u53ca\u8bc6\u522b\u56fe\u50cf\u4e2d\u7684\u7269\u4f53\u7c7b\u522b\uff0c\u8fd8\u9700\u8981\u5b9a\u4f4d\u8fd9\u4e9b\u7269\u4f53\u7684\u5177\u4f53\u4f4d\u7f6e\u3002\u8fd9\u901a\u5e38\u901a\u8fc7\u5728\u56fe\u50cf\u4e2d\u4e3a\u6bcf\u4e2a\u68c0\u6d4b\u5230\u7684\u5bf9\u8c61\u7ed8\u5236\u8fb9\u754c\u6846\uff08bounding boxes\uff09\u6765\u5b9e\u73b0\u3002</li> <li>\u56fe\u50cf\u5206\u5272\uff08Image Segmentation\uff09\uff1a    \u56fe\u50cf\u5206\u5272\u4efb\u52a1\u65e8\u5728\u5c06\u56fe\u50cf\u4e2d\u7684\u6bcf\u4e2a\u50cf\u7d20\u5206\u7c7b\u5230\u7279\u5b9a\u7684\u7c7b\u522b\u3002\u8fd9\u5305\u62ec\u8bed\u4e49\u5206\u5272\uff0c\u5c06\u56fe\u50cf\u4e2d\u6240\u6709\u50cf\u7d20\u5206\u7c7b\u5230\u591a\u4e2a\u7c7b\u522b\uff0c\u4ee5\u53ca\u5b9e\u4f8b\u5206\u5272\uff0c\u4e0d\u4ec5\u533a\u5206\u7c7b\u522b\uff0c\u540c\u65f6\u533a\u5206\u540c\u4e00\u7c7b\u522b\u4e2d\u7684\u4e0d\u540c\u4e2a\u4f53\u3002</li> </ol>"},{"location":"CMU_prelearning/#_3","title":"\u5728\u7ebf\u8d44\u6e90","text":"<ol> <li>CS231n &amp; EECS 498.008</li> <li>inverse problem of computer vision - computer graphics CMU 15-462</li> <li>\u6570\u5b66\u57fa\u7840 </li> </ol>"},{"location":"CMU_prelearning/#lec1","title":"Lec1","text":""},{"location":"CMU_prelearning/#1-","title":"1 - \u6570\u5b66\u57fa\u7840","text":""},{"location":"CMU_prelearning/#algebraic-structures","title":"Algebraic structures","text":"<p>\u5b9a\u4e49\u4e00\u4e2aalgebraic structure\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u96c6\u5408\u7684\u5143\u7d20\u548c\u8fd9\u4e2a\u96c6\u5408\u4e0a\u9762\u7684\u8fd0\u7b97\uff0c\u4ee5\u53ca\u8fd0\u7b97\u548c\u5143\u7d20\u7684\u6027\u8d28\uff08\u7ed3\u5408\u5f8b\u3001\u81ea\u53cd\u5f8b\u3001\u4ea4\u6362\u5f8b\u7b49\uff09</p> <p>\u95ed\u5305\uff08\u5c01\u95ed\u6027\uff09 - \u5bf9\u96c6\u5408\u5185\u4e24\u4e2a\u5143\u7d20\u505a\u8fd0\u7b97\uff0c\u5f97\u5230\u7684\u5143\u7d20\u4f9d\u7136\u5c5e\u4e8e\u8fd9\u4e2a\u96c6\u5408</p> <p>\u4e00\u79cdalgebraic structure\u662f\u5411\u91cf\u7a7a\u95f4/\u7ebf\u6027\u7a7a\u95f4</p> <p> </p> <p>\u5e94\u7528\uff1a</p> <p>IMU\uff08Inertial Measurement Unit\uff0c\u60ef\u6027\u6d4b\u91cf\u5355\u5143\uff09\u662f\u4e00\u79cd\u6d4b\u91cf\u548c\u62a5\u544a\u7269\u4f53\u7684\u7279\u5b9a\u7269\u7406\u91cf\u7684\u8bbe\u5907\uff0c\u4e3b\u8981\u7528\u4e8e\u6d4b\u91cf\u89d2\u901f\u5ea6\u548c\u7ebf\u6027\u52a0\u901f\u5ea6\u3002IMU\u901a\u5e38\u5305\u542b\u4e09\u4e2a\u6b63\u4ea4\u7684\u52a0\u901f\u5ea6\u8ba1\u548c\u4e09\u4e2a\u6b63\u4ea4\u7684\u9640\u87ba\u4eea\uff0c\u7528\u6765\u611f\u77e5\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u52a0\u901f\u5ea6\u548c\u65cb\u8f6c\u3002</p> <p>\u4e3b\u8981\u7ec4\u4ef6\uff1a</p> <ul> <li>\u52a0\u901f\u5ea6\u8ba1\uff08Accelerometers\uff09\uff1a\u7528\u4e8e\u6d4b\u91cf\u7269\u4f53\u5728\u5404\u4e2a\u65b9\u5411\u4e0a\u7684\u52a0\u901f\u5ea6\uff0c\u53ef\u7528\u4e8e\u611f\u77e5\u91cd\u529b\u5bfc\u5411\u548c\u8fd0\u52a8\u52a0\u901f\u5ea6\u3002</li> <li>\u9640\u87ba\u4eea\uff08Gyroscopes\uff09\uff1a\u7528\u4e8e\u6d4b\u91cf\u7269\u4f53\u56f4\u7ed5\u5176\u4e09\u4e2a\u8f74\u7684\u65cb\u8f6c\u901f\u5ea6\u3002</li> </ul>"},{"location":"CMU_prelearning/#group-","title":"Group - \u7fa4","text":""},{"location":"CMU_prelearning/#2-","title":"2 - \u4f18\u5316\u95ee\u9898 - \u5bfb\u627e\u6700\u5c0f\u503c","text":"<p>\u635f\u5931\u51fd\u6570\u8861\u91cf\u7684\u662f\u6a21\u578b\u9884\u6d4b\u9519\u8bef\u7684\u7a0b\u5ea6\uff0c\u4f18\u5316\u7684\u76ee\u6807\u5c31\u662f\u6700\u5c0f\u5316\u8fd9\u4e2a\u635f\u5931\u51fd\u6570\u3002\u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u6a21\u578b\u8bad\u7ec3\u7684\u8fc7\u7a0b\u5b9e\u8d28\u4e0a\u662f\u901a\u8fc7\u4f18\u5316\u7b97\u6cd5\uff08\u5982\u68af\u5ea6\u4e0b\u964d\uff09\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\uff0c\u4ece\u800c\u627e\u5230\u6700\u4f73\u6a21\u578b\u53c2\u6570\u7684\u8fc7\u7a0b\u3002</p> <p>\u6709\u4e9b\u95ee\u9898\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5faa\u73af\u3001\u8fed\u4ee3\u7684\u65b9\u5f0f\u627e\u5230\u8fd1\u4f3c\u7684\u6700\u4f18\u89e3</p> <p>\u611f\u89c9\u5f88\u50cf\u6570\u503c\u5206\u6790\u5b66\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u9700\u8981\u8bc4\u4ef7\u7279\u5b9a\u65b9\u6cd5\uff08\u5728\u4e0d\u540c\u53c2\u6570\u4e0b\uff09\u7684\u8bef\u5dee\u3001cost\uff08\u8fed\u4ee3\u6b21\u6570\uff09</p> <p>\u4f8b\u5982\u68af\u5ea6\u4e0b\u964d\u6cd5\uff0c\u6211\u4eec\u9700\u8981\u91c7\u53d6\u5408\u9002\u7684\u6b65\u957f\uff08learning rate\uff09</p> <p>\u4e0d\u540clearning rate\u7684\u6548\u679c </p> <p>\u57fa\u4e8e\u4e8c\u9636\u5bfc\u7684\u68af\u5ea6\u4e0b\u964d\u6cd5\u8ba1\u7b97\u91cf\u8fc7\u5927\uff0c\u901a\u5e38\u5e76\u4e0d\u4f1a\u8868\u73b0\u51fa\u5f88\u597d\u7684\u6027\u80fd</p> <p> </p> <p>\u53ef\u5fae\u6027\u662f\u6307\u51fd\u6570\u5728\u5b9a\u4e49\u57df\u5185\u5404\u70b9\u5904\u5747\u5177\u6709\u5bfc\u6570\uff0c\u8fd9\u662f\u6267\u884c\u68af\u5ea6\u4e0b\u964d\u7b49\u57fa\u4e8e\u68af\u5ea6\u7684\u4f18\u5316\u7b97\u6cd5\u7684\u5148\u51b3\u6761\u4ef6\u3002\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u901a\u8fc7\u8fed\u4ee3\u8fc7\u7a0b\u5bfb\u627e\u635f\u5931\u51fd\u6570\u7684\u6700\u5c0f\u503c\uff0c\u9010\u6b65\u8c03\u6574\u6a21\u578b\u53c2\u6570\u4ee5\u6700\u5c0f\u5316\u8bef\u5dee\u3002</p>"},{"location":"CMU_prelearning/#_4","title":"\u8865\u5145\uff1a\u68af\u5ea6\u4e0b\u964d\u6cd5\u539f\u7406\u4e0e\u7ec6\u8282","text":"<p>\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7684\u635f\u5931\u51fd\u6570\u662f\u6bcf\u4e00\u4e2a\u70b9\u8bef\u5dee\u5e73\u65b9\u7684\u5e73\u5747\u6570\uff1a</p> <p>\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u7ed9\u51fa\u4e00\u4e2a\u4fdd\u8bc1\u68af\u5ea6\u4e0b\u964d\uff08\u635f\u5931\u51fd\u6570\u9012\u51cf\uff09\u7684\u7b97\u6cd5\uff1a</p> <p></p> <p>\u800c\u6839\u636e\u4e0a\u8ff0\u7ebf\u6027\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7ed9\u51fa\u68af\u5ea6\u4e0b\u964d\u6cd5\u7684\u8303\u5f0f\uff1a</p> <p></p> <p>\u8fd9\u4e2a\u4e0d\u65ad\u6cbf\u7740\u68af\u5ea6\u4e0b\u964d\u7684\u65b9\u5411\u66f4\u65b0\u53c2\u6570\u4f7f\u5f97\u635f\u5931\u9012\u51cf\u7684\u8fc7\u7a0b\u4e5f\u53eb\u505a\u5411\u524d\u4f20\u9012\u3002</p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a</p>"},{"location":"CMU_prelearning/#1","title":"1.\u5b9a\u4e49\u6a21\u578b","text":"<p>\u4e00\u822c\u60c5\u51b5\u4e0b\u521d\u59cb\u5316\u4e0d\u4f1a\u8fd9\u4e48\u7b80\u5355\uff0c\u5728\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u628a\u521d\u59cb\u53c2\u6570\u90fd\u8d4b\u503c\u4e3a0\u3002</p>"},{"location":"CMU_prelearning/#2","title":"2.\u68af\u5ea6\u4e0b\u964d\u6cd5","text":"<p><code>optimizer = torch.optim.SGD(model.parameters(), lr = learning_rate)</code> - \u5b9a\u4e49\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\u5b66\u4e60\uff0c\u628a<code>.SGD</code>\u6539\u6210<code>.Adam</code>\u5c31\u662f\u4f7f\u7528Adam\u6cd5\u5b66\u4e60</p> <p>\u5728\u8ba1\u7b97\u68af\u5ea6\u8fd9\u4e00\u6b65\u4f7f\u7528\u53cd\u5411\u4f20\u64ad\u6cd5<code>loss.backward()</code>\u8ba1\u7b97\uff0c\u5728\u6bcf\u4e00\u6b21\u8ba1\u7b97\u4e4b\u524d\u8bb0\u5f97\u6e05\u7a7a\u4e0a\u6b21\u7684\u8ba1\u7b97<code>optimizer.zero_gard()</code></p> <p></p> <p>\u5176\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u5b9e\u73b0\uff08\u4e0d\u8c03\u7528\u7b2c\u4e09\u65b9\u5e93\uff09\u6a21\u578b\u53c2\u6570\u7684\u66f4\u65b0\uff1a</p> <p></p> <p>\u53cd\u5411\u4f20\u64ad</p> <p>\u5728\u6211\u4eec\u8ba8\u8bba\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u4e4b\u524d\uff0c\u9700\u8981\u5148\u5206\u6e05\u695a\u51e0\u4e2a\u6982\u5ff5\uff1a</p> <p></p> <p>\u901a\u4fd7\u6765\u8bb2\uff0c\u53cd\u5411\u4f20\u64ad\u5c31\u662f\u6839\u636e\u635f\u5931\u51fd\u6570\u8ba1\u7b97\u68af\u5ea6\uff0c\u800c\u5411\u540e\u4f20\u64ad\u5219\u5305\u62ec\uff1a</p> <ol> <li>\u8c03\u7528\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97\u68af\u5ea6</li> <li>\u6839\u636e\u68af\u5ea6\u7684\u503c\u66f4\u65b0\u6a21\u578b\u53c2\u6570</li> </ol> <p>//todo</p> <p>\u5c40\u9650\uff1a</p> <p></p> <p>\u4e0a\u56fe\u5de6\u8fb94\u8fd9\u4e2a\u70b9\u68af\u5ea6\u4e3a0\uff0c\u4f46\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u70b9</p> <p>\u4f18\u5316\uff1a\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5</p> <p></p> <p></p> <p>\u5176\u4ed6\u4f18\u5316\uff1a</p> <p>\u5f52\u4e00\u5316\uff1a\u901a\u8fc7\u8c03\u6574learning rate\u53bb\u6d88\u9664\u68af\u5ea6\u7edd\u5bf9\u503c\u5dee\u8ddd\u8fc7\u5927\u7684\u5f71\u54cd\u3002</p>"},{"location":"CMU_prelearning/#3-rigid-body-transformations","title":"3 - Rigid Body Transformations","text":"<p>\u521a\u4f53\u53d8\u6362\u4e3b\u8981\u7531\u4ee5\u4e0b\u4e24\u4e2a\u7ec4\u6210\u90e8\u5206\uff1a</p> <ol> <li> <p>\u65cb\u8f6c\uff08Rotation\uff09\uff1a    \u8868\u793a\u7269\u4f53\u7ed5\u4e00\u4e2a\u56fa\u5b9a\u70b9\uff08\u901a\u5e38\u662f\u4e2d\u5fc3\u70b9\uff09\u7684\u65cb\u8f6c\u3002\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u65cb\u8f6c\u53ef\u4ee5\u901a\u8fc7\u65cb\u8f6c\u77e9\u9635\u6216\u56db\u5143\u6570\u6765\u8868\u8fbe\u3002\u65cb\u8f6c\u77e9\u9635\u662f\u4e00\u4e2a3x3\u7684\u6b63\u4ea4\u77e9\u9635\u4e14\u884c\u5217\u5f0f\u4e3a1\uff0c\u800c\u56db\u5143\u6570\u662f\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u4e3a\u7d27\u51d1\u548c\u9c81\u68d2\u7684\u65b9\u5f0f\u6765\u8868\u793a\u65cb\u8f6c\u3002</p> </li> <li> <p>\u5e73\u79fb\uff08Translation\uff09\uff1a    \u63cf\u8ff0\u7269\u4f53\u6cbf\u76f4\u7ebf\u4ece\u4e00\u4e2a\u4f4d\u7f6e\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u7684\u8fc7\u7a0b\u3002\u5728\u6570\u5b66\u8868\u8fbe\u4e0a\uff0c\u5e73\u79fb\u53ef\u4ee5\u901a\u8fc7\u5411\u91cf\u6765\u63cf\u8ff0\uff0c\u8fd9\u4e2a\u5411\u91cf\u6307\u660e\u4e86\u79fb\u52a8\u7684\u65b9\u5411\u548c\u8ddd\u79bb\u3002</p> </li> </ol> <p>\u4f7f\u7528\u77e9\u9635\u5b9e\u73b0\u65e0\u65cb\u8f6c\u7684\u5e73\u79fb</p> <p>\u6bd4\u8f83\u96be\u7684\u5c31\u662f\u65cb\u8f6c\u64cd\u4f5c\uff1a</p> <p>\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u6211\u4eec\u4f7f\u7528\u4e58\u4e00\u4e2a\u65cb\u8f6c\u77e9\u9635\u7684\u65b9\u5f0f</p> <p>\u4e09\u7ef4\u5e73\u9762\u6211\u4eec\u6839\u636e\u4e0d\u540c\u7684\u65cb\u8f6c\u8f74\u6709\u4e09\u4e2a\u4e0d\u540c\u7684\u65cb\u8f6c\u77e9\u9635</p> <p>\u800c\u6211\u4eec\u7ed3\u5408\u8fd9\u4e09\u4e2a\u65b9\u5411\u7684\u65cb\u8f6c\uff08\u6211\u7684\u7406\u89e3\u662f\u628a\u4e00\u4e2a\u65cb\u8f6c\u6b63\u4ea4\u5206\u89e3\uff09\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e00\u822c\u7684\u65cb\u8f6c\u77e9\u9635\uff1a</p> <p> </p> <p> </p> <p>\u8fd9\u4e2a\u65b9\u6cd5\u7684\u5c40\u9650\u6027\u4e5f\u5c31\u5728\u4e8e\u6211\u4eec\u4e0d\u540c\u7684\u65cb\u8f6c\u987a\u5e8f\u4f1a\u5bfc\u81f4\u4e0d\u4e00\u6837\u7684\u7ed3\u679c\uff0c\u5355\u65b9\u5411\u7684\u65cb\u8f6c\u4f1a\u5f71\u54cd\u5176\u4ed6\u65b9\u5411</p> <p>\u8fd8\u4f1a\u6709\u201c\u4e07\u5411\u9501\u201d\u95ee\u9898\u3002\u5f53\u4fef\u4ef0\u89d2\u63a5\u8fd1\u00b190\u5ea6\u65f6\uff0c\u504f\u822a\u89d2\u548c\u6eda\u8f6c\u89d2\u4f1a\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u9020\u6210\u81ea\u7531\u5ea6\u7684\u4e27\u5931\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u56db\u5143\u6570\u6216\u5176\u4ed6\u65cb\u8f6c\u8868\u793a\u65b9\u6cd5\u6765\u907f\u514d\u3002</p> <p>\u56e0\u6b64\u6211\u4eec\u4e00\u822c\u4e5f\u4e0d\u7528\u6b27\u62c9\u89d2\u5b9e\u73b0\u65cb\u8f6c\u76f8\u5173\u4ee3\u7801\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8003\u8651\u522b\u7684\u8868\u8fbe\u65b9\u5f0f\uff1a</p> <p>\u8fd8\u6709\u4e00\u79cd\u51e0\u4e4e\u76f8\u540c\u7684\u8868\u8fbe\u65b9\u5f0f\uff1a</p> <p>\u8fd9\u5c31\u4e0d\u4f1a\u6709\u4e07\u5411\u9501\u7684\u95ee\u9898</p> <p>\u5982\u4f55\u901a\u8fc7\u8fd9\u4e2a\u8868\u793a\u65b9\u6cd5\u8ba1\u7b97\uff1f</p> <p>\\(\\theta\\)\u662f\u65cb\u8f6c\u89d2\uff0c\\(K\\)\u662f\u65cb\u8f6c\u8f74</p> <p>\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f - Quaternion </p> <p>\u4e3a\u4ec0\u4e48\u4f7f\u7528\u77e9\u9635\uff1f\u73b0\u5728\u7684GPU\u57fa\u672c\u88ab\u8bbe\u8ba1\u6210\u9002\u7528\u4e8e\u89e3\u51b3\u77e9\u9635\u95ee\u9898\u6a21\u5f0f</p> <p>\u4e8c\u7ef4\u5e73\u9762\u7ed3\u5408\u65cb\u8f6c\u548c\u5e73\u79fb</p> <p>\u4e09\u7ef4\u60c5\u51b5\u4e0b\u6211\u4eec\u62d3\u5c55\u53d8\u6362\u77e9\u9635\u7ef4\u5ea6\u5373\u53ef</p> <p>\u53ef\u4ee5\u6765\u63cf\u8ff0all kinds of motions</p>"},{"location":"CMU_prelearning/#4-camera-model","title":"4 - Camera Model","text":"<p>what is a camera? - a projection from 3D to 2D</p> <p>\u57fa\u672c\u6210\u50cf\u6a21\u578b\uff1aPinhole Camera</p> <p> </p> <p>\u90a3\u4e48\u600e\u4e48\u627e\u76f8\u673a\u7684pinhole\u5c31\u6210\u4e3a\u4e86\u4e00\u4e2a\u95ee\u9898</p> <p>\u672c\u8d28\u8fd8\u662f\u4e00\u4e2a\u4e09\u7ef4\u5230\u4e8c\u7ef4\u7684\u6620\u5c04\u95ee\u9898</p> <p>\u4f7f\u7528\u76f8\u4f3c\u4e09\u89d2\u5f62\u53ef\u4ee5\u63a8</p> <p>\u5bf9\u4e8e\u8fd9\u4e2a\u53d8\u6362\u6211\u4eec\u4e5f\u53ef\u4ee5\u5199\u6210\u77e9\u9635\u5f62\u5f0f\uff1a</p> <p> </p> <p>\u95ee\u9898\uff1a\u4e0d\u53ef\u9006\uff0c\u6ca1\u6709\u529e\u6cd5\u4ece2D\u7167\u7247\u63a8\u51fa\u5177\u4f53\u8ddd\u79bb\uff08\u4e00\u822c\u4f7f\u7528\u96f7\u8fbe\u89e3\u51b3\uff09</p> <p>\u5bf9\u4e8e\u6210\u50cf\u662f\u5012\u7740\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\\(x'\\)\u8f74\u548c\\(y'\\)\u8f74\u7ffb\u8f6c\u5373\u53ef</p> <p>\u5149\u5708\u5927\u5c0f\u7684\u5f71\u54cd\uff1f</p> <p>\u5927\u5149\u5708 - \u66f4\u6a21\u7cca</p> <p>\u4f46\u662f\u5149\u5708\u592a\u5c0f\uff0c\u8fdb\u5165\u7684\u5149\u7ebf\u4f1a\u592a\u5c11\uff1b\u6240\u4ee5\u6211\u4eec\u9700\u8981lens\uff08\u51f8\u900f\u955c\uff09\u6c47\u805a\u5149\u7ebf\uff0c\u4f46\u662f\u4e5f\u5c31\u5e26\u6765\u4e86\u53d8\u5f62\u95ee\u9898\uff1a</p> <p> </p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u591a\u4e2a\u955c\u5934\uff08\uff1f\uff0ccamera matrix\u597d\u50cf\u4e5f\u53ef\u4ee5\u89e3\u51b3\uff08\u8fd9\u5757\u6211\u6ca1\u6709\u7279\u522b\u7406\u89e3</p> <p>3D to 2D \u6620\u5c04\u7684\u7279\u70b9\uff1a</p>"},{"location":"CMU_prelearning/#lec2-deep-learning-basics","title":"Lec2: Deep Learning Basics","text":""},{"location":"CMU_prelearning/#0-cnn","title":"0 - \u8865\u5145\uff1aCNN\u57fa\u7840","text":""},{"location":"CMU_prelearning/#1_1","title":"1 \u56fe\u50cf\u8bc6\u522b","text":""},{"location":"CMU_prelearning/#11","title":"1.1 \u56fe\u7247\u7684\u6570\u5b57\u5316","text":"<p>\u56fe\u50cf\u8bc6\u522b\u7684\u7b2c\u4e00\u6b65\u5c31\u662f\u5c06\u56fe\u7247\u6570\u5b57\u5316\uff0c\u8868\u793a\u4e3a\u5f20\u91cf\u3002</p> <p></p> <p>\u50cf\u7d20\u70b9\u7684\u503c\u8868\u793a\u8be5\u50cf\u7d20\u70b9\u7684\u9ed1\u767d\u7a0b\u5ea6</p> <p>\u5bf9\u4e8e\u5f69\u8272\u56fe\u7247\uff0c\u91c7\u7528\u4e09\u539f\u8272\u5206\u89e3\uff0c\u4f7f\u7528\u4e09\u4f4d\u5f20\u91cf\u8868\u793a\u3002</p>"},{"location":"CMU_prelearning/#12","title":"1.2 \u6a21\u578b\u7ed3\u6784","text":"<p>\u9996\u5148\u628a\u6570\u5b57\u5316\u4e4b\u540e\u7684\u56fe\u7247\u6570\u636e\u94fa\u5e73\uff08\u6709\u6570\u636e\u635f\u5931\uff0c\u4f46\u662f\u4f9d\u7136\u53ef\u4ee5\u5f97\u5230\u6bd4\u8f83\u597d\u7684\u8bad\u7ec3\u7ed3\u679c\uff09\u53d8\u6210\u4e00\u7ef4\uff0c\u5373\u53ef\u8f93\u5165\u5230\u6a21\u578b\u7ed3\u6784\uff1a</p> <p></p>"},{"location":"CMU_prelearning/#13","title":"1.3 \u4ee3\u7801\u5b9e\u73b0\uff08\u673a\u5668\u5b66\u4e60\u8303\u5f0f\uff09","text":"<ol> <li> <p>\u6570\u636e\u51c6\u5907 </p> </li> <li> <p>\u751f\u6210\u6a21\u578b \u4e00\u822c\u60c5\u51b5\u4e0b\u9700\u8981\u5b9a\u4e49\u6a21\u578b\u8fd9\u4e2a\u7c7b\uff0c\u4f46\u591a\u5c42\u611f\u77e5\u5668\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528pytorch\u63d0\u4f9b\u7684\u7ebf\u6027\u6a21\u578b\uff08\u5728\u4f7f\u7528pytorch\u7684\u5c01\u88c5\u5e93\u7684\u65f6\u5019\u5c3d\u53ef\u80fd\u591a\u53bb\u770b\u5b98\u65b9\u6587\u6863\uff09 </p> </li> <li> <p>\u8bc4\u4f30\u6a21\u578b - \u5728\u8bad\u7ec3\u6a21\u578b\u4e4b\u524d\uff0c\u53ef\u4ee5\u76f4\u63a5\u6d4b\u8bd5\u6211\u4eec\u751f\u6210\u7684\u6a21\u578b\u662f\u5426\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c </p> </li> <li> <p>\u8bad\u7ec3\u6a21\u578b \u904d\u5386\u8bad\u7ec3\u6570\u636e - \u53d6\u51fa\u5f20\u91cf\u5f62\u72b6 - \u8ba1\u7b97<code>logits</code> - \u8ba1\u7b97\u635f\u5931 - \u6e05\u7a7a\u68af\u5ea6\uff08\u56fe\u7247\u4e2d\u5e94\u8be5\u662f<code>zero_grad</code>\uff09 - \u89e6\u53d1\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5 - \u66f4\u65b0\u53c2\u6570 </p> </li> <li> <p>\u751f\u6210\u5e76\u8bad\u7ec3\u6a21\u578b  \u4f18\u5316\uff1a\u4f7f\u7528\u66f4\u4f18\u7684\u6fc0\u6d3b\u51fd\u6570\u3001\u52a0\u5165\u5f52\u4e00\u5316\u5c42</p> </li> <li> <p>\u5904\u7406\u8fc7\u62df\u5408\u95ee\u9898</p> <ul> <li>\u968f\u673a\u5931\u6d3b\u4f7f\u7528pytorch\u63d0\u4f9b\u7684<code>Dropout</code>\u5373\u53ef\u5b9e\u73b0  </li> <li>\u6dfb\u52a0\u60e9\u7f5a\u9879 </li> </ul> </li> </ol> <p>\u9644\uff1a \u5173\u4e8e\u6a21\u578b\u3001\u7ec4\u4ef6\u7684\u6a21\u5f0f\u95ee\u9898\uff1a\u5728\u8bc4\u4f30\u6a21\u5f0f\u548c\u8bad\u7ec3\u6a21\u5f0f\u4e0b\u4e0d\u540c\u6a21\u578b\u548c\u7ec4\u4ef6\u7684\u8868\u73b0\u4e0d\u540c\uff0c\u56e0\u6b64\u9700\u8981\u624b\u52a8\u901a\u8fc7\u4ee3\u7801\u5207\u6362\u4ee5\u8fbe\u5230\u6700\u4f73\u7684\u8bad\u7ec3\u6548\u679c \u4f8b\u5982\u8bc4\u4f30\u6a21\u578b\u7684\u4ee3\u7801\uff1a \u968f\u673a\u5931\u6d3b\u7ec4\u4ef6\uff1a </p> <p>//TODO</p> <pre><code>Lecture Topic 1: From Neural Nets to CNN\nLecture Topic 2: Legendary Alexnet and ResNet\nLecture Topic 3: More Architectures: Unet, YOLO and more\n</code></pre> <p>\u9996\u5148\uff0c\u6211\u4eec\u8981\u7406\u89e3\u4e00\u4e2a\u795e\u7ecf\u5355\u5143\u7684\u5b9a\u4e49\uff1a</p> <p> </p> <p>\u63a5\u6536 - \u52a0\u603b - \u8f6c\u6362\uff08\u6fc0\u6d3b\u51fd\u6570\uff09 - \u53d1\u51fa</p> <p>\u6fc0\u6d3b\u51fd\u6570\u4f8b\u5b50</p> <p></p> <p>\u4f46\u662f\u4e8c\u7ef4\u7a7a\u95f4\u7684\u5206\u7c7b\u53ef\u80fd\u662f\u975e\u7ebf\u6027\u7684\uff0c\u4e5f\u5c31\u6709\u4e86\u4e0d\u540c\u7684\u6fc0\u6d3b\u51fd\u6570</p> <p></p> <p>\u73b0\u5728\u6211\u4eec\u9700\u8981\u628a\u8fd9\u4e9b\u4e1c\u897f\u5199\u6210\u77e9\u9635\u5f62\u5f0f\u800c\u4e0d\u662f\u6c42\u548c - \u66f4\u5feb\u7684\u8ba1\u7b97\u901f\u5ea6</p> <p>\u8fd9\u4e2a\u6a21\u578b\u7684\u53c2\u6570\u7531\u4e0a\u9762\u63d0\u5230\u7684\u68af\u5ea6\u4e0b\u964d\u6cd5\u8bad\u7ec3\u786e\u5b9a\u3002</p> <p>\u6700\u7b80\u5355\u7684\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4e3a\u591a\u5c42\u611f\u77e5\u5668\u6a21\u578b\uff1a</p> <p></p> <p>\u5176\u5177\u4f53\u8fd0\u7b97\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <p></p> <p>\u7531\u4e0b\u56fe\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u76f8\u6bd4\u7b80\u5355\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\uff0c\u591a\u5c42\u611f\u77e5\u5668\u53ef\u4ee5\u5b8c\u6210\u66f4\u591a\u66f4\u590d\u6742\u7684\u5206\u7c7b\uff0c\u4e0d\u8fc7\u9488\u5bf9\u4e00\u90e8\u5206\u6570\u636e\uff0c\u5728\u4e0d\u52a0\u4f18\u5316\u5730\u8bad\u7ec3\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u4e00\u5b9a\u7684\u74f6\u9888\u671f\uff0closs\u51e0\u4e4e\u4e0d\u53d8\u3002</p> <p></p>"},{"location":"CMU_prelearning/#1-image-formation-model","title":"1 - Image formation model","text":"<p>\u4e00\u5f20\u597d\u7684\u56fe\u7247\u8981\u8ba9the color blind\u4e5f\u53ef\u4ee5\u8f7b\u677e\u8fa8\u522b\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e2a\u989c\u8272\u7ef4\u5ea6\u90fd\u9700\u8981\u6709\u8fa8\u8bc6\u5ea6</p> <p> </p>"},{"location":"CMU_prelearning/#bayer-mosaic","title":"\u62dc\u8033\u6ee4\u955c\u9635\u5217\uff08Bayer mosaic\uff09","text":"<p>\u62dc\u8033\u6ee4\u955c\u662f\u4e00\u79cd\u5e7f\u6cdb\u7528\u4e8e\u6570\u7801\u6444\u50cf\u673a\u548c\u5176\u4ed6\u6210\u50cf\u8bbe\u5907\u4e2d\u7684\u5f69\u8272\u6ee4\u955c\u9635\u5217\u3002\u8fd9\u79cd\u6392\u5217\u6a21\u5f0f\u5305\u542b\u7ea2\u8272\u3001\u7eff\u8272\u548c\u84dd\u8272\u6ee4\u955c\uff0c\u5206\u5e03\u5728\u56fe\u50cf\u4f20\u611f\u5668\u7684\u50cf\u7d20\u4e0a\u3002\u8be5\u56fe\u89e3\u663e\u793a\u4e86\u6bcf\u56db\u4e2a\u50cf\u7d20\u4e2d\uff0c\u901a\u5e38\u6709\u4e24\u4e2a\u7eff\u8272\u50cf\u7d20\uff0c\u4e00\u4e2a\u7ea2\u8272\u548c\u4e00\u4e2a\u84dd\u8272\u50cf\u7d20\u3002\u8fd9\u79cd\u8bbe\u8ba1\u6a21\u4eff\u4e86\u4eba\u7c7b\u773c\u775b\u4e2d\u89c6\u7f51\u819c\u7684\u9525\u7ec6\u80de\uff0c\u4eba\u773c\u5bf9\u7eff\u8272\u7684\u7075\u654f\u5ea6\u6bd4\u7ea2\u8272\u6216\u84dd\u8272\u66f4\u9ad8\uff0c\u56e0\u6b64\u589e\u52a0\u7eff\u8272\u50cf\u7d20\u6709\u52a9\u4e8e\u63d0\u9ad8\u56fe\u50cf\u7684\u4eae\u5ea6\u611f\u77e5\u548c\u7ec6\u8282\u5206\u8fa8\u7387\u3002</p>"},{"location":"CMU_prelearning/#2-_1","title":"2 - \u5377\u79ef\u5c42","text":"<p>\u53bb\u566a - \u5e73\u5747/\u4e2d\u4f4d\u53bb\u566a\u6cd5\uff08\u5de6\u53f3\u4e24\u8fb9\u7684\u70b9\u4e00\u8d77\uff09</p> <p>\u6ee4\u6ce2\uff08\u5185\u79ef\uff09 - \u89c1dip\u7b14\u8bb0</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff1a</p> <p></p> <p>\u6548\u679c\uff1a</p> <ul> <li>Horizonal Sober filter - \u7b2c\u4e8c\u5f20</li> <li>Vertical Sobel filter - \u7b2c\u4e09\u5f20</li> </ul> <p></p> <p>\u6839\u636e\u8fd9\u4e2a\u6548\u679c\u6211\u4eec\u505a\u51fa\u4e86\u6a2a/\u7ad6edge\u68c0\u6d4b\u7684filter\uff1a</p> <p></p> <p>\u5728pytorch\u5185\u6709\u73b0\u6210\u7684\u53ef\u4ee5\u8c03\u7528\u7684\u51fd\u6570</p> <p>\u52a0\u901f\uff1arunning your image over your filter (convolution\u7684\u4ea4\u6362\u5f8b\u6210\u7acb)</p> <p>\u4f7f\u7528\u4e0d\u540c\u7684kernel\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e0d\u540c\u5c42\u7ea7\u7684\u7279\u5f81\u56fe\uff0c\u5305\u542b\u4e0d\u540c\u7ea7\u522b\u7684\u7279\u5f81</p> <p> </p>"},{"location":"CMU_prelearning/#3-","title":"3 - \u5377\u79ef\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"CMU_prelearning/#31","title":"3.1 \u68af\u5ea6\u6d88\u5931\u7684\u89e3\u51b3","text":"<p>\u907f\u514dgradient vanishing: </p> <p>\uff08\u5728underflow\u7684\u65f6\u5019\u8bef\u4ee5\u4e3a\u53d6\u5230\u4e86opt\uff09</p>"},{"location":"CMU_prelearning/#32-resnet","title":"3.2 ResNet","text":"<p>\u901a\u8fc7\u8fd9\u4e2a\u65b9\u5f0f\u89e3\u51b3\u4e86gradient vanishing\uff0c\u4e5f\u5c31\u589e\u52a0\u4e86\u652f\u6301\u7684\u5b66\u4e60layer\u7684\u4e2a\u6570</p> <p>\u5728\u4f20\u7edf\u7684\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u968f\u7740\u7f51\u7edc\u6df1\u5ea6\u7684\u589e\u52a0\uff0c\u4fe1\u606f\u5728\u901a\u8fc7\u7f51\u7edc\u7684\u6bcf\u4e00\u5c42\u65f6\u90fd\u4f1a\u9010\u6e10\u4e27\u5931\uff0c\u5bfc\u81f4\u68af\u5ea6\u6d88\u5931\uff0c\u4f7f\u5f97\u6df1\u5c42\u7f51\u7edc\u96be\u4ee5\u8bad\u7ec3\u3002ResNet \u901a\u8fc7\u5f15\u5165\u201c\u6b8b\u5dee\u5b66\u4e60\u201d\u7684\u6982\u5ff5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u5982\u679c\u6211\u4eec\u5c06\u7f51\u7edc\u5c42\u8bbe\u8ba1\u4e3a\u5b66\u4e60\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6b8b\u5dee\uff08\u5373\u5dee\u5f02\uff09\u800c\u4e0d\u662f\u76f4\u63a5\u5b66\u4e60\u8f93\u51fa\uff0c\u7f51\u7edc\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u4f18\u5316\uff0c\u56e0\u4e3a\u5728\u7406\u60f3\u60c5\u51b5\u4e0b\u6b8b\u5dee\u5e94\u662f\u96f6\uff0c\u7f51\u7edc\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u63a8\u52a8\u5176\u8f93\u51fa\u63a5\u8fd1\u8f93\u5165\u3002</p>"},{"location":"CMU_prelearning/#residual-blocks","title":"\u6b8b\u5dee\u5757\uff08Residual Blocks\uff09","text":"<p>ResNet \u7684\u57fa\u7840\u6784\u4ef6\u662f\u6b8b\u5dee\u5757\uff0c\u6bcf\u4e2a\u6b8b\u5dee\u5757\u5305\u62ec\u4e24\u6761\u8def\u5f84\uff1a</p> <ol> <li>\u4e3b\u8def\u5f84\uff1a\u4e3b\u8def\u5f84\u5305\u62ec\u6743\u91cd\u5c42\uff08\u901a\u5e38\u662f\u5377\u79ef\u5c42\uff09\uff0c\u5305\u62ec\u6fc0\u6d3b\u51fd\u6570\u548c\u6279\u5f52\u4e00\u5316\u7b49\u3002</li> <li>\u5feb\u6377\u8fde\u63a5\uff08Shortcut Connection\uff09\uff1a\u5feb\u6377\u8fde\u63a5\u5141\u8bb8\u8f93\u5165\u76f4\u63a5\u201c\u8df3\u8fc7\u201d\u4e00\u4e9b\u5c42\uff0c\u901a\u8fc7\u6dfb\u52a0\u8f93\u5165\u548c\u4e3b\u8def\u5f84\u7684\u8f93\u51fa\u6765\u5f62\u6210\u5757\u7684\u6700\u7ec8\u8f93\u51fa\u3002</li> </ol> <p>\u8fd9\u79cd\u7ed3\u6784\u5141\u8bb8\u68af\u5ea6\u76f4\u63a5\u901a\u8fc7\u5feb\u6377\u8fde\u63a5\u53cd\u5411\u4f20\u64ad\uff0c\u907f\u514d\u4e86\u5728\u6df1\u5c42\u7f51\u7edc\u4e2d\u5e38\u89c1\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898\u3002</p>"},{"location":"CMU_prelearning/#lec3","title":"Lec3","text":""},{"location":"CMU_prelearning/#deep-learning-foundations","title":"Deep Learning Foundations","text":"<ol> <li> <p>LeNet \u65e9\u671f\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u5e94\u7528\uff1a\u6570\u5b57\u8bc6\u522b \u4e3b\u8981\u5305\u62ec\uff1a\u8f93\u5165\u5c42\u3001\u51e0\u4e2a\u5377\u79ef\u5c42\uff08\u4f7f\u7528\u5377\u79ef\u6838\u63d0\u53d6\u56fe\u50cf\u7279\u5f81\uff09\u3001\u6c60\u5316\u5c42\uff08\u4e0b\u91c7\u6837\u5c42\uff0c\u51cf\u5c11\u53c2\u6570\u6570\u91cf\u548c\u8ba1\u7b97\u590d\u6742\u5ea6\uff09\uff0c\u5168\u8fde\u63a5\u5c42\u548c\u8f93\u51fa\u5c42</p> </li> <li> <p>AlexNet \u5728CPU\u4e0a\u8ba1\u7b97CNN\uff0c\u652f\u6301\u66f4\u5927\u66f4\u6df1\u5c42\u6b21\u7684\u7f51\u7edc</p> </li> <li> <p>VGG \u4f7f\u7528\u4e86\u975e\u5e38\u5747\u4e00\u7684\u67b6\u6784\uff0c\u53ea\u4f7f\u7528\u4e863x3\u7684\u5c0f\u5377\u79ef\u6838\u548c2x2\u7684\u6700\u5927\u6c60\u5316\u5c42\uff0c\u5c42\u6b21\u7ed3\u6784\u975e\u5e38\u7b80\u5355\u4f46\u6548\u679c\u663e\u8457</p> </li> <li> <p>ResNet \u89e3\u51b3\u68af\u5ea6\u6d88\u5931\u95ee\u9898\uff0c\u7f51\u7edc\u53ef\u4ee5\u627f\u8f7d\u66f4\u591a\u7684\u5c42\u6b21\u800c\u4e0d\u4f1a\u4e22\u5931\u68af\u5ea6\u4fe1\u606f\uff0c\u5927\u5e45\u5ea6\u63d0\u5347\u7f51\u7edc\u6df1\u5ea6</p> </li> </ol>"},{"location":"CMU_prelearning/#resnet","title":"ResNet\u8865\u5145","text":"<p>\u53c2\u8003\u89c6\u9891\uff1aResNet \u6ce8\uff1a\u8fd9\u6574\u4e2a\u7cfb\u5217\u90fd\u8bb2\u5f97\u7279\u522b\u597d\u4e14\u9002\u5408\u5165\u95e8</p>"},{"location":"CMU_prelearning/#start-your-first-deep-learning-project","title":"Start your first deep learning project","text":"<p>\u5b66\u4e60pytorch\u7684\u6700\u597d\u8d44\u6599\u5c31\u662f\u5b98\u7f51</p> <p></p> <p>\u9605\u8bfb\u4ee3\u7801\u7684\u65f6\u5019\u5173\u6ce8\u4e0a\u8ff0\u4e09\u4e2a\u8fc7\u7a0b\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff0c\u4ee5\u53ca\u5982\u4f55\u5b9a\u4e49\u81ea\u5df1\u7684\u6570\u636e\u96c6\u7ed3\u6784\uff1b\u8bad\u7ec3\u96c6\u3001\u9a8c\u8bc1\u96c6\uff08\u8bad\u7ec3\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u65ad\u5207\u6362\u3001\u8c03\u6574\uff09\u548c\u6d4b\u8bd5\u96c6\uff08\u5728\u6700\u5f00\u59cb\u5c31\u5206\u79bb\u51fa\u6765\uff0c\u4e0d\u53c2\u4e0e\u8bad\u7ec3\uff0c\u4e0d\u83b7\u5f97feedback\uff1b\u7528\u4e8e\u5c55\u793a\u6a21\u578b\u7684\u80fd\u529b\uff09\u7684\u5b9a\u4e49\u3002</p> <p></p> <p>\u4e0d\u540c\u7684\u6a21\u5f0f\u4e0b\u9700\u6c42\u4e0d\u4e00\u6837\uff0c\u5bf9\u5e94\u7b97\u6cd5\u5904\u7406\u4e5f\u6709\u4e0d\u4e00\u6837\uff0c\u4f8b\u5982<code>train()</code>\u8fc7\u7a0b\u4e2d\u4f1a\u6709<code>Dropout</code>\u6765\u63d0\u5347\u9c81\u68d2\u6027\uff0c\u800c<code>Eval()</code>\u4e2d\u4e0d\u4f1a\u6709\uff08\u4ee5\u8282\u7701\u7b97\u529b\uff09\uff1b<code>no_gard()</code>\u4f1a\u628agrad flow disable\u6389\uff0c\u8282\u7701\u7b97\u529b\uff0c\u652f\u6301\u5728\u77ed\u65f6\u95f4\u5185\u8dd1\u5927\u91cf\u7684\u9a8c\u8bc1\u96c6\u3002</p> <p></p> <p>OOM - cuda\u5185\u5b58\u4e0d\u591f\uff0c\u53ef\u4ee5\u8c03\u6574<code>batch_size</code></p> <p></p> <p>\u5408\u7406\u4f7f\u7528\u5faa\u73af</p> <p></p> <p>differentiable - \u53ef\u5fae\u7684 - histogram function - \u76f4\u65b9\u56fe\u51fd\u6570 - <code>argmax</code>&amp;<code>argmin</code> - \u8fd4\u56de\u6700\u5927\u6700\u5c0f\u503c\u7684\u4e0b\u6807 \u5982\u679c\u6211\u4eec\u7684final result\u662f\u5efa\u7acb\u5728\u4e0d\u53ef\u5fae\u7684\u51fd\u6570\u7684\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u505a\u51fa\u4e00\u4e9b\u8c03\u6574</p>"},{"location":"CMU_prelearning/#more-advanced-architectures-in-cnn","title":"More Advanced Architectures in CNN","text":""},{"location":"CMU_prelearning/#1fcnn","title":"1.FCNN","text":"<p>FCNN: \u5bf9\u6bcf\u4e00\u4e2a\u56fe\u7247\u7684\u50cf\u7d20\u4f5c\u5206\u7c7b - \u56fe\u7247\u5212\u5206(segmentation)</p> <p></p> <p>\u8f93\u51fa\uff1a\u5047\u8bbe\u670921\u4e2a\u7c7b\uff0c\u6bcf\u4e2a\u50cf\u7d20\u70b9\u5bf9\u5e94\u4e86\u4e00\u4e2a21\u7ef4\u5ea6\u7684\u5411\u91cf\uff0c\u5305\u542b\u4e86\u6bcf\u4e2a\u7c7b\u7684\u53ef\u80fd\u6027\u4fe1\u606f\u3002</p>"},{"location":"CMU_prelearning/#2unet","title":"2.Unet","text":"<p>\u4e5f\u662f\u4e00\u4e2a\u5e7f\u6cdb\u7528\u4e8esegmentation\u7684\u65b9\u6cd5\uff0c\u4e3b\u8981\u7528\u4e8e\u533b\u5b66\u56fe\u50cf\u7684\u5206\u5272\uff0c\u5206\u5272\u5904\u7406\u6548\u679c\u5f88\u597d</p>"},{"location":"CMU_prelearning/#3yolo-you-look-only-once","title":"3.YOLO - you look only once","text":"<p>\u7528\u4e8edetection - \u68c0\u6d4b\u5230\u7269\u4f53\u7684\u4f4d\u7f6e+\u8bc6\u522b\u7269\u4f53\u7c7b\u522b</p> <p>\u4e3b\u8981\u6846\u67b6\uff08\u4e0b\u56fe\u5de6\u8fb9\uff0c\u5df2\u7ecf\u662f\u4e00\u4e2a\u6bd4\u8f83\u901a\u7528\u7684\u8303\u5f0f\uff09\u4e0d\u53d8\uff0c\u53f3\u8fb9\u6839\u636e\u4e0d\u540c\u529f\u80fd\u548c\u7b97\u6cd5\u6709\u8c03\u6574</p> <p></p> <p>\u753b\u4e00\u4e2a\u6846\u9700\u8981\u51e0\u4e2a\u53c2\u6570\uff1f- 4\u4e2a\uff082\u4e2a\u89d2\uff09\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u7b97\u6cd5\u7684\u8f93\u51fa</p>"},{"location":"CMU_prelearning/#summary-in-cnn","title":"Summary in CNN","text":"<p>\u5bf9\u795e\u7ecf\u7f51\u7edc\u6211\u4eec\u66f4\u5e94\u8be5\u5173\u6ce8\u4e3a\u4ec0\u4e48\u8fd9\u6837\u8bbe\u8ba1\u3001\u539f\u7406\u662f\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u6bcf\u5c42\u7684\u53c2\u6570\uff0c\u8fd9\u4e9b\u901a\u5e38\u90fd\u662f\u5f88\u7ecf\u9a8c\u4e3b\u4e49\u7684\u3002</p>"},{"location":"CMU_prelearning/#3d-vision-triangulation-and-bundle-adjustment","title":"3D Vision: Triangulation and Bundle Adjustment","text":""},{"location":"CMU_prelearning/#1triangulation-","title":"1.Triangulation - \u4e09\u89d2\u5316","text":"<p>3D points from 2D points in two views</p> <p>\u5982\u4f55\u4ece\u4e00\u5f202D\u7684\u7167\u7247\u91cd\u6784\u51fa3D\u7684\u7acb\u4f53\u573a\u666f\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e4b\u524d\uff08Lec1\uff09\u63d0\u5230\u7684\u76f8\u673a\u6210\u50cf\u539f\u7406\uff0c\u91c7\u53d63D\u52302D\u6620\u5c04\u7684\u9006\u8fd0\u7b97\uff0c\u4f46\u662f\u8fd9\u4f1a\u5bfc\u81f4\u4ec0\u4e48\u95ee\u9898\u5462\uff1f</p> <p></p> <p>\u9996\u5148\u6211\u4eec\u4e0d\u80fd\u4fdd\u8bc1<code>P'</code>\u6709\u552f\u4e00\u89e3\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u901a\u5e38\u662f\u65e0\u7a77\u89e3\uff08\u6570\u5b66\u89d2\u5ea6\u6ca1\u7ed9\u51fa\u5b8c\u6574\u7684\u8bc1\u660e\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u5f97\u51fa\u4e00\u5f20\u5e73\u9762\u7167\u7247\u53ef\u4ee5\u5bf9\u5e94\u591a\u79cd3D\u573a\u666f\uff09\u3002</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u5411\u91cf\u8f74\u4e0a\u7684\u6240\u6709\u70b9\u5728\u6307\u5b9a\u5e73\u9762\u4e0a\u9762\u6210\u50cf\u7684\u4f4d\u7f6e\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u9700\u8981\u6bd4\u7269\u4f53\u6240\u5728\u7a7a\u95f4\u7ef4\u5ea6\u591a\u4e00\u4e2a\u7ef4\u5ea6\u53bb\u786e\u5b9a\u5177\u4f53\u7684\u4f4d\u7f6e\uff08\uff1f</p> <p></p> <p>\u62ff\u4e8c\u7ef4\u7c7b\u6bd4\u7684\u8bdd\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u77e9\u9635\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u65e0\u8bba\u600e\u4e48\u8c03\u6574\uff0c\u5bf9\u5e94\u53d8\u6362\u540e\u7684\u70b9\u90fd\u5728\u8fd9\u6761\u76f4\u7ebf\u4e0a</p> <p></p> <p>\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7pinhole\u7684\u5750\u6807\u4ee5\u53ca<code>P'</code>\u7684\u5750\u6807\u8868\u793a\u8fd9\u4e2a\u70b9\u57283D\u7a7a\u95f4\u7684\u6240\u6709\u5750\u6807\u53ef\u80fd\u6027\uff08\u662f\u5728\u7ea2\u8272\u7684\u4e00\u6761\u8f74\u4e0a\u9762\u7684\uff09\u3002</p> <p>\u90a3\u4e48\u901a\u8fc7\u4e24\u5f20\u56fe\u7247\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u4e24\u6761\u8f74\uff0c\u7406\u60f3\u60c5\u51b5\u4e0b\u4e24\u6761\u8f74\u7684\u4ea4\u70b9\u5c31\u662f\u90a3\u4e2a\u70b9\u7684\u5b9e\u9645\u7a7a\u95f4\u4f4d\u7f6e\u3002</p> <p></p> <p>\u4f46\u662f\u5b9e\u9645\u60c5\u51b5\u4e0b\u4e24\u8f74\u53ef\u80fd\u4f1a\u56e0\u4e3a\u5c11\u91cf\u8bef\u5dee\u800c\u4e0d\u76f8\u4ea4\uff0c\u6211\u4eec\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f</p> <p>\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u5f15\u51fa\u4e86\u4e09\u89d2\u5316\u8fd9\u4e2a\u95ee\u9898\uff1a</p> <p></p> <p>\u6211\u4eec\u5148\u5b9a\u4e49\u4e09\u7ef4\u7a7a\u95f4\u4e0b\u7684\u53c9\u4e58\u8fd0\u7b97\u5e76\u5199\u51fa\u5176\u77e9\u9635\u5f62\u5f0f</p> <p>\u6211\u4eec\u628a3D\u52302D\u7684\u6620\u5c04\u5199\u6210\u77e9\u9635\u5f62\u5f0f\uff0c\u53ef\u4ee5\u53d1\u73b0<code>x</code>\u53c9\u4e58<code>PX</code>\u4e3a\\(0\\)\uff08\u53c9\u4e58\u7684\u6027\u8d28\uff09\uff1a</p> <p></p> <p>\u628a\u8fd9\u4e2a\u5f0f\u5b50\u5c55\u5f00\u6211\u4eec\u53ef\u4ee5\u89e3\u51fa<code>X</code>\u7684\u6240\u6709\u89e3\u3002</p> <p>// \u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u53ef\u4ee5\u89e3\u51b3\u5b9e\u9645\u4e0d\u76f8\u4ea4\u95ee\u9898\uff1f- TODO</p>"},{"location":"CMU_prelearning/#2epipolar-geometry-","title":"2.Epipolar Geometry - \u5bf9\u6781\u7ebf\u51e0\u4f55","text":"<p>\u5b9a\u4e49\u5982\u4e0b\uff0c<code>o</code>\u662f\u4e24\u4e2apinhole\uff0cP\u662f\u7406\u60f3\u60c5\u51b5\u4e0b\u76843D\u70b9\u4f4d</p> <p></p> <p>\u6839\u636e\u51e0\u4f55\u5173\u7cfb\u6211\u4eec\u53ef\u4ee5\u5f97\u5230<code>x</code>\u5728\u53e6\u4e00\u5f20\u56fe\u4e0a\u7684\u6620\u5c04<code>x'</code>\u4e00\u5b9a\u5b58\u5728\u4e8e\u53e6\u4e00\u5f20\u56fe\u7684\u5bf9\u9f50\u7ebf<code>l'</code>\u4e0a\uff1a</p> <p></p> <p>All epipolar lines in an image intersect at the epipole. - \u4e0d\u540c\u7684\u5b9e\u9645\u70b9\u4f1a\u786e\u5b9a\u4e0d\u540c\u7684<code>l</code>\uff0c\u4f46\u662f\u5b83\u4eec\u4e00\u5b9a\u90fd\u7ecf\u8fc7<code>e</code></p> <p><code>e</code>\u662f\u7531<code>o</code>\u548c<code>o'</code>\u70b9\u8fde\u7ebf\u7684baseline\u5728\u4e24\u5f20\u5e73\u9762\u4e0a\u9762\u6295\u5f71\u786e\u5b9a\u7684\uff0c\u53ef\u4ee5\u5728\u5e73\u9762\u5916</p> <p>\u5728\u6211\u4eec\u77e5\u9053\u8fd9\u4e2a\u539f\u7406\u4e4b\u540e\uff0c\u5728\u4e00\u5f20\u56fe\u7247\u4e0a\u627e\u53e6\u4e00\u79cd\u56fe\u7247\u7684\u5bf9\u5e94\u70b9\u7684\u641c\u7d22\u8303\u56f4\u53ef\u4ee5\u4ece\u6574\u5f20\u56fe\u7247\u51cf\u5c0f\u5230\u4e00\u6761\u76f4\u7ebf\u3002</p> <p>\\(O(N^2)\\to O(N)\\)</p>"},{"location":"CMU_prelearning/#3essentialfundamental-matrix-","title":"3.Essential/Fundamental Matrix - \u672c\u8d28\u77e9\u9635&amp;\u57fa\u7840\u77e9\u9635","text":"<p>Epipolar line\u7684\u77e9\u9635\u8868\u793a\uff1a</p> <p></p> <p>\u7531\u6b64\u6211\u4eec\u6709\u4e86\u5bf9Essential matrix <code>E</code>\u7684\u5b9a\u4e49\uff0c\u5373\u5c06<code>x</code>\u6620\u5c04\u5230<code>l'</code>\u7684\u8f6c\u6362\u77e9\u9635\uff1a</p> <p></p> <p>\u6211\u4eec\u4e0d\u96be\u63a8\u51fa\uff1a</p> <p></p> <p>\u7531\u4e0a\u8ff0\u7b49\u5f0f\u6211\u4eec\u53ef\u4ee5\u89e3\u51fa<code>E</code></p>"},{"location":"CMU_prelearning/#finding-correspondence","title":"Finding Correspondence","text":"<p>\u6211\u4eec\u628a\u4e0d\u540c\u5e73\u9762\u7684\u4e24\u4e2a\u70b9\u7684\u76f8\u5bf9\u8ddd\u79bb\u8bb0\u4e3a<code>d</code>\uff08\u89c6\u5dee - disparity\uff09\uff0c\u901a\u8fc7\u8fd9\u4e2a\u503c\u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\u8fd9\u4e2a\u5b9e\u9645\u4f4d\u7f6e\u8ddd\u79bbbaseline\u7684\u6df1\u5ea6\u3002</p> <p></p> <p>\u4e5f\u5c31\u662f\u5229\u7528\u8fd9\u4e2a\u539f\u7406\uff0c\u8bde\u751f\u4e863D\u7535\u5f71\u6280\u672f\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u901a\u8fc7\u540c\u4e00\u7269\u4f53\u4e24\u5f20\u7167\u7247\u8ba1\u7b97\u7269\u4f53\u8ddd\u79bbbaseline\u7684\u6df1\u5ea6\u5462\uff1f</p> <ul> <li>\u9996\u5148\u6211\u4eec\u7684baseline\u8981\u8db3\u591f\u957f\uff0c\u4e24\u4e2a\u773c\u775b\u4e4b\u95f4\u7684\u8ddd\u79bb\u8fc7\u77ed\u901a\u5e38\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u6709\u5f88\u660e\u663e\u7684\u89c6\u5dee</li> <li>\u8981\u628a\u4e24\u5f20\u56fe\u7247\u5148\u4f5c\u77eb\u6b63\uff08rectified\uff09\u4f7f\u5f97\u56fe\u7247\u5448\u73b0\u5e73\u884c\u62cd\u6444\u7684\u6548\u679c\uff0c\u8fd9\u6837\u641c\u7d22\u5bf9\u5e94\u70b9\u7684\u7b97\u6cd5\u53ef\u4ee5\u53d8\u6210\u53ea\u5728\u4e00\u6761\u7ebf\u4e0a\u641c\u7d22\uff0c\u5927\u5e45\u5ea6\u51cf\u5c0f\u7b97\u6cd5\u590d\u6742\u5ea6</li> </ul> <p>\u7b97\u6cd5\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <p></p> <p>\u4f46\u662f\u5b9e\u9645\u4e0a\u4fdd\u8bc1\u4e24\u5f20\u7167\u7247\u5e73\u884c\u62cd\u6444\u662f\u5f88\u56f0\u96be\u7684\uff0c\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u8fdb\u884c\u4fee\u6b63\u5462\uff1f- OpenCV\u6709\u63d0\u4f9b\u5c06\u4e24\u5f20\u56fe\u7247\u6620\u5c04\u5230\u540c\u4e00\u5e73\u9762\u7684\u51fd\u6570</p> <p>\u6211\u4eec\u5982\u4f55\u5b9e\u73b0\u4e0a\u8ff0\u7b97\u6cd5\u8fc7\u7a0b\u4e2d\u76842.b\u7684best match\uff1f</p> <p>\u6709\u4e09\u79cd\u65b9\u6cd5\uff1a</p> <ol> <li>filter</li> <li>filter with zero-mean template </li> <li>SSD </li> </ol> <p>\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u7a97\u53e3\u5927\u5c0fmake sense\uff0c\u7a97\u53e3\u8d8a\u5c0fnoise\u8d8a\u591a\u4e5f\u7ec6\u8282\u8d8a\u591a\u3002</p>"},{"location":"CMU_prelearning/#more-sensors-for-3d","title":"More Sensors (for 3D)","text":"<ul> <li> <p>Stereo Camera</p> </li> <li> <p>Light Field Camera</p> </li> <li> <p>Structured Light - \u901a\u8fc7\u4e0d\u540c\u9891\u7387\u70b9\u7684\u6295\u5f71\u7cbe\u786e\u5b9a\u4f4d3D point</p> </li> </ul> <p></p> <ul> <li>1D LiDAR</li> </ul> <p></p> <ul> <li> <p>Time of flight LiDARs - \u901a\u8fc7\u5149\u98de\u884c\u7684\u65f6\u95f4\u6d4b\u8ddd</p> </li> <li> <p>Infrared Camera - \u68c0\u6d4b\u7ea2\u5916\u5149\u7b49\uff0c\u68c0\u6d4bhuman/heat sources</p> </li> <li> <p>Event Camera - only capture pixel change </p> </li> </ul> <p></p> <p>\u901a\u8fc7event camera\u91cd\u5efa\u51fa\u6765\u76843D Vision\u53ea\u6709\u8fb9\u7f18\u3001\u89d2\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u8fd0\u52a8\u5bb9\u6613\u89e6\u53d1event camera\u7684\u8ffd\u8e2a</p> <p>\u5bf9\u4e8e\u5b9e\u9645\u95ee\u9898\uff0c\u6211\u4eec\u901a\u5e38\u6709\u4e0d\u6b62\u4e24\u53f0\u76f8\u673a\uff0c\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f</p> <ul> <li>Start with an initial guess - \u4f7f\u7528\u4e24\u5f20\u7167\u7247\u83b7\u53d6\u4e00\u4e2a\u521d\u59cb3D\u731c\u6d4b\u70b9</li> <li>Project the estimated 3D points into the estimated camera images</li> <li>Compare locations of the projected 3D points with measured(2D) ones</li> <li>Adjust to minimize error in the images</li> </ul>"},{"location":"CMU_prelearning/#lec4","title":"Lec4","text":""},{"location":"CMU_prelearning/#slam-simultaneous-localization-and-mapping","title":"SLAM - Simultaneous Localization and Mapping","text":"<p>\u5b9e\u65f6\u76843D\u5efa\u6a21</p> <p>\u8c03\u6574\u7cbe\u5ea6\u3001\u89e3\u51b3accumulated error\u7684\u4e00\u79cd\u65b9\u5f0f - loop closure</p>"},{"location":"CMU_prelearning/#advanced-computer-vision","title":"Advanced Computer Vision","text":"<p>\u4ece\u795e\u7ecf\u7f51\u7edc\u5f00\u59cb\uff0c\u6839\u636e\u8f93\u5165\u8f93\u51fa\u89c4\u6a21\u6211\u4eec\u53ef\u4ee5\u628a\u795e\u7ecf\u7f51\u7edc\u5206\u7c7b\uff1a</p> <p></p>"},{"location":"CMU_prelearning/#rnn","title":"RNN","text":"<p>\u901a\u5e38\u63a5\u6536\u5e8f\u5217\u6570\u636e\u8f93\u5165\uff0c\u8fd9\u4e2a\u795e\u7ecf\u7f51\u7edc\u9690\u85cf\u5c42\u7684\u7ed3\u70b9\u7684\u5185\u90e8\u72b6\u6001\u662f\u4e0d\u65ad\u66f4\u65b0\u7684</p> <p></p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7528\u5982\u4e0b\u7684\u56fe\u793a\u8868\u793a\uff08\u4e0d\u8fc7\\(W\\)\u662f\u4e00\u76f4\u4e0d\u53d8\u7684\uff09</p> <p></p> <p>\u8fd9\u4e2a\u795e\u7ecf\u7f51\u7edc\u4e5f\u53ef\u4ee5\u5b9e\u73b0many to many\u7684\u8f93\u5165\u8f93\u51fa</p> <p></p> <p>\u7f3a\u9677\uff1a\u65e0\u6cd5\u89e3\u51b3\u5012\u88c5\u95ee\u9898\u3002</p> <p>\u53ef\u4ee5\u5148\u8f93\u51fa\u4e00\u4e2a\u6574\u4f53\u7684decode\u65b9\u5f0f\\(h_T\\)\u518d\u9010\u4e2a\u8f93\u51fa</p> <p></p> <p>\u53ef\u4ee5\u4f7f\u7528CNN\u548cRNN\u7ed3\u5408\u7684\u65b9\u5f0f\u5b9e\u73b0\u56fe\u7247\u5185\u5bb9\u7684\u6982\u8ff0</p> <p></p> <p>LSTM\u89e3\u51b3\u4e86RNN\u7684\u68af\u5ea6\u6d88\u5931\u95ee\u9898\uff0c\u6838\u5fc3\u601d\u60f3\u548cresnet\u4e00\u81f4\u3002</p> <p>\u89e3\u51b3\u6570\u636e\u3001\u5750\u6807\u8f74\u4ea4\u6362\u95ee\u9898\uff1apermutation matrix</p> <p></p>"},{"location":"CMU_prelearning/#_5","title":"\u81ea\u6ce8\u610f\u529b\u673a\u5236","text":"<p>\u540c\u6837\uff0c\u56fe\u7247\u6982\u8ff0\u7684\u4efb\u52a1\u53ef\u4ee5\u7ed3\u5408CNN\u548c\u81ea\u6ce8\u610f\u529b\u673a\u5236\u5b8c\u6210\uff1a</p> <p></p> <p>CNN\u4e4b\u540e\u5c06\u56fe\u7247\u5206\u5272\u6210blocks\u7136\u540e\u518d\u4f7f\u7528\u81ea\u6ce8\u610f\u529b\u673a\u5236captioning</p>"},{"location":"CMU_prelearning/#transformer","title":"Transformer","text":"<p>\u4f18\u70b9\uff1a</p> <ul> <li>Parallel</li> <li>Long range attention</li> <li>Scales up at \\(O(N^2)\\)</li> </ul>"},{"location":"CMU_prelearning/#vision-transformer","title":"Vision Transformer","text":"<p>CNN\u7f3a\u9677\uff1a\u5c40\u90e8\u6027</p> <p></p> <p>Vision Transformer\u53ef\u4ee5\u8bad\u7ec3\u6bcf\u4e2ablock\uff08\u5206\u621016\u00d716\u7684pieces\uff09\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u66f4\u597d\u5730\u7406\u89e3\u590d\u6742\u7684\u56fe\u7247</p>"},{"location":"CMU_prelearning/#generative-models","title":"Generative Models","text":"<p>//todo</p>"},{"location":"C%E7%A8%8B/","title":"C\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u7ea0\u9519","text":"<p>\u5355\u51fb\u94fe\u63a5\u5373\u53ef\u4e0b\u8f7d\uff1a C\u7a0b\u9519\u9898</p>"},{"location":"FDS/","title":"\u671f\u4e2d\u524d\u5185\u5bb9","text":""},{"location":"FDS/#1-algorithm-analysis","title":"1 Algorithm analysis","text":"<p>Algorithm is a finite set of instructions to accomplish a particular task.</p> <ul> <li>Input \u53ef\u4ee5\u662f0\u4e2a\uff0c\u4f8b\u5982\u5706\u5468\u7387\u8ba1\u7b97</li> <li>Output</li> <li>Definiteness \u6bcf\u4e2a\u6307\u4ee4\u90fd\u662f\u6e05\u6670\u7684</li> <li>Finiteness \uff08\u662f\u4e00\u4e2a\u76f8\u5bf9\u6982\u5ff5\uff09</li> <li>Effectiveness \u6b63\u786e\u6027</li> </ul> <p>program VS algorithm</p> <p>program \u4e0d\u9700\u8981\u6709\u9650\u4e14\u4e0d\u9700\u8981\u4e00\u4e2a\u7279\u5b9a\u76ee\u6807\uff0c\u662f\u7b97\u6cd5\u7684\u5177\u4f53\u5b9e\u73b0</p> <p>algorithm \u662f\u6709\u4e00\u4e2a\u7279\u5b9a\u76ee\u6807\u7684</p>"},{"location":"FDS/#what-to-analyse","title":"What to Analyse","text":"<ul> <li>\u786c\u4ef6\u548c\u7f16\u8bd1\u5668\u7684run times</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u3001\u9700\u8981\u5185\u5b58<ul> <li>\u4e00\u822c\u5206\u6790\u5e73\u5747\u590d\u6742\u5ea6\u548c\u6700\u574f\u590d\u6742\u5ea6</li> </ul> </li> </ul>"},{"location":"FDS/#asymptotic-notation","title":"Asymptotic Notation","text":"<p>point: predict the growth \u91cd\u70b9\u662f\u8d8b\u52bf</p> <p></p> <p>\\(O(N)\\)\u9650\u5b9a\u4e86\u4e0a\u9650\uff0c\\(\\Omega(N)\\)\u9650\u5b9a\u4e86\u4e0b\u9650\uff0c\u800c\\(\\Theta(N)\\)\u9650\u5236\u4f4f\u4e86\u6570\u91cf\u7ea7</p> \\[T_1(N) + T_2(N) = max(O(f(N)), O(g(N)))\\] \\[T_1(N) * T_2(N) = O(f(N))* O(g(N))\\] <p>\u7ed3\u8bba\u6027\uff1a\\({(logN)}^k\\)\u662f\u63a5\u8fd1\u7ebf\u6027\u7684</p> <p>\u4e00\u822c\u6709\u6548\u7684\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u5728O(NlogN)</p> <p>\u4e00\u822c\u89c4\u5219\uff1a</p> <ul> <li>for\u5faa\u73af\uff1a\u8fed\u4ee3\u6b21\u6570*\u5faa\u73af\u5185\u8fd0\u884c\u65f6\u95f4</li> <li>\u5d4c\u5957for\u5faa\u73af\uff1a\u6240\u6709for\u5faa\u73af\u5927\u5c0f\u7684\u4e58\u79ef*\u5faa\u73af\u8bed\u53e5\u8fd0\u884c\u65f6\u95f4</li> <li>\u8fde\u7eed\u8bed\u53e5\uff1a\u76f8\u52a0</li> <li>if/else\uff1a\u53d6max</li> <li>\u6ce8\u610f\u5224\u65ad\u9898\u76ee\u4e2d\u662f\u5426\u6709\u4e0d\u6267\u884c\u7684\u8bed\u53e5</li> </ul> <p>recursion\uff1a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u4f8b\u5b50 T(N) = T(N - 1) + T(N - 2) + 2\uff0c\u6839\u636e\u6570\u5b66\u5f52\u7eb3\u6cd5\u53ef\u8bc1\uff0c\\(\\((3/2)^N &lt; T(N) &lt;(5/3)^N\\)\\)\uff0c\u590d\u6742\u5ea6\u5f88\u9ad8</p> <p>\u65b9\u6cd5\uff1a</p> <ol> <li>\\(T(2N)/T(N)\\)\u4ee3\u5165</li> <li>\u6c42\u6781\u9650</li> </ol>"},{"location":"FDS/#compare-the-algorithms","title":"Compare the Algorithms","text":"<p>\u5177\u4f53\u4f8b\u5b50\uff1a</p> <p>\u5b50\u5e8f\u5217\u6700\u5927\u548c\u95ee\u9898\uff1a</p> <p>\u8003\u8651for loop\u7684\u65f6\u5019\u5e94\u8ba1\u7b97worst case\uff1b</p> <p>\u4f18\u53161\uff1aThisSum\u4e0d\u7f6e0\uff1b</p> <p>\u4f18\u53162\uff1aDivide and Conquer \u5206\u6cbb\u6cd5</p> <ul> <li>\u4f7f\u7528\u9012\u5f52\u5c06\u6570\u636e\u4e0d\u65ad\u4e8c\u5206</li> <li>\u9010\u4e2a\u8ba1\u7b97\u3001\u6bd4\u8f83\u5e76\u5408\u5e76\uff0c\u540c\u65f6\u8ba1\u7b97\u4e24\u4e2a\\(N/2\\)\u4e2d\u6700\u4f18\u89e3\u7684\u4e24\u7aef\u5e76\u6bd4\u8f83</li> <li></li> </ul> <p>\u590d\u6742\u5ea6\u5206\u6790\uff1a\\(T(N) = 2T(N/2) + cN, T(1) = O(1)\\)</p> <p>//\u5206\u6210\u4e24\u534a\u6c42\u89e3+\u6574\u4e2a\u5e8f\u5217\u904d\u5386\uff0c\u904d\u5386\u8d77\u70b9\u662f\u5de6\u6700\u5927\u5e8f\u5217\u7684\u5de6\u7aef\uff0c\u904d\u5386\u7ec8\u70b9\u662f\u53f3\u6700\u5927\u5e8f\u5217\u7684\u53f3\u7aef</p> <p>\\(T(N) = 2[2T(N/2^2)+cN/2]+cN = 2^kO(1) + ckN, where N/2^k = 1\\)</p> <p>\\(\\rightarrow T(N) = O(NlogN)\\)</p> <p>\u4f18\u53163\uff1aOn-line Algorithm \\(T(N) = O(N)\\)</p> <p>\u53ea\u626b\u63cf\u4e00\u6b21\uff0c\u9047\u5230\u5c0f\u4e8e0\u7684ThisSum\u53ca\u65f6\u7f6e0</p> <p>\u5728\u7ebf\u7b97\u6cd5\u6838\u5fc3\uff1a\u6765\u4e00\u4e2a\u5904\u7406\u4e00\u4e2a\u6570\uff0c\u4e0d\u628a\u6240\u6709\u6570\u88c5\u5165\u5185\u5b58\u6216\u8005\u8bfb\u53d6\u5185\u5b58\uff0cmemory\u662fefficient\u7684\uff0c\u4efb\u4f55\u65f6\u95f4\u90fd\u80fd\u5f97\u5230\u4e00\u4e2a\u76ee\u524d\u7684\u6700\u4f73\u7ed3\u679c</p>"},{"location":"FDS/#logarithms-in-the-running-time","title":"Logarithms in the Running Time","text":"<p>\u9012\u5f52\u7b97\u6cd5\uff1afind_x[lb,ub]</p> <p>\\(T(N) = T(N/2) + O(1) \\rightarrow T(N) = O(logN)\\)</p>"},{"location":"FDS/#checking-your-analysis","title":"Checking Your Analysis","text":""},{"location":"FDS/#2-lists","title":"2 Lists","text":""},{"location":"FDS/#abstract-data-type-adt","title":"Abstract Data Type (ADT)","text":"<p>\u62bd\u8c61\u6570\u636e\u7c7b\u578b\uff1a\u5c06\u6570\u636e\u7c7b\u578b\u7684\u5b9a\u4e49\u548c\u5b9e\u9645\u64cd\u4f5c\u5206\u79bb</p> <p>Objects VS Operations</p>"},{"location":"FDS/#_1","title":"\u57fa\u672c\u64cd\u4f5c\uff1a","text":"<ul> <li> <p>\u7b80\u5355\u6570\u7ec4\u64cd\u4f5c</p> <ul> <li>\u6570\u7ec4\u5927\u5c0f\u9700\u8981\u88ab\u8bc4\u4f30\uff0c\u6709\u987a\u5e8f\u3001\u67e5\u627e\u6bd4\u8f83\u5feb\uff0c\u4f46\u662f\u63d2\u5165\u548c\u5220\u9664\u6162</li> </ul> </li> <li> <p>\u7b80\u5355\u94fe\u8868\u64cd\u4f5c</p> <ul> <li> <p>\u65e0\u987a\u5e8f\u3001\u7533\u8bf7\u5185\u5b58\uff08malloc\u7cfb\u7edf\u7ea7\u64cd\u4f5c\uff09\u548c\u67e5\u627e\u5f88\u6162\uff0c\u4e0d\u8fc7\u63d2\u5165\u548c\u5220\u9664\u5feb\uff08\u4f46\u662f\u5bfb\u627e\u7684\u8fc7\u7a0b\u8fd8\u662fO(N)\uff09</p> </li> <li> <p>\u65ad\u94fe\u7684\u5185\u5b58\u627e\u4e0d\u56de\u6765\u4e14\u65e0\u6cd5free</p> </li> <li>\u53cc\u5411\u94fe\u8868\uff1a\u65b9\u4fbf\u67e5\u627e\u524d\u4e00\u4e2a\uff0c\u4f46\u662f\u4e0d\u4ece\u6839\u672c\u4e0a\u89e3\u51b3\u67e5\u627e\u7ebf\u6027\u590d\u6742\u5ea6\u95ee\u9898</li> </ul> </li> </ul>"},{"location":"FDS/#_2","title":"\u591a\u9879\u5f0f\u7684\u8868\u793a\uff1a","text":"<ul> <li>\u6570\u7ec4</li> <li>\u94fe\u8868</li> </ul>"},{"location":"FDS/#multilists","title":"Multilists:","text":"<p>eg.\u5b66\u751f\u9009\u8bfe</p> <p></p> <ul> <li>\u4f18\u52bf\uff1a\u8282\u7701\u5185\u5b58\uff0c\u6709\u591a\u5c11\u4e2aitem\u5c31\u662f\u9009\u4e86\u591a\u5c11\u8282\u8bfe</li> </ul>"},{"location":"FDS/#_3","title":"\u94fe\u8868\u7684\u6e38\u6807\u5b9e\u73b0","text":"<p>Next pointer \u5b58\u7684\u662f\u4e0b\u4e00\u4e2a\u6570\u636e\u7684\u4e0b\u6807</p> <p>\u6570\u7ec4\u5b9e\u73b0\u5217\u8868</p> <pre><code>struct ListNode{\n  int element;//\u8be5\u5143\u7d20\u7684\u6570\u636e\n  int next;//\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u503c(\u6570\u7ec4\u4e0b\u6807)\n};\n</code></pre> <p>\u5982\u679c\u5728\u7d22\u5f15\u662fk\u7684\u7ed3\u70b9\u540e\u9762\u63d2\u5165\u4e00\u4e2a\u7ed3\u70b9\uff0c\u65b0\u7ed3\u70b9\u7684\u7d22\u5f15\u662fn</p> <pre><code>p = node[k].next//\u8bb0\u5f55\u4e0b\u8be5\u7ed3\u70b9\u540e\u9762\u4e00\u4e2a\u7ed3\u70b9\u7684\u7d22\u5f15\nnode[k].next = n//\u628ak\u540e\u9762\u4e00\u4e2a\u7ed3\u70b9\u53d8\u4e3an\nnode[n].next = p //\u539f\u6765k\u7684\u540e\u9762\u4e00\u4e2a\u7ed3\u70b9\u653e\u5728n\u540e\u9762\n</code></pre> <p>\u7531\u4e8e\u7f3a\u5c11\u5185\u5b58\u7ba1\u7406\uff0carray\u5f88\u5feb\u5c31\u4f1a\u6ee1\u3002</p>"},{"location":"FDS/#3-stacks-and-queues","title":"3 Stacks and Queues","text":""},{"location":"FDS/#31-the-stack-adt","title":"3.1 The Stack ADT","text":"<p>Stack: a Last-In-First_Out</p> <p>\u548c\u94fe\u8868\u533a\u522b\uff1astack\u662f\u6307\u5411\u524d\u4e00\u4e2a\u6570\u636e\uff0c\u6700\u540e\u6709\u4e00\u4e2a\u6307\u9488\u6307\u5411\u6808\u9876</p> <p></p> <ul> <li> <p>operations: \uff08Pop\u548cTop\u64cd\u4f5c\u5728\u7a7a\u6808\u60c5\u51b5\u4e0b\u4f1a\u62a5\u9519\uff0c\u662f\u903b\u8f91\u9519\u8bef\uff1bPush\u64cd\u4f5c\u5728\u6ee1\u6808\u60c5\u51b5\u4e0b\u4f1a\u62a5\u9519\uff0c\u662f\u64cd\u4f5c\u9519\u8bef\uff09</p> <ul> <li></li> <li>Push \u63d2\u5165</li> <li>Top \u7f6e\u9876</li> <li>Pop \u5220\u9664</li> <li>\u907f\u514dmalloc/free\uff1a\u4e0d\u6267\u884c\u771f\u6b63\u7684deletion\uff0c\u628a\u6570\u636e\u653e\u5230\u53e6\u5916\u4e00\u4e2a\u94fe\u8868</li> </ul> </li> <li> <p>\u5e94\u7528\uff1a</p> <ul> <li> <p>\u68c0\u67e5\u62ec\u53f7\u662f\u5426\u5e73\u8861</p> <ul> <li>\u601d\u8def\uff1a\u5de6\u62ec\u53f7Push\uff0c\u53f3\u62ec\u53f7\uff08\u548ctop\u5339\u914d\uff09Pop</li> <li></li> </ul> </li> <li> <p>\u8ba1\u7b97\u5668\u95ee\u9898\uff08postfix\uff09</p> <ul> <li>infix to postfix\uff1a\u628a\u6570\u5b57\u653e\u5728\u8fd0\u7b97\u7b26\u524d\u9762\uff0c\u8fd0\u7b97\u7b26\u6309\u4f18\u5148\u7ea7\u6392\u5e8f<ul> <li>\u9047\u5230\u6570\u5b57Output</li> <li>\u9047\u5230\u8fd0\u7b97\u7b26\uff0c\u7a7a\u6808\u6216\u8005\u6bd4top\u4f18\u5148\u7ea7\u9ad8\u5c31push</li> <li>\u9047\u5230\u8fd0\u7b97\u7b26\uff0c\u6bd4top\u4f18\u5148\u7ea7\u4f4e\u6216\u76f8\u7b49\u5c31pop\u6240\u6709\u6bd4\u5b83\u4f18\u5148\u7ea7\u9ad8\u6216\u76f8\u7b49\u7684\u8fd0\u7b97\u7b26\u6700\u540e\u5c06\u6b64\u8fd0\u7b97\u7b26push</li> <li>\u62ec\u53f7\uff1a</li> <li></li> </ul> </li> <li>\u9047\u5230\u6570\u5b57\u5c31push\uff0c\u9047\u5230\u8fd0\u7b97\u7b26\u5c31pop\u4e24\u4e2a\u7136\u540e\u628a\u8fd0\u7b97\u7ed3\u679cpush\u8fdb\u53bb\uff0c\u6700\u540epop\u6700\u4e0a\u9762\u7684\u7ed3\u679c</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6O(N)</li> </ul> </li> <li> <p>\u7cfb\u7edf\u6808\u95ee\u9898\uff1a\u5982\u679c\u4e00\u76f4\u4f7f\u7528\u9012\u5f52\u4f1a\u5360\u5185\u5b58\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u9ad8</p> </li> </ul> </li> </ul>"},{"location":"FDS/#32-the-queue-adt","title":"3.2 The Queue ADT","text":"<p>Queue: a First-In-First-Out list</p> <p></p> <ul> <li> <p>operations\uff1a</p> <ul> <li>Enqueue \u961f\u5c3e\u63d2\u5165</li> <li>Front</li> <li>Dequeue \u961f\u5934\u5220\u9664</li> </ul> </li> <li> <p>\u89e3\u51b3\u7ebf\u6027queue\u5185\u5b58\u6d6a\u8d39\u95ee\u9898-&gt;circular queue</p> <ul> <li>\u5728\u4ec5\u5269\u4e00\u4e2a\u7a7aitem\u7684\u65f6\u5019\u5982\u679c\u518d\u63d2\u5165\u4e00\u4e2aitem\uff0crear\u548cfront\u5dee1\uff0c\u548c\u521d\u59cb\u72b6\u6001\u4e00\u6837\uff0c\u65e0\u6cd5\u533a\u5206\u6ee1\u8fd8\u662f\u7a7a\u72b6\u6001<ul> <li>\u89e3\u51b3\u65b9\u6848\uff1a\u7a7a\u7740\uff08\u6d6a\u8d39\u4e00\u4e2a\u7a7a\u95f4\uff0c\u4f46\u662f\u65f6\u95f4\u5f00\u9500\u5c0f\uff09/\u52a0\u4e00\u4e2asize\u5224\u65ad\uff08\u65f6\u95f4\u5f00\u9500\u5927\uff09</li> <li>\u9677\u9631\uff1a\u6ca1\u6709count\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u7a7a\u51fa\u4e00\u683c</li> </ul> </li> </ul> </li> </ul>"},{"location":"FDS/#4-trees","title":"4 Trees","text":""},{"location":"FDS/#trees-preliminaries","title":"Trees Preliminaries","text":"<ul> <li>\u4ece\u7956\u5148\u5f00\u59cb\uff1aLineal Tree</li> <li> <p>\u4ece\u513f\u5b50\u5f00\u59cb\uff1aPedigree Tree (Binary Tree)</p> </li> <li> <p>\u7528\u6cd5\uff1a\u7ec4\u7ec7\u7ed3\u6784\u3001\u641c\u7d22\u3001\u51b3\u7b56\u6811</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u6811\u662f\u8282\u70b9\u7684\u96c6\u5408</p> <ul> <li> <p>\u96c6\u5408\u53ef\u4ee5\u4e3a\u7a7a</p> </li> <li> <p>\u5426\u5219\uff0c\u4e00\u68f5\u6811\u7531</p> <ul> <li>\u4e00\u4e2a\u88ab\u79f0\u4e3a\u6839\u7684\u533a\u5206\u8282\u70b9r</li> <li>\u96f6\u4e2a\u6216\u591a\u4e2a\u975e\u7a7a(\u5b50)\u6811T1, ... , Tk\uff08\u4e00\u4e2a\u8282\u70b9\u9664\u4e86\u6839\u8282\u70b9\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u7236\u8282\u70b9\uff09 \u7ec4\u6210\uff0c\u6bcf\u4e2a\u6811\u7684\u6839\u90fd\u901a\u8fc7\u4ecer\u7684\u6709\u5411\u8fb9\u8fde\u63a5</li> </ul> </li> </ul> </li> <li> <p>\u6ce8\u610f\uff1a</p> <ul> <li>\u5b50\u6811\u4e0d\u80fd\u8fde\u63a5\u5728\u4e00\u8d77\uff08Tree\u662f\u6ca1\u6709\u73af\u8def\u7684\uff09\uff0c\u6811\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u67d0\u4e00\u4e2a\u5b50\u6811\u7684\u6839</li> <li>N\u4e2a\u8282\u70b9\u7684\u6811\u6709N-1\u4e2aedge</li> <li>\u753b\u56fe\u65f6\u901a\u5e38\u5c06\u6839\u8282\u70b9\u753b\u5728\u6700\u4e0a\u9762</li> <li>\u6240\u6709\u64cd\u4f5c\u4ece\u6839\u5f00\u59cb</li> <li>\u64cd\u4f5c\u57fa\u672c\u90fd\u662f\u9012\u5f52\u7684</li> </ul> </li> <li> <p>\u7ec4\u6210\uff1a  parent \u548c children \u4e0d\u662f\u5bf9\u79f0\u7684\uff0c\u662f\u6709\u6307\u5411\u7684 </p> </li> <li> <p>\u6570\u636e\u7ed3\u6784\u5b9e\u73b0</p> <ul> <li>\u4e00\u7ef4\u6570\u7ec4\uff1a</li> <li></li> </ul> </li> </ul> <p>not unique since the order of the child is not unique</p>"},{"location":"FDS/#binary-trees","title":"Binary Trees","text":"<ul> <li>no node can have more than two children</li> <li> <p>Expression Trees</p> <ul> <li>\u9047\u5230\u8fd0\u7b97\u7b26\uff0c\u6700\u540e\u4e24\u4e2a\u5143\u7d20\u51fa\u6808\uff0c\u6784\u6210\u4ee5\u8fd0\u7b97\u7b26\u4e3ar\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u6574\u4f53\u5165\u6808</li> <li>\u7279\u70b9\uff1a<ul> <li>\u6240\u6709\u64cd\u4f5c\u6570\u987a\u5e8f\u4e0d\u53d8\u4e14\u90fd\u662f\u53f6\u8282\u70b9</li> <li>\u6839\u8282\u70b9\u662f\u8fd0\u7b97\u7684\u6700\u540e\u4e00\u6b65</li> </ul> </li> </ul> </li> <li> <p>\u6811\u7684\u904d\u5386</p> <ul> <li>\u5148\u5e8f\u904d\u5386</li> <li>\u540e\u5e8f\u904d\u5386</li> <li>\u5c42\u6b21\u904d\u5386 - queue</li> <li>\u4e2d\u5e8f\u904d\u5386\uff08\u9012\u5f52\u6cd5\uff1a\uff09</li> <li>\u4e2d\u5e8f\u904d\u5386\u7684\u975e\u9012\u5f52\u5f62\u5f0f\uff1a - stack\u4f7f\u7528\u81ea\u5df1\u7684\u6808\u4ee3\u66ff\u7cfb\u7edf\u89c4\u5b9a\u7684\u6808</li> </ul> </li> <li> <p>\u4f8b\u5b50</p> <ul> <li>\u5206\u7ea7\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u76ee\u5f55\u5217\u8868</li> </ul> </li> </ul>"},{"location":"FDS/#threaded-binary-trees","title":"Threaded Binary Trees","text":"<ul> <li> <p>\u5229\u7528Tree\u4e2d\u7684\u7a7a\u8282\u70b9\u52a0\u901f\u4e2d\u5e8f\u904d\u5386</p> </li> <li> <p>\u5de6\u6307\u9488\u7a7a\uff1a\u6307\u5411\u4e2d\u5e8f\u904d\u5386\u524d\u4e00\u4e2a\uff1b\u53f3\u6307\u9488\u7a7a\uff1a\u6307\u5411\u4e2d\u5e8f\u904d\u5386\u540e\u4e00\u4e2a\u3002</p> </li> <li> <p>\u521b\u5efa\u4e00\u4e2a\u5047\u5934\u8282\u70b9\uff0c\u5176\u5de6\u5b50\u8282\u70b9\u6307\u5411\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u53f3\u8282\u70b9\u6307\u5411\u81ea\u5df1</p> </li> <li> <p></p> </li> <li> <p>\u591a\u4e86\u4e24\u4e2aBoolean\u7528\u4e8e\u5224\u65ad\u5de6\u53f3\u8282\u70b9\u662f\u5426\u4e3athread</p> </li> <li> <p>\u4f8b\u5b50\uff1a</p> </li> </ul> <p>\u7b2c\u4e00\u4e2a\u6709\u5185\u5bb9\u7684\u8282\u70b9\u7684\u5de6\u8282\u70b9\u6307\u5411dummy head node\uff0c\u6700\u540e\u4e00\u4e2a\u6709\u5185\u5bb9\u7684\u8282\u70b9\u7684\u53f3\u8282\u70b9\u6307\u5411dummy head node\u7684\u53f3\u8282\u70b9\uff1bdummy head node\u5de6\u8fb9\u6307\u5411\u6839\u8282\u70b9\uff0c\u53f3\u8fb9\u6307\u81ea\u5df1</p>"},{"location":"FDS/#properties-of-binary-trees","title":"Properties of Binary Trees","text":"<ul> <li>Skewed Binary Trees</li> <li>Complete Binary Trees - all the leaf nodes are on two adjacent levels</li> <li></li> </ul>"},{"location":"FDS/#binary-search-trees-bst","title":"Binary Search Trees (BST)","text":"<p>\u6570\u636e\u662f\u52a8\u6001\u53d8\u5316\u7684</p> <ul> <li>definition</li> </ul> <p>\u7ee7\u627f\u4e86\u6240\u6709\u4e8c\u53c9\u6811\u7684\u7279\u70b9\uff0c\u662f\u9012\u5f52\u5b9a\u4e49\u7684</p> <ul> <li>ADT</li> <li>Objects: \u5177\u6709\u96f6\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\u7684\u6709\u9650\u6709\u5e8f\u5217\u8868</li> <li> <p>Operations: </p> </li> <li> <p>Implementations</p> <ul> <li>Find \u9012\u5f52\u7248\u672c\uff1a <pre><code>Position  Find( ElementType X,  SearchTree T ) \n{ \n      if ( T == NULL ) \n          return  NULL;  /* not found in an empty tree */\n      if ( X &lt; T-&gt;Element )  /* if smaller than root */\n          return  Find( X, T-&gt;Left );  /* search left subtree */\n      else \n          if ( X &gt; T-&gt;Element )  /* if larger than root */\n      return  Find( X, T-&gt;Right );  /* search right subtree */\n          else   /* if X == root */\n      return  T;  /* found */\n} \n</code></pre> \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(T( N ) = S ( N ) =O( d )\\),   where d is the depth of X; \u5faa\u73af\u7248\u672c\uff1a <pre><code>Position  Iter_Find( ElementType X,  SearchTree T ) \n{ \n      /* iterative version of Find */\n      while  ( T )   {\n          if  ( X == T-&gt;Element )   return T ;  /* found */\n          if  ( X &lt; T-&gt;Element )    T = T-&gt;Left ; /*move down along left path */\n          else  T = T-&gt; Right ; /* move down along right path */\n      }  /* end while-loop */\n      return  NULL ;   /* not found */\n} \n</code></pre></li> <li>FindMin &amp; FindMax Min: <pre><code>  Position  FindMin( SearchTree T ) \n{ \n        if ( T == NULL )   \n            return  NULL; /* not found in an empty tree */\n        else \n            if ( T-&gt;Left == NULL )   return  T;  /* found left most */\n            else   return  FindMin( T-&gt;Left );   /* keep moving to left */\n  } \n</code></pre> Max: <pre><code>  Position  FindMax( SearchTree T ) \n{ \n        if ( T != NULL ) \n            while ( T-&gt;Right != NULL )   \n    T = T-&gt;Right;   /* keep moving to find right most */\n        return T;  /* return NULL or the right most */\n  } \n</code></pre></li> <li>Insert \u6784\u5efaBST\u5c31\u662finsert\u7684\u53e0\u52a0</li> <li>malloc</li> <li>\u8d4b\u503c</li> <li>\u5de6\u53f3\u5b69\u5b50\u8d4bNULL <pre><code>  SearchTree  Insert( ElementType X, SearchTree T ) \n{ \n    if ( T == NULL )\n      {/* Create and return a one-node tree */ \n        T = malloc( sizeof( struct TreeNode ) ); \n        if ( T == NULL ) \n            FatalError( \"Out of space!!!\" ); \n        else\n        { \n            T-&gt;Element = X; \n            T-&gt;Left = T-&gt;Right = NULL; \n          } \n      }  /* End creating a one-node tree */\n\n      else  /* If there is a tree */\n    if ( X &lt; T-&gt;Element ) \n        T-&gt;Left = Insert( X, T-&gt;Left ); \n    else if ( X &gt; T-&gt;Element ) \n        T-&gt;Right = Insert( X, T-&gt;Right ); \n       /* Else X is in the tree already; we'll do nothing */ \n      return  T;   /* Do not forget this line!! */ \n  }\n</code></pre> \u5ffd\u7565insert\u7684\u5177\u4f53\u64cd\u4f5c\uff0c\u5176\u5b9e\u5c31\u662fsearch\u64cd\u4f5c\u7684\u6846\u67b6 \u9632\u6b62malloc\u62a5\u9519\uff1a\u628abuffer\u7684\u6307\u9488\u7533\u8bf7\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u5185\u5b58 \u5904\u7406\u91cd\u590d\u7684\u6570\uff1a\u4e0d\u6dfb\u52a0\u6216\u4e3a\u6bcf\u4e00\u4e2anode\u52a0\u5165count\uff0c\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u95ee\u9898</li> <li>Delete<ul> <li>\u5220\u9664\u53f6\u8282\u70b9\uff1a\u76f4\u63a5\u5c06\u7236\u8282\u70b9\u7684\u94fe\u63a5\u53d8\u6210NULL<ul> <li>\u5220\u9664degree\u4e3a1\u7684\u8282\u70b9\uff1a\u76f4\u63a5\u8ba9\u5b69\u5b50\u53bb\u66ff\u4ee3\u4ed6\u90a3\u4e2a\u4f4d\u7f6e</li> </ul> </li> <li>\u5220\u9664degree\u4e3a2\u7684\u8282\u70b9\uff1a<ul> <li>\u5c06\u8be5\u8282\u70b9\u66ff\u6362\u4e3a\u5de6\u5b50\u6811\u4e2d\u6700\u5927\u7684\u8282\u70b9\u6216\u53f3\u5b50\u6811\u4e2d\u6700\u5c0f\u7684\u8282\u70b9\uff0c\u5c3d\u91cf\u5220\u53ef\u4ee5\u51cf\u5c11\u6811\u7684\u9ad8\u5ea6\u7684\u8282\u70b9</li> <li>\u5c06\u66ff\u6362\u8282\u70b9\u4ece\u5b50\u6811\u4e2d\u5220\u9664</li> </ul> </li> <li><pre><code>SearchTree  Delete( ElementType X, SearchTree T ) \n{    \n    Position  TmpCell; \n    if ( T == NULL )   Error( \"Element not found\" ); \n    else  if ( X &lt; T-&gt;Element )  /* Go left */ \n    T-&gt;Left = Delete( X, T-&gt;Left ); \n    else  if ( X &gt; T-&gt;Element )  /* Go right */ \n    T-&gt;Right = Delete( X, T-&gt;Right ); \n  else  /* Found element to be deleted */ \n    if ( T-&gt;Left &amp;&amp; T-&gt;Right )\n        {  /* Two children */ \n        /* Replace with smallest in right subtree */ \n          TmpCell = FindMin( T-&gt;Right ); \n          T-&gt;Element = TmpCell-&gt;Element; \n          T-&gt;Right = Delete( T-&gt;Element, T-&gt;Right );  \n        } /* End if */\n      else \n        {  /* One or zero child */ \n          TmpCell = T; \n          if ( T-&gt;Left == NULL ) /* Also handles 0 child */ \n        T = T-&gt;Right; \n          else  if ( T-&gt;Right == NULL )  T = T-&gt;Left; \n            free( TmpCell ); \n        }  /* End else 1 or 0 child */\n      return  T; \n}\n</code></pre> Lazy deletion: \u5982\u679c\u6ca1\u6709\u5f88\u591a\u5220\u9664\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u5ef6\u8fdf\u5220\u9664\uff1a\u5411\u6bcf\u4e2a\u8282\u70b9\u6dfb\u52a0\u4e00\u4e2a\u6807\u5fd7\u5b57\u6bb5\uff0c\u4ee5\u6807\u8bb0\u8282\u70b9\u662f\u6d3b\u52a8\u7684\u8fd8\u662f\u5df2\u5220\u9664\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5220\u9664\u4e00\u4e2a\u8282\u70b9\uff0c\u800c\u4e0d\u4f1a\u91ca\u653e\u8be5\u8282\u70b9\u7684\u7a7a\u95f4\u3002\u5982\u679c\u91cd\u65b0\u63d2\u5165\u5df2\u5220\u9664\u7684\u952e\uff0c\u5219\u4e0d\u5fc5\u518d\u6b21\u8c03\u7528malloc\u3002</li> </ul> </li> </ul> </li> <li> <p>Average-Case Analysis \u6811\u7684\u9ad8\u5ea6\u53d6\u51b3\u4e8e\u63d2\u5165\u7684\u987a\u5e8f</p> </li> </ul>"},{"location":"FDS/#5-priority-queues","title":"5 Priority Queues","text":"<p>\u9700\u8981\u4f18\u5148\u7ea7\u7684\u65f6\u5019\u9700\u8981\u6b64\u6570\u636e\u7ed3\u6784</p> <p>\u64cd\u4f5c\uff1a</p> <ul> <li>\u4f18\u5148\u7ea7\u6392\u5e8f\u521d\u59cb\u5316</li> <li>\u63d2\u5165</li> <li>\u5220\u9664\u6700\u5c0f</li> <li>\u627e\u6700\u5c0f</li> </ul> <p>\u5b9e\u73b0\u65b9\u5f0f\u53ca\u7b97\u6cd5\u590d\u6742\u5ea6\uff1a</p> <p></p> <p>\u76f8\u6bd4\u4e4b\u4e0bLinked List\u662f\u6700\u4f18\u89e3\uff0c\u4f46\u662f\u4ecd\u6709\u4e00\u4e2aN\u6570\u91cf\u7ea7\u7684\u590d\u6742\u5ea6</p> <p>BST\u7684\u63d2\u5165\u548c\u5220\u9664\u76f8\u6bd4\u4e4b\u4e0b\u66f4\u4f18\uff0c\u63d2\u5165\u5220\u9664\u7684\u590d\u6742\u5ea6\u90fd\u662flogN\u6570\u91cf\u7ea7\u7684\uff0c\u5e73\u8861\u6811\u66f4\u5feb\u4f46\u6ca1\u5fc5\u8981\uff08\u6709\u6307\u9488\uff0c\u5f88\u5371\u9669\uff09</p>"},{"location":"FDS/#binary-heap","title":"Binary Heap","text":"<p>\u5c42\u6b21\u904d\u5386\u662f\u8fde\u7eed\u7684\uff0c\u903b\u8f91\u4e0a\u53ef\u4ee5\u6210\u4e3a\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u4f46\u662f\u5b9e\u9645\u7684\u5b9e\u73b0\u8fd8\u662f\u6570\u7ec4</p> <p>\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a</p> <p></p> <p>\u5728\u8fd9\u91cc0\u8282\u70b9\u662f\u7a7a\u51fa\u7684\uff0c\u4e14\u5b8c\u5168\u4e8c\u53c9\u6811\u548c\u6700\u4e0b\u9762\u8fd9\u5c42\u6709\u591a\u5c11\u4e2a\u6ca1\u6709\u5173\u7cfb</p> <p>\u5728\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u524d\u63d0\u4e0b\uff0c\u56e0\u4e3a\u6811\u7684\u9ad8\u5ea6\u662f\u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u63d2\u5165\u5220\u9664\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e5f\u662f\u6709\u786e\u5b9a\u5173\u7cfb\u7684</p> <p>\u5bfb\u627e\u7236\u5b50\u8282\u70b9\uff08\u771f\u6b63\u7684\u5b9e\u73b0\u662f\u4f4d\u79fb\uff09\uff1a</p> <p></p> <p>\u4ee3\u7801\u5b9e\u73b0\uff1a</p> <ul> <li>\u521d\u59cb\u5316\u5efa\u5806</li> </ul> <pre><code>PriorityQueue  Initialize( int  MaxElements ) \n{ \n    PriorityQueue  H; \n    if ( MaxElements &lt; MinPQSize ) \n        return  Error( \"Priority queue size is too small\" ); \n        /*\u6570\u636e\u89c4\u6a21\u8fc7\u5c0f\uff0c\u6ca1\u5fc5\u8981\u4f7f\u7528Heaps\u6570\u636e\u7ed3\u6784*/\n    H = malloc( sizeof ( struct HeapStruct ) ); \n    if ( H ==NULL ) \n        return  FatalError( \"Out of space!!!\" ); \n    /* Allocate the array plus one extra for sentinel */ \n    H-&gt;Elements = malloc(( MaxElements + 1 ) * sizeof( ElementType )); \n    if ( H-&gt;Elements == NULL ) \n        return  FatalError( \"Out of space!!!\" ); \n    H-&gt;Capacity = MaxElements; \n    H-&gt;Size = 0; \n    H-&gt;Elements[ 0 ] = MinData;  /* set the sentinel */\n    return  H; \n}\n</code></pre> <p>\u6700\u5c0f\u5806\uff1a\u65e2\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u4e5f\u662f\u6700\u5c0f\u6811\uff08\u7236\u8282\u70b9\u4e00\u5b9a\u6bd4\u6240\u6709\u5b50\u8282\u70b9\u5c0f\uff0c\u6ca1\u6709\u5de6\u53f3\u5927\u5c0f\u8981\u6c42\uff09\uff0c\u6700\u5927\u5806\u540c\u7406\u3002</p> <p>\u57fa\u672c\u64cd\u4f5c\uff1a</p> <ul> <li>\u63d2\u5165\uff1a\u901a\u8fc7\u4e0b\u6807\u6362\u7b97\u4e0d\u65ad\u548c\u7236\u8282\u70b9\u6bd4\u8f83\uff0c\u5982\u679c\u6bd4\u7236\u8282\u70b9\u5c0f\u5c31\u4ea4\u6362\uff083\u6b65\uff09\u5e76\u4e14\u8fdb\u884c\u4e0b\u4e00\u6b65\u6bd4\u8f83\uff0c\u4e0d\u65ad\u8fed\u4ee3\uff0c\u627e\u5230\u6bd4\u5b83\u5927\u7684\u7236\u8282\u70b9\u6216\u5230\u4e86\u6839\u8282\u70b9\u5c31\u7ed3\u675f</li> </ul> <pre><code>/* H-&gt;Element[ 0 ] is a sentinel */ \n/* \u5143\u7d20[0]\u662f\u4e00\u4e2a\u4e0d\u5927\u4e8e\u5806\u4e2d\u6700\u5c0f\u5143\u7d20\u7684\u54e8\u5175\uff0c\u7528\u4e8e\u4fdd\u8bc1for loop\u662f\u6709\u9650\u7684\uff0c\u6216\u8005\u5728for loop\u4e2d\u52a0\u4e00\u4e2a\u662f\u5426\u5230\u8fbe\u6839\u8282\u70b9\u7684\u5224\u65ad\uff0c\u4f46\u662f\u8fd9\u6837\u6bcf\u6b21\u5faa\u73af\u4f1a\u591a\u4e00\u6b21\u5224\u65ad */\nvoid  Insert( ElementType  X,  PriorityQueue  H ) \n{ \n    int  i; \n    if ( IsFull( H ) ) \n    { \n        Error( \"Priority queue is full\" ); \n        return; \n    } \n    for ( i = ++H-&gt;Size; H-&gt;Elements[ i / 2 ] &gt; X; i /= 2 ) \n        H-&gt;Elements[ i ] = H-&gt;Elements[ i / 2 ]; /*Faster than swap*/\n    H-&gt;Elements[ i ] = X; \n}\n</code></pre> <p>\\(T (N) = O ( log N )\\)</p> <ul> <li>\u5220\u9664\u6700\u5c0f\u5143\u7d20\uff1a\u5148\u6784\u5efa\u597d\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u518d\u5b8c\u6210\u987a\u5e8f\u6392\u5217</li> </ul> <p></p> <pre><code>/*\u8fd9\u7ae0\u4ee3\u7801\u90fd\u5fc5\u8003\u7684\uff01\uff01*/\nElementType  DeleteMin( PriorityQueue  H ) \n{ \n    int  i, Child; \n    ElementType  MinElement, LastElement; \n    if ( IsEmpty( H ) ) \n    { \n         Error( \"Priority queue is empty\" ); \n         return  H-&gt;Elements[ 0 ];   \n    } \n\n    MinElement = H-&gt;Elements[ 1 ];  /* save the min element */\n    LastElement = H-&gt;Elements[ H-&gt;Size-- ];  /* take last and reset size */\n    /*\u6ca1\u6709\u628a\u672b\u5c3e\u7684\u6570\u6e05\u96f6\uff0c\u53ea\u662f\u628asize-1*/\n\n    for ( i = 1; i * 2 &lt;= H-&gt;Size; i = Child ) \n    {  \n        /* Find smaller child */ \n        Child = i * 2; \n        if (Child != H-&gt;Size &amp;&amp; H-&gt;Elements[Child + 1] &lt; H-&gt;Elements[Child]) \n            Child ++;     \n        if ( LastElement &gt; H-&gt;Elements[ Child ] )   \n        /* Percolate one level */ \n            H-&gt;Elements[ i ] = H-&gt;Elements[ Child ]; \n        else\n            break;   /* find the proper position */\n    }\n    /*\u771f\u6b63\u6267\u884c\u8d4b\u503cLastElement\u662f\u5728\u5faa\u73af\u5916*/\n    H-&gt;Elements[ i ] = LastElement; \n    return  MinElement; \n}\n</code></pre> <ul> <li> <p>\u5176\u4ed6\u64cd\u4f5c</p> <ul> <li> <p>\u67e5\u627e\u9664\u6700\u5c0f\u5143\u7d20\u4e4b\u5916\u7684\u4efb\u4f55\u5143\u7d20\u90fd\u5fc5\u987b\u5bf9\u6574\u4e2a\u5806\u8fdb\u884c\u7ebf\u6027\u626b\u63cf</p> </li> <li> <p>DecreaseKey ( P, \u25b2, H ) -&gt; Percolate up \u4e0a\u6d6e</p> </li> <li> <p>IncreaseKey ( P, \u25b2, H ) -&gt; Percolate down \u4e0b\u6c89</p> </li> <li> <p>Delete ( P, H )</p> <ul> <li>DecreaseKey(P, \\(\\infty\\), H)</li> <li>DeleteMin(H)</li> </ul> </li> <li> <p>BuildHeap ( H )</p> <ul> <li> <p>\u5982\u679c\u4f7f\u7528N\u6b21\u63d2\u5165\uff0c\\(T(N)=O(NlogN)\\) -&gt; too slow</p> </li> <li> <p>\u5728\u73b0\u6210\u7684\u6811\u7684\u57fa\u7840\u4e0a\u8c03\u6574\uff0c\u4ece\u5012\u6570\u7b2c\u4e8c\u5c42\u5f00\u59cb\uff0c\u8c03\u6574\u4e00\u534a\u7684\u8282\u70b9\u5373\u53ef\uff0c\\(T(N) = O(N)\\)</p> </li> <li></li> </ul> </li> </ul> </li> <li> <p>\u5806\u6392\u5e8f = </p> <ul> <li>\u5efa\u5806 \\(O(N)\\)</li> <li>N\u6b21deletemin \\(N*O(logN)\\)</li> <li>\u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(NlogN)\\)\uff0cworst case \u548c best case \u90fd\u4e00\u6837</li> </ul> </li> <li> <p>\u5e94\u7528\uff1a\u627e\u5230\u7b2ck\u5927\u7684\u5143\u7d20</p> <ul> <li>\u5efa\u5806</li> <li>k\u6b21deletemin/n-k\u6b21deletemin\uff08\u770b\u54ea\u4e2a\u5c0f\u51b3\u5b9a\u5efa\u4e0d\u540c\u7684\u6811\uff09</li> </ul> </li> <li> <p>\u5168\u6392\u5e8f\uff1aqueue sort\uff1b\u53d6top k/1000/...\uff1aheap -\\(O(N) + O(klogN)\\)</p> </li> <li> <p>d-Heaps ---- All nodes have d children</p> <ul> <li>DeleteMin\u6bcf\u6b21\u6bd4k\u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(dlog_dN)\\)</li> <li>\\(*2\\)\u6216\u8005/2\u90fd\u662f\u4f4d\u8fd0\u7b97\u64cd\u4f5c\uff0c\u4f46\u662f\\(*d\\)\u6216\u8005/d\u5c31\u4e0d\u662f</li> <li>\u5f53\u4f18\u5148\u7ea7\u961f\u5217\u592a\u5927\u800c\u65e0\u6cd5\u5b8c\u5168\u653e\u5165\u4e3b\u5b58\u65f6\uff0cd\u5806\u5c31\u53d8\u5f97\u6709\u8da3\u4e86</li> </ul> </li> </ul>"},{"location":"FDS/#6-the-disjoint-set-adt","title":"6 The Disjoint Set ADT","text":""},{"location":"FDS/#equivalence-relations","title":"Equivalence Relations","text":"<p>x~y -&gt; x and y of a set S(\u90fd\u662f\u5b9a\u4e49\u5728\u4e00\u4e2a\u96c6\u5408\u4e0a\u7684) are in the same equivalence class</p> <ul> <li>symmetric \u5bf9\u79f0</li> <li>reflexive \u81ea\u53cd</li> <li>transitive \u4f20\u9012</li> </ul>"},{"location":"FDS/#the-dynamic-equivalence-problem","title":"The Dynamic Equivalence Problem","text":"<p>\u7b97\u6cd5\u529f\u80fd\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u7b49\u4ef7\u5173\u7cfb~\uff0c\u5224\u5b9a\u4efb\u610fa\u548cb\u662f\u5426\u4e3aa ~ b</p> <pre><code>Algorithm: (Union / Find)\n{   \n    /* step 1: read the relations in */\n    Initialize N disjoint sets;\n    /*\u521d\u59cb\u5316\u7684\u65f6\u5019\u6bcf\u4e2a\u6570\u636e\u90fd\u662f\u72ec\u7acb\u7684*/\n    while ( read in a ~ b ) \n    {\n        if ( ! (Find(a) == Find(b)) ) Union the two sets;\n    } /* end-while */\n    /* step 2: decide if a ~ b */\n    while ( read in a and b )\n    {\n        if ( Find(a) == Find(b) )   output( true );\n        else   output( false );\n    }\n}\n</code></pre> <p></p> <p>\u5b9e\u73b0\uff1aforest\uff1b\u6307\u9488\u662f\u53cd\u5411\u7684</p> <p></p> <p>\u64cd\u4f5c\uff1a</p> <ul> <li>Union(i, j)\uff1a\u5c06\\(S_i\\)\u548c\\(S_j\\)\u66ff\u6362\u6210\\(S=S_i\\bigcup S_j\\)</li> <li>Find(i)\uff1a\u627e\u5230\u5305\u542bi\u7684\\(S_k\\)</li> </ul>"},{"location":"FDS/#basic-data-structure","title":"Basic Data Structure","text":"<ul> <li>Union&amp;Find   \u5c06\u5176\u4e2d\u4e00\u4e2a\u6839\u7684\u7236\u6307\u9488\u8bbe\u7f6e\u4e3a\u53e6\u4e00\u4e2a\u6839<ul> <li>\u94fe\u8868\u64cd\u4f5c\uff1a</li> <li>\u5b9e\u73b01\uff1a<ul> <li>Union  <pre><code>void  SetUnion ( DisjSet S, SetType Rt1, SetType Rt2 )\n{    S [ Rt2 ] = Rt1 ;     }\n</code></pre></li> <li>Find<ul> <li>\u94fe\u8868\uff1a</li> <li>\u6570\u7ec4\uff1a <pre><code>SetType  Find ( ElementType X, DisjSet S )\n{   for ( ; S[X] &gt; 0; X = S[X] );\n    return  X ;\n}\n</code></pre></li> </ul> </li> <li>\u5efa\u7acb\u7b49\u4ef7\u5173\u7cfb <pre><code>Algorithm using union-find operations\n{  \n    Initialize  Si = { i }  for  i = 1, ..., 12 ;\n    for  ( k = 1; k &lt;= 9; k++ )  \n    {  \n        /* for each pair  i \u2261 j */\n      if  ( Find( i ) != Find( j ) )\n          SetUnion( Find( i ), Find( j ) );\n      /*\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6O(N^2)*/\n  }\n}\n</code></pre></li> </ul> </li> <li>\u5b9e\u73b02\uff1a\u6539\u53d8Union\u64cd\u4f5c\uff08smart union\uff09 \u5bfb\u627e\u66f4\u5c0f\u7684cluster\u88ab\u5408\u5e76 \u8bb0\u5f55Size: \u7528\u5f53\u524d\u8fd9\u68f5\u6811\u7684\u6839\u8282\u70b9\u8bb0\u5f55\u8fd9\u68f5\u6811\u7684\u5927\u5c0f\uff0c\u56e0\u4e3a\u6b63\u6570\u5df2\u7ecf\u7528\u6765\u8868\u793a\u7236\u5b50\u8282\u70b9\u5173\u7cfb\u4e86\uff0c\u6240\u4ee5\u7528\u8d1f\u6570\u6765\u50a8\u5b58\u907f\u514d\u51fa\u9519\uff1b\u6bcf\u68f5\u6811\u5728\u6700\u5f00\u59cb\u7684\u65f6\u5019\u5927\u5c0f\u4e3a1\uff0c\u6545\u521d\u59cb\u5316\u4e3a-1\u3002 </li> <li>\u5b9e\u73b03\uff1aUnion by Height \u5c06\u77ee\u7684\u6811\u5e76\u5230\u9ad8\u7684\u6811\u4e0a <p>\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u5c06\u6240\u6709\u96c6\u5408\u653e\u5728\u4e00\u4e2a\u961f\u5217\u4e2d\uff0c\u5e76\u91cd\u590d\u5730\u5c06\u524d\u4e24\u4e2a\u96c6\u5408\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\uff0c\u7136\u540e\u5c06\u8054\u5408\u653e\u5165\u961f\u5217\u4e2d\uff0c\u5c31\u4f1a\u51fa\u73b0\u6700\u574f\u7684\u60c5\u51b5\u3002\u5982\u679c\u67e5\u627e\u6bd4\u8054\u5408\u591a\u5f88\u591a\uff0c\u5219\u8fd0\u884c\u65f6\u95f4\u6bd4\u5feb\u901f\u67e5\u627e\u7b97\u6cd5\u66f4\u5dee\u3002\u6b64\u5916\uff0c\u5e94\u8be5\u6e05\u695a\u7684\u662f\uff0c\u8054\u5408\u7b97\u6cd5\u53ef\u80fd\u6ca1\u6709\u66f4\u591a\u7684\u6539\u8fdb\u3002\u8fd9\u662f\u57fa\u4e8e\u8fd9\u6837\u4e00\u79cd\u89c2\u5bdf\uff0c\u5373\u4efb\u4f55\u6267\u884c\u8054\u5408\u7684\u65b9\u6cd5\u90fd\u5c06\u4ea7\u751f\u76f8\u540c\u7684\u6700\u574f\u60c5\u51b5\u6811\uff0c\u56e0\u4e3a\u5b83\u5fc5\u987b\u4efb\u610f\u5730\u6253\u7834\u8054\u7cfb\u3002\u56e0\u6b64\uff0c\u5728\u4e0d\u5b8c\u5168\u4fee\u6539\u6570\u636e\u7ed3\u6784\u7684\u60c5\u51b5\u4e0b\uff0c\u52a0\u5feb\u7b97\u6cd5\u901f\u5ea6\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u5728\u67e5\u627e\u64cd\u4f5c\u4e0a\u505a\u4e00\u4e9b\u806a\u660e\u7684\u4e8b\u60c5\u3002\u8fd9\u79cd\u5de7\u5999\u7684\u64cd\u4f5c\u88ab\u79f0\u4e3a\u8def\u5f84\u538b\u7f29\u3002\u8def\u5f84\u538b\u7f29\u662f\u5728\u67e5\u627e\u64cd\u4f5c\u671f\u95f4\u6267\u884c\u7684\uff0c\u4e0e\u6267\u884c\u8054\u5408\u6240\u4f7f\u7528\u7684\u7b56\u7565\u65e0\u5173\u3002\u5047\u8bbe\u64cd\u4f5c\u662ffind(x)\u3002\u8def\u5f84\u538b\u7f29\u7684\u6548\u679c\u662f\uff0c\u4ecex\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5c06\u5176\u7236\u8282\u70b9\u66f4\u6539\u4e3a\u6839\u8282\u70b9\u3002\u56fe8.14\u663e\u793a\u4e86find(15)\u4e4b\u540e\u7684\u8def\u5f84\u538b\u7f29\u5bf9\u56fe8.12\u7684\u4e00\u822c\u6700\u5dee\u6811\u7684\u5f71\u54cd\u3002\u8def\u5f84\u538b\u7f29\u7684\u6548\u679c\u662f\uff0c\u968f\u7740\u989d\u5916\u7684\u4e24\u4e2a\u6307\u9488\u79fb\u52a8\uff0c\u8282\u70b913\u548c14\u73b0\u5728\u79bb\u6839\u66f4\u8fd1\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u8282\u70b915\u548c16\u73b0\u5728\u79bb\u6839\u66f4\u8fd1\u4e24\u4e2a\u4f4d\u7f6e\u3002\u56e0\u6b64\uff0c\u672a\u6765\u5bf9\u8fd9\u4e9b\u8282\u70b9\u7684\u5feb\u901f\u8bbf\u95ee\u5c06(\u6211\u4eec\u5e0c\u671b)\u4e3a\u8fdb\u884c\u8def\u5f84\u538b\u7f29\u4ed8\u51fa\u989d\u5916\u7684\u5de5\u4f5c\u3002\u5982\u56fe8.15\u4e2d\u7684\u4ee3\u7801\u6240\u793a\uff0c\u8def\u5f84\u538b\u7f29\u662f\u5bf9\u57fa\u672c\u67e5\u627e\u7b97\u6cd5\u7684\u4e00\u4e2a\u5fae\u4e0d\u8db3\u9053\u7684\u66f4\u6539\u3002\u5bf9find\u4f8b\u7a0b\u7684\u552f\u4e00\u66f4\u6539\u662f\u4f7fS[x]\u7b49\u4e8efind\u8fd4\u56de\u7684\u503c;\u56e0\u6b64\uff0c\u5728\u9012\u5f52\u5730\u627e\u5230\u96c6\u5408\u7684\u6839\u4e4b\u540e\uff0c\u4f7fx\u76f4\u63a5\u6307\u5411\u5b83\u3002\u8fd9\u5c06\u9012\u5f52\u5730\u53d1\u751f\u5728\u5230\u6839\u7684\u8def\u5f84\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u4e0a\uff0c\u56e0\u6b64\u8fd9\u5b9e\u73b0\u4e86\u8def\u5f84\u538b\u7f29\u3002\u6b63\u5982\u6211\u4eec\u5728\u5b9e\u73b0\u5806\u6808\u548c\u961f\u5217\u65f6\u6240\u8bf4\uff0c\u4fee\u6539\u88ab\u8c03\u7528\u51fd\u6570\u7684\u53c2\u6570\u4e0d\u4e00\u5b9a\u7b26\u5408\u5f53\u524d\u7684\u8f6f\u4ef6\u5de5\u7a0b\u89c4\u5219\u3002\u6709\u4e9b\u8bed\u8a00\u4e0d\u5141\u8bb8\u8fd9\u6837\u505a\uff0c\u6240\u4ee5\u8fd9\u6bb5\u4ee3\u7801\u53ef\u80fd\u9700\u8981\u4fee\u6539\u3002</p> <p>Read Figure 8.13 on p.273</p> </li> <li>\u5b9e\u73b04\uff1aUnion by Size with Path Compression \u8def\u5f84\u538b\u7f29 \u76ee\u7684\uff1a <pre><code>SetType  Find ( ElementType  X, DisjSet  S )\n{   \n    ElementType  root,  trail,  lead;\n    for ( root = X; S[ root ] &gt; 0; root = S[ root ] )\n        ;  /* find the root */\n    for ( trail = X; trail != root; trail = lead ) {\n       lead = S[ trail ] ;   \n       S[ trail ] = root ;   \n    }  /* collapsing */\n    return  root ;\n}\n</code></pre> \u8ba9\u6240\u7ecf\u8fc7\u7684\u8282\u70b9\u90fd\u6307\u5411\u7236\u8282\u70b9 \u4f18\u5316\u540e\uff1a\u4e0eUnion-by-Height\u4e0d\u517c\u5bb9\uff0c\u56e0\u4e3a\u5b83\u6539\u53d8\u4e86\u9ad8\u5ea6\u3002Just take \u201cheight\u201d as an estimated rank.</li> <li>\u5b9e\u73b05\uff1aUnion by Rank\uff08\u5df2\u7ecf\u7ecf\u8fc7\u8def\u5f84\u538b\u7f29\uff09  </li> </ul> </li> </ul>"},{"location":"FDS2/","title":"Chapter9 Graph Algorithms","text":""},{"location":"FDS2/#definitions","title":"Definitions","text":"<p>G(V, E)\uff1a</p> <ul> <li>G\uff1a\u56fe</li> <li>V = V(G)\uff1a\u6709\u9650\u7684\u975e\u7a7a\u9876\u70b9\u96c6\u5408</li> <li>E = E(G)\uff1a\u6709\u9650\u7684\u8fb9\u96c6\u5408</li> </ul> <p>Undirected graph\uff1a\u65e0\u5411\u56fe\uff0c\\((v_i,v_j)=(v_j,v_i)\\)\uff0c\u662f\u540c\u4e00\u6761\u8fb9</p> <p>Directed graph (digraph)\uff1a\u6709\u5411\u56fe\uff0c</p> <ul> <li>Self loop is illegal. \u73af\u662f\u4e0d\u5408\u6cd5\u7684</li> <li>\u4e0d\u8003\u8651Multigraph\uff08\u91cd\u590d\u7684\u8fb9\uff09</li> </ul> <p>Complete graph\uff1a\u5177\u6709\u6700\u5927\u8fb9\u4e2a\u6570\uff08\u4e0d\u8003\u8651multigraph\uff09\u7684\u56fe</p> <p>adjacent\uff1a - \u65e0\u5411\u56fe\uff1a\\(v_i\\) and \\(v_j\\) are adjacent / \\((v_i,v_j)\\) is incident on \\(v_i\\) and \\(v_j\\)  - \u6709\u5411\u56fe\uff1a\\(v_i\\) is adjacent to \\(v_j\\) / \\(v_j\\) is adjacent from \\(v_i\\) / \\(&lt;v_i,v_j&gt;\\) is incident on \\(v_i\\) and \\(v_j\\) </p> <p>Subgraph G' \\(/subset\\) G\uff1a</p> <p>Path(\\(/subset\\) G) from \\(v_p\\) to \\(v_q\\)\uff1a\u8def\u5f84 </p> <p>Length of a path\uff1a\u8def\u5f84\u7684\u957f\u5ea6\u5c31\u662f\u8def\u4e0a\u7684\u8fb9\u7684\u6570\u91cf</p> <p>Simple path\uff1a\u6bcf\u4e2a\u5305\u542b\u7684\u89d2\uff08\u4e0d\u5305\u62ec\u8d77\u70b9\u7ec8\u70b9\uff09\u90fd\u53ea\u7ecf\u5386\u4e86\u4e00\u6b21\u7684\u8def\u5f84</p> <p>Cycle\uff1a\u662f\u4e00\u4e2asimple path \u4e14 \u8d77\u70b9\u7b49\u4e8e\u7ec8\u70b9</p> <p>connected\uff1a</p> <ul> <li>\u65e0\u5411\u56fe\uff1a<ul> <li>\u89d2\u7684\u8054\u901a - \u6709\u8def\u5f84</li> <li>\u56fe\u7684\u8054\u901a - \u4efb\u610f\u4e24\u4e2a\u89d2\u8054\u901a</li> </ul> </li> <li>\u6709\u5411\u56fe\uff1a<ul> <li>\u5f3a\u8054\u901a</li> <li>\u5f31\u8054\u901a</li> </ul> </li> </ul> <p>(Connected) Component of an undirected G\uff1a\u6700\u5927\u8054\u901a\u5b50\u56fe</p> <p>tree\uff1a\u65e0\u73af\u8fde\u901a\u56fe</p> <p>DAG\uff1a\u6709\u5411\u65e0\u73af\u56fe</p> <p>Degree(v)\uff1a</p> <ul> <li>\u63e1\u624b\u6cd5\u5219\uff1a</li> </ul>"},{"location":"FDS2/#representation-of-graphs","title":"Representation of Graphs","text":""},{"location":"FDS2/#adjacency-matrix","title":"Adjacency Matrix","text":"<p>\u5bf9\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u6d6a\u8d39\u8f83\u591a</p>"},{"location":"FDS2/#adjacency-lists","title":"Adjacency Lists","text":"<p>\u628a\u6bcf\u4e00\u884c\u7528\u94fe\u8868\u66ff\u4ee3 </p> <p></p> <p>\u65e0\u5411\u56fe\u7684degree\u548c\u6709\u5411\u56fe\u7684out-degree\u90fd\u53ef\u4ee5\u901a\u8fc7graph[i]\u7684\u8282\u70b9\u6570\u83b7\u5f97</p> <p>\u5982\u679c\u662f\u5904\u7406\u6709\u5411\u56fe\u7684in-degree\uff0c\u90a3\u4e48\u5e94\u8be5</p> <ul> <li>\u65b9\u6cd51\uff1a\u628a\u6bcf\u4e00\u5217\u7528\u94fe\u8868\u5904\u7406\uff0c\u5f97\uff1a \uff08Inverse Adjacency Lists\uff09</li> <li>\u65b9\u6cd52\uff1a\u6784\u5efaMulti-list </li> </ul>"},{"location":"FDS2/#adjacency-multi-lists","title":"Adjacency Multi-lists","text":""},{"location":"FDS2/#weighted-edges","title":"Weighted Edges","text":"<ul> <li>\u6570\u7ec4\uff1a\u76f4\u63a5\u628a\u503c\u53d8\u6210weight</li> <li>adjacency lists / multi-lists: add a weight field to the node</li> </ul>"},{"location":"FDS2/#topological-sort","title":"Topological Sort \u62d3\u6251\u6392\u5e8f","text":""},{"location":"FDS2/#aov-network","title":"AOV Network","text":"<p>\u4e8b\u4ef6\u53d1\u751f\u5728\u8fb9\u4e0a\uff0c\u53ea\u8981\u5230\u8fbe\u9876\u70b9\uff0c\u4e8b\u4ef6\u5c31\u7ed3\u675f\u4e86</p> <p>V(G): activities</p> <p>E(G): \u4f18\u5148\u7ea7\u5173\u7cfb</p> <p></p> <p>Partial order\uff1a\u4f20\u9012\u6027\u3001\u975e\u81ea\u53cd\u6027\uff08\u9879\u76ee\u5fc5\u987b\u53ef\u884c\uff09</p> <p>\u53ef\u884c\u7684AOV\u7f51\u7edc\u5fc5\u987b\u662fDAG(\u6709\u5411\u65e0\u73af\u56fe)</p>"},{"location":"FDS2/#topological-order","title":"topological order","text":"<p>\u62d3\u6251\u987a\u5e8f\u662f\u56fe\u4e2d\u9876\u70b9\u7684\u7ebf\u6027\u6392\u5e8f\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\\(i, j\\)\uff0c\u5982\u679c\\(i\\)\u662f\u7f51\u7edc\u4e2d\\(j\\)\u7684\u524d\u5bfc\uff0c\u5219\\(i\\)\u5728\u7ebf\u6027\u6392\u5e8f\u4e2d\u5148\u4e8e\\(j\\)</p> <ul> <li> <p>\u89e3\u51b3\u7684\u662f\u6b21\u5e8f\u95ee\u9898\uff0c\u4e0d\u662f\u6392\u5e8f\u95ee\u9898</p> </li> <li> <p>\u62d3\u6251\u6392\u5e8f\u7684\u7ed3\u679c\u662f\u4e0d\u552f\u4e00\u7684</p> </li> <li> <p>in-degree\u4e3a0\u7684\u8282\u70b9\u662f\u62d3\u6251\u6392\u5e8f\u7684\u8d77\u70b9</p> </li> </ul> <pre><code>void Topsort( Graph G )\n{   \n    int  Counter;\n    Vertex  V, W;\n    for ( Counter = 0; Counter &lt; NumVertex; Counter ++ ) \n    {\n        V = FindNewVertexOfDegreeZero( ); /*O(|V|) V\u7684\u6a21\u957f - \u96c6\u5408V\u4e2d\u7684\u4e2a\u6570*/\n        if ( V == NotAVertex ) \n        {\n            /*\u540c\u65f6\u89e3\u51b3\u4e86\u5224\u65ad\u56fe\u91cc\u6709\u65e0\u73af\u8def\u7684\u95ee\u9898*/\n            Error ( \u201cGraph has a cycle\u201d );   \n            break;  \n        }\n        TopNum[ V ] = Counter; /* or output V */\n        for ( each W adjacent to V )    Indegree[ W ] \u2013 \u2013 ; /*\u89e3\u9664\u4f9d\u8d56\u5173\u7cfb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u8fb9\u7684\u4e2a\u6570*/\n    }\n}\n</code></pre> <p>\\(T=O(|V|^2+|E|)=O(|V|^2)\\) \u5229\u7528\u8fb9\u548c\u9876\u70b9\u7684\u5173\u7cfb\u5316\u7b80</p> <p>\u4f18\u5316\u7b97\u6cd5\uff1a\uff08\u5e38\u8003\u9879\uff01\uff01\uff09</p> <pre><code>void Topsort( Graph G )\n{   \n    Queue  Q;\n    int  Counter = 0;\n    Vertex  V, W;\n    Q = CreateQueue( NumVertex );  \n    MakeEmpty( Q );\n    for ( each vertex V )   \n        if ( Indegree[ V ] == 0 )   Enqueue( V, Q );\n\n    while ( !IsEmpty( Q ) ) \n    {\n        V = Dequeue( Q );\n        TopNum[ V ] = ++ Counter; /* assign next */\n        for ( each W adjacent to V )\n            if ( \u2013 \u2013 Indegree[ W ] == 0 )   Enqueue( W, Q );\n    }  /* end-while */\n    if ( Counter != NumVertex ) Error( \u201cGraph has a cycle\u201d );\n    DisposeQueue( Q ); /* free memory */\n}\n</code></pre> <p>\\(T = O(|V| + |E|)\\)</p>"},{"location":"FDS2/#_1","title":"\u6700\u77ed\u8def\u7b97\u6cd5","text":"<ul> <li> <p>\u8f93\u5165\uff1a</p> <ul> <li>\u6709\u5411\u56fe\\(G=(V,E)\\)</li> <li>cost function (weight) \\(c(e)\\) for \\(e\\) in \\(E(G)\\) \\(/rightarrow\\) length = </li> </ul> </li> <li> <p>\u8ba1\u7b97\u70b9\u5230\u70b9\u7684\u6700\u77ed\u8def\u548c\u904d\u5386\u70b9\u8ba1\u7b97\u5168\u5c40\u6700\u77ed\u8ddd\u79bb\u7684\u590d\u6742\u5ea6\u662f\u4e00\u81f4\u7684</p> </li> <li> <p>\u9650\u5236\u6761\u4ef6\uff1a\u5982\u679c\u6709negative\u7684weight\u5e76\u4e14\u5f62\u6210\u4e86Negative-cost cycle\uff0c\u6700\u77ed\u8def\u65e0\u89e3</p> <ul> <li>\u5982\u679c\u4e0d\u5b58\u5728Negative-cost cycle\uff0c\u5219\u5b9a\u4e49\u4eces\u5230s\u7684\u6700\u77ed\u8def\u5f84\u4e3a\u96f6</li> </ul> </li> </ul>"},{"location":"FDS2/#unweighted-shortest-paths-","title":"Unweighted Shortest Paths - \u4e0d\u5e26\u6743\u91cd\u7684\u6700\u77ed\u8def","text":"<ul> <li> <p>\u7b49\u4ef7\u4e8eBreadth-first-search</p> </li> <li> <p>\u5b9e\u73b0\u65b9\u5f0f\uff08\u56fe\u8bba\u90fd\u4f1a\u6709\u4e00\u4e2atable\u7ed3\u6784\uff09\uff1a <pre><code>Table[ i ].Dist ::= distance from s to vi  /* initialized to be \u221e except for s */\nTable[ i ].Known ::= 1 if vi is checked; or 0 if not\nTable[ i ].Path ::= for tracking the path   /* initialized to be 0, \u8bb0\u5f55cost\u6765\u6e90 */\n</code></pre></p> </li> <li>\u7b97\u6cd51 <pre><code>void Unweighted( Table T )\n{\n    int  CurrDist;\n    Vertex  V, W;\n    for ( CurrDist = 0; CurrDist &lt; NumVertex; CurrDist ++ )\n    {\n        for ( each vertex V )\n      if ( !T[ V ].Known &amp;&amp; T[ V ].Dist == CurrDist ) \n            {\n          T[ V ].Known = true;\n          for ( each W adjacent to V )\n              if ( T[ W ].Dist == Infinity )\n                    {\n            T[ W ].Dist = CurrDist + 1;\n            T[ W ].Path = V;\n              } /* end-if Dist == Infinity */\n      } /* end-if !Known &amp;&amp; Dist == CurrDist */\n    }  /* end-for CurrDist */\n}\n</code></pre> \\(T=O(|V|^2)\\)\uff0ce\u7684\u4e2a\u6570\u7684\u590d\u6742\u5ea6\u88ab\u5b83\u7684bound\u7701\u6389\u4e86 Distance\u548cKnown\u9020\u6210\u4e86\u5197\u4f59</li> <li>\u7b97\u6cd52 - \u4f7f\u7528queue\u4f18\u5316 <pre><code>void Unweighted( Table T )\n{   \n    /* T is initialized with the source vertex S given */\n    Queue  Q;\n    Vertex  V, W;\n    Q = CreateQueue (NumVertex );  \n    MakeEmpty( Q );\n    Enqueue( S, Q ); /* Enqueue the source vertex */\n    while ( !IsEmpty( Q ) ) \n    {\n        V = Dequeue( Q );\n        T[ V ].Known = true; /* not really necessary */\n        for ( each W adjacent to V )\n            if ( T[ W ].Dist == Infinity ) \n            {\n                T[ W ].Dist = T[ V ].Dist + 1;\n                T[ W ].Path = V;\n                Enqueue( W, Q );\n            } /* end-if Dist == Infinity */\n    } /* end-while */\n    DisposeQueue( Q ); /* free memory */\n}\n</code></pre> \\(T=O(|V|+|E|)\\)</li> </ul>"},{"location":"FDS2/#dijkstras-algorithm-for-weighted-shortest-paths-","title":"Dijkstra's Algorithm (for weighted shortest paths) - \u5e26\u6743\u91cd\u7684\u6700\u77ed\u8def","text":"<p>\uff01\uff01\u91cd\u70b9  \uff01\uff01</p> <ul> <li>\u524d\u63d0\u6761\u4ef6\uff1a\u4e0d\u5e26\u8d1f\u8fb9</li> <li>\u5b9a\u4e49\u4e00\u4e2a\\(S\\) - { s and vi\u2019s whose shortest paths have been found }\uff08\u7531\u8d77\u59cb\u70b9\u548c\u5df2\u77e5\u6700\u77ed\u8def\u7684\u70b9\u6784\u6210\uff09</li> <li>\u601d\u8def\uff1a\u8d2a\u5fc3\u7b97\u6cd5\uff0ccost\u968f\u7740\u52a0edge\u7684\u8fc7\u7a0b\u662f\u9012\u589e\u7684\uff0c\u56e0\u6b64\u5f53\u524d\u6700\u5c0f\u5c31\u662f\u5168\u5c40\u6700\u5c0f</li> <li> <p> <pre><code>  void Dijkstra( Table T )\n  {   \n      /* T is initialized by Figure 9.30 on p.303 */\n      Vertex  V, W;\n      for ( ; ; )\n      {\n          V = smallest unknown distance vertex;\n          if ( V == NotAVertex )\n            break; \n          T[ V ].Known = true;\n          for ( each W adjacent to V )\n            if ( !T[ W ].Known ) \n                if ( T[ V ].Dist + Cvw &lt; T[ W ].Dist )\n                  {\n                    Decrease( T[ W ].Dist  to\n                            T[ V ].Dist + Cvw );\n                    T[ W ].Path = V;\n                } /* end-if update W */\n      } /* end-for( ; ; ) */\n  }\n</code></pre></p> </li> <li> <p>\u5bf9\u4e8e<code>V = smallest unknown distance vertex</code>\u7684\u4e0d\u540c\u5b9e\u73b0\u65b9\u5f0f\uff1a</p> <ul> <li>Implementation1 - scan </li> <li>Implementation2 - heap <ul> <li>Method1<ul> <li>\u7b2c\u4e00\u9879\uff1a\u6bcf\u4e2a\u9876\u70b9\u5904\u7406\u4e00\u6b21\u7136\u540edeletemin - find the smallest unknown</li> <li>\u7b2c\u4e8c\u9879\uff1aDecrease</li> </ul> </li> <li>Method2 \u76f4\u63a5insert\uff0c\u4e0d\u8fdb\u884cdecrease</li> </ul> </li> </ul> </li> </ul>"},{"location":"FDS2/#no-negative-cycle","title":"\u6709\u8d1f\u8fb9(no negative cycle)\u7684\u60c5\u51b5","text":"<pre><code>void  WeightedNegative( Table T )\n{   \n    /* T is initialized by Figure 9.30 on p.303 */\n    Queue  Q;\n    Vertex  V, W;\n    Q = CreateQueue (NumVertex );  \n    MakeEmpty( Q );\n    Enqueue( S, Q ); /* Enqueue the source vertex */\n    while ( !IsEmpty( Q ) )\n    {\n        /* each vertex can dequeue at most |V| times */\n        V = Dequeue( Q );\n        for ( each W adjacent to V )\n            if ( T[ V ].Dist + Cvw &lt; T[ W ].Dist ) \n            {\n                /* no longer once per edge */\n                T[ W ].Dist = T[ V ].Dist + Cvw;\n                T[ W ].Path = V;\n                if ( W is not already in Q )\n                    Enqueue( W, Q );\n            } /* end-if update */\n    } /* end-while */\n    DisposeQueue( Q ); /* free memory */\n}\n</code></pre> <p>\\(T=O(|V|\u00d7|E|)\\)\uff0c\u6ca1\u6709known set\u4e86</p>"},{"location":"FDS2/#dag-","title":"DAG - \u6709\u5411\u524d\u8d8b\u56fe","text":"<p>\u9876\u70b9\u53ef\u4ee5\u6309\u62d3\u6251\u987a\u5e8f\u9009\u62e9\uff0c\u56e0\u4e3a\u5f53\u4e00\u4e2a\u9876\u70b9\u88ab\u9009\u62e9\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u6765\u81ea\u672a\u77e5\u8282\u70b9\u7684\u8fb9\uff0c\u5b83\u7684\u8ddd\u79bb\u5c31\u4e0d\u80fd\u518d\u964d\u4f4e\u3002</p> <p>\\(T = O( |E| + |V| )\\) and no priority queue is needed.</p> <ul> <li> <p>AOE (Activity On Edge) Networks\u7684\u5e94\u7528 - CPM</p> <ul> <li> <p></p> </li> <li> <p>e.g. </p> </li> </ul> </li> </ul>"},{"location":"FDS2/#-","title":"\u6240\u6709\u9876\u70b9\u6700\u77ed\u8def - \u76f4\u63a5\u904d\u5386\u6240\u6709\u9876\u70b9\u89e3\u6700\u77ed\u8def\u56fe","text":""},{"location":"FDS2/#_2","title":"\u6700\u5927\u6d41\u95ee\u9898","text":"<p>\u65b9\u6cd51\uff1a\u6700\u5f00\u59cb\u7684\u6b8b\u5dee\u56fe\u662f\u539f\u6765\u7684\u56fe\uff0c\u4e0d\u65ad\u5bfb\u627e\u6700\u77ed\u8def\uff08\u4ece\u6d41\u91cf\u6700\u5c11\u7684\u5f00\u59cb\uff09\u5b58\u5165flow graph\u5e76\u5728\u6b8b\u5dee\u56fe\u4e2d\u5220\u9664\uff0c\u76f4\u5230\u6b8b\u5dee\u56fe\u4e2d\u6ca1\u6709\u6700\u77ed\u8def\uff1a</p> <p></p> <p>\u65b9\u6cd52\uff1a\u6bcf\u6b21\u5bf9\u4e8e\u88ab\u9009\u4e2d\u7684\u8fb9\uff0c\u5728\u6b8b\u5dee\u56fe\u4e2dadd\u4e00\u4e2a\u53cd\u5411\u7684\u8fb9\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3</p> <p></p> <p>\u5177\u4f53\u5b9e\u73b01\uff1a \u628aG\u770b\u6210\u65e0\u6743\u56fe\uff0c\u6bcf\u6b21\u4f7f\u7528bfs\u627e\u5230\u4e00\u6761\u8def\u5f84\u7136\u540e\u5bf9\u6b8b\u5dee\u56fe\u6dfb\u52a0\u53cd\u5411\u8def\u5f84\uff0c\u76f4\u5230\u6ca1\u6709\u8def\u5f84\u53ef\u627e</p> <p>\\(T=O(f\u00b7|E|)\\) where \\(f\\) is the maximum flow.</p> <p>\u5177\u4f53\u5b9e\u73b02\uff1a \u7c7bDijkstra's algorithm\uff0c\u53ea\u4e0d\u8fc7\u6bcf\u6b21\u9009known vertex\u7684\u6807\u51c6\u662fallows the largest increase in flow</p> <p></p> <p>\u5177\u4f53\u5b9e\u73b03\uff1a\u5728\u5177\u4f53\u5b9e\u73b01\u7684\u57fa\u7840\u4e0a\u51cf\u53bb\u7684\u8def\u5f84\u6570\u4e0d\u662f1\u800c\u662f\u6574\u4e2a\u8def\u5f84\u7684\u6d41\u91cf\u7684\u6700\u5c0f\u503c</p> <p></p> <p>note\uff1a</p> <ul> <li>\u5982\u679c\u6bcf\u4e00\u4e2a\u4e0d\u5c5e\u4e8e{s,t}\u7684\u89d2\u90fd\u53ea\u6709\u4e00\u4e2a\u5165\u8fb9\u6216\u4e00\u4e2a\u51fa\u8fb9\uff0c\u90a3\u4e48\u65f6\u95f4\u7684bound\u4f1a\u88ab\u51cf\u5c11\u5230\\(O(|E||V|^{1/2})\\)</li> <li>\u6700\u5c0f\u6210\u672c\u6d41\u95ee\u9898\u662f\u5728\u6240\u6709\u6700\u5927\u6d41\u91cf\u4e2d\uff0c\u5728\u6bcf\u6761\u8fb9\u90fd\u6709\u5355\u4f4d\u6d41\u91cf\u6210\u672c\u7684\u60c5\u51b5\u4e0b\uff0c\u627e\u51fa\u4e00\u4e2a\u6210\u672c\u6700\u5c0f\u7684\u6d41\u91cf</li> </ul>"},{"location":"FDS2/#_3","title":"\u6700\u5c0f\u751f\u6210\u6811","text":"<p>\u56feG\u7684\u751f\u6210\u6811\u662f\u7531V(G)\u548cE(G)\u7684\u5b50\u96c6\u7ec4\u6210\u7684\u6811</p> <p></p> <ul> <li> <p>\u6700\u5c0f\u751f\u6210\u6811\u662f\u6811\uff0c\u56e0\u4e3a\u5b83\u662f\u65e0\u73af\u7684\u2014\u2014\u8fb9\u7684\u4e2a\u6570\u662f|V| - 1</p> </li> <li> <p>\u5b83\u662f\u6700\u5c0f\u7684\uff0c\u56e0\u4e3a\u8fb9\u7684\u603b\u6210\u672c\u662f\u6700\u5c0f\u7684</p> </li> <li> <p>\u5b83\u662f\u751f\u6210\u7684\uff0c\u56e0\u4e3a\u5b83\u8986\u76d6\u4e86\u6bcf\u4e2a\u9876\u70b9</p> </li> <li> <p>\u5982\u679cG\u8fde\u901a\uff0c\u5219\u5b58\u5728\u6700\u5c0f\u751f\u6210\u6811</p> </li> <li> <p>\u5728\u751f\u6210\u6811\u4e2d\u52a0\u5165\u4e00\u6761\u975e\u6811\u8fb9\uff0c\u5f97\u5230\u4e00\u4e2a\u73af</p> </li> </ul>"},{"location":"FDS2/#1","title":"\u7b97\u6cd51 \u8d2a\u5fc3\u7b97\u6cd5","text":"<ul> <li>\u6211\u4eec\u5fc5\u987b\u53ea\u4f7f\u7528\u56fe\u4e2d\u7684\u8fb9</li> <li>\u5fc5\u987b\u7cbe\u786e\u5730\u4f7f\u7528|V|-1\u6761\u8fb9</li> <li>\u6211\u4eec\u4e0d\u4f1a\u4f7f\u7528\u4ea7\u751fcycle\u7684\u8fb9</li> </ul> <p>\u4f7f\u7528\u7c7b\u4f3cDijkstra's algorithm\u904d\u5386\u70b9\uff0c\u4f7f\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u662f\u5426\u6709cycle</p> <ul> <li>\u6b64\u5904\u5e76\u67e5\u96c6\u4e5f\u53ef\u4ee5\u7528loop\u7b80\u5316\u5224\u65ad\uff0c\u4f46\u662fKruskal's Algorithm\u4e0d\u53ef\u4ee5</li> </ul>"},{"location":"FDS2/#2-kruskals-algorithmmaintain-a-forest","title":"\u7b97\u6cd52 Kruskal\u2019s Algorithm\u2014\u2014maintain a forest","text":"<p>\u5efa\u5806\uff0c\u628a\u6240\u6709\u8fb9\u90fd\u653e\u5728\u5806\u91cc\u9762</p> <pre><code>void Kruskal ( Graph G )\n{   \n    T = { };\n    while  ( T contains less than |V| - 1 edges &amp;&amp; E is not empty ) \n    {\n        choose a least cost edge (v, w) from E;\n        delete (v, w) from E;\n        if  ( (v, w) does not create a cycle in T ) add (v, w) to T;\n        else    discard (v, w) ;\n    }\n    if  ( T contains fewer than |V| - 1 edges )\n        Error ( \u201cNo spanning tree\u201d ) ;\n}\n</code></pre> <p>\\(T=O(|E|log|E|)\\) \u904d\u5386\u6bcf\u6761\u8fb9*deletemin</p>"},{"location":"FDS2/#dfs","title":"DFS\u7684\u5e94\u7528","text":"<p>\u5148\u5e8f\u904d\u5386\u7684\u666e\u904d\u5f62\u5f0f</p> <pre><code>void DFS ( Vertex V )  /* this is only a template */\n{   \n    visited[ V ] = true;  /* mark this vertex to avoid cycles */\n    for ( each W adjacent to V )\n        if ( !visited[ W ] )\n    DFS( W );\n} /* T = O( |E| + |V| ) as long as adjacency lists are used */\n</code></pre>"},{"location":"FDS2/#1_1","title":"1. \u65e0\u5411\u56fe","text":"<pre><code>void ListComponents ( Graph G ) \n{   \n    for ( each V in G ) \n        if ( !visited[ V ] ) \n        {\n    DFS( V );\n            printf(\u201c\\n\u201c);\n        }\n}\n</code></pre>"},{"location":"FDS2/#2-biconnectivity-","title":"2. Biconnectivity - \u53cc\u5411\u8fde\u901a\u6027","text":"<ul> <li>v\u662farticulation point\u5982\u679c\u53bb\u6389v\u4f1a\u4f7f\u5f97\u56fe\u88ab\u5206\u4e3a\uff08\u81f3\u5c11\uff09\u4e24\u4e2a\u8fde\u901a\u5206\u91cf</li> <li> <p>G\u662fbiconnected graph\u5982\u679c\uff1a</p> <ul> <li>G\u662fconnected</li> <li>\u6ca1\u6709articulation point</li> </ul> </li> <li> <p>\u53cc\u5411\u8fde\u901a\u5206\u91cf - \u6700\u5927\u53cc\u5411\u8fde\u901a\u5b50\u56fe</p> <ul> <li>\u5355\u4e2a\u8282\u70b9\u662f\u4e00\u4e2a\u53cc\u5411\u8fde\u901a\u5206\u91cf</li> <li>\u4e24\u4e2a\u6216\u591a\u4e2a\u53cc\u8fde\u63a5\u5206\u91cf\u4e0d\u80fd\u5171\u4eab\u4efb\u4f55\u8fb9\u3002\u56e0\u6b64E(G)\u88abG\u7684\u53cc\u8fde\u901a\u5206\u91cf\u5206\u5272\u3002</li> </ul> </li> </ul> <p></p>"},{"location":"FDS2/#_4","title":"\u5bfb\u627e\u53cc\u8fde\u901a\u5206\u91cf","text":"<ul> <li>DFS\u83b7\u5f97\u751f\u6210\u6811\uff0c\u8bb0\u5f55DFS\u8bbf\u95ee\u987a\u5e8f - If u is an ancestor of v, then Num( u ) &lt; Num( v )</li> <li>\u628a\u539f\u56fe\u4e2d\u6ca1\u6709\u51fa\u73b0\u5728spanning tree\u7684\u8fb9\u7528\u865a\u7ebf\u8868\u793a</li> <li>\u5bfb\u627earticulation point\uff1a<ul> <li>\u5982\u679c\u6839\u7ed3\u70b9\u81f3\u5c11\u67092\u4e2a\u5b50\u7ed3\u70b9\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u4e00\u4e2aarticulation point</li> <li>\u5176\u4ed6\u8282\u70b9articulation point\u662f\u5f53\u4e14\u4ec5\u5f53\uff1a<ul> <li>\u6709\u81f3\u5c11\u4e00\u4e2achild</li> <li>\u4e0d\u53ef\u80fd\u5411\u4e0b\u8d70\u81f3\u5c11\u4e00\u6b65\u4e4b\u540e\u53ef\u4ee5\u8df3\u5230u's ancestor - \u4f8b\u5982\u8fd9\u5f20\u56fe\u4f9d\u636e\u8fd9\u4e2a\u6027\u8d28\u6392\u9664\u4e862\u30014\u30016</li> </ul> </li> </ul> </li> </ul> <p>\u5177\u4f53\u7b97\u6cd5\uff1a - \u5b9a\u4e49\uff1a     - \u6839\u8282\u70b9\u548c\u4e0d\u542bback edge\u7684\u53f6\u8282\u70b9\u7684Low number\u5c31\u662f\u81ea\u5df1\u7684num</p> <ul> <li>articulation point\u6761\u4ef6\uff1a<ul> <li>\u81f3\u5c11\u6709\u4e24\u4e2a\u5b69\u5b50\u7684\u6839\u8282\u70b9</li> <li>\u81f3\u5c11\u6709\u4e00\u4e2a\u5b69\u5b50\u4e14<code>Low(child) &gt;= Num(u)</code>\u7684\u5176\u4ed6\u8282\u70b9</li> </ul> </li> </ul>"},{"location":"FDS2/#3","title":"3. \u6b27\u62c9\u73af","text":"<p>\u5b9a\u4e49\uff1a\u4e00\u7b14\u753b\u4e14\u5728\u8d77\u59cb\u70b9\u7ed3\u675f\uff08\u4e0d\u8003\u8651\u8d77\u59cb\u70b9\u7684\u662f\u6b27\u62c9\u8def\u5f84\uff09</p> <ul> <li>\u53ea\u6709\u5f53\u56fe\u662f\u8fde\u901a\u7684\u5e76\u4e14\u6bcf\u4e2a\u70b9\u662f\u5076\u6570\u5ea6\u65f6\uff0c\u6b27\u62c9\u73af\u624d\u53ef\u80fd\u5b58\u5728</li> <li>\u5982\u679c\u6070\u597d\u6709\u4e24\u4e2a\u5947\u6570\u5ea6\u7684\u9876\u70b9\uff0c\u6b27\u62c9\u8def\u5f84\u662f\u53ef\u80fd\u7684\uff0c\u5e76\u4e14\u5fc5\u987b\u4ece\u5176\u4e2d\u4e00\u4e2a\u5947\u6570\u5ea6\u9876\u70b9\u5f00\u59cb</li> </ul> <p>\u8f93\u51fa\u6b27\u62c9\u73af\uff1a\u591a\u8f6eDFS\uff08\u7b97\u6cd5\u76ee\u7684\uff1a\u5bfb\u627e\u4e00\u5f20\u56fe\u6709\u51e0\u4e2a\u6b27\u62c9\u73af\uff09</p> <p></p> <ul> <li>\u8be5\u8def\u5f84\u5e94\u8be5\u88ab\u7ef4\u62a4\u4e3a\u4e00\u4e2a\u94fe\u8868</li> <li> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u90bb\u63a5\u8868\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6307\u5411\u6700\u540e\u626b\u63cf\u5230\u7684\u8fb9\u7684\u6307\u9488</p> </li> <li> <p>\\(T=O(|E|+|V|)\\)</p> </li> </ul> <p>Find a simple cycle in an undirected graph that visits every vertex \u2013 Hamilton cycle</p>"},{"location":"FDS3/","title":"Chapter6 Sorting","text":""},{"location":"FDS3/#adt","title":"ADT\u5b9a\u4e49","text":"<pre><code>void  X_Sort ( ElementType  A[ ],  int N )\n/*N\u662f\u4e00\u4e2a\u5408\u6cd5\u6574\u6570\uff0c\u4e3a\u4e86\u65b9\u4fbf\u4f1a\u5047\u8bbeA\u4e3a\u6574\u6570\u6570\u7ec4\uff1b` &gt; `\u548c` &lt; `\u64cd\u4f5c\u7b26\u5b58\u5728\uff0c\u5e76\u4e14\u662f\u552f\u4e00\u5141\u8bb8\u5bf9\u8f93\u5165\u6570\u636e\u8fdb\u884c\u7684\u64cd\u4f5c\uff1b\u53ea\u8003\u8651\u5185\u90e8\u6392\u5e8f*/\n</code></pre>"},{"location":"FDS3/#_1","title":"\u63d2\u5165\u6392\u5e8f","text":"<pre><code>void InsertionSort ( ElementType A[ ], int N ) \n{\n    int  j, P; \n    ElementType  Tmp; \n    for ( P = 1; P &lt; N; P++ ) \n    { \n        Tmp = A[ P ];  /* the next coming card */\n        for ( j = P; j &gt; 0 &amp;&amp; A[ j - 1 ] &gt; Tmp; j-- )   A[ j ] = A[ j - 1 ]; \n          /* shift sorted cards to provide a position for the new coming card */\n        A[ j ] = Tmp;  /* place the new card at the proper position */\n    }  /* end for-P-loop */\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a</p> <ul> <li>worst case - \\(O(N^2)\\)</li> <li>best case - \\(O(N)\\)</li> </ul>"},{"location":"FDS3/#_2","title":"\u7b80\u5355\u6392\u5e8f\u590d\u6742\u5ea6\u7684\u4e0b\u9650","text":"<p>\u5b9a\u4e49\u9006\u5e8f\u5bf9\uff08inversion\uff09\u4e3a\u5177\u6709i &lt; j\u4f46A[i] &gt; A[j]\u6027\u8d28\u7684\u4efb\u610f\u6709\u5e8f\u5bf9(i, j) \\(\\rightarrow\\) \u4e00\u6b21\uff08\u76f8\u90bb\uff09\u4ea4\u6362\u53ea\u80fd\u6d88\u9664\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff0c\u6392\u5e8f\u7684\u8fc7\u7a0b\u5c31\u662f\u6d88\u9664\u9006\u5e8f\u5bf9\u7684\u8fc7\u7a0b</p> <p>\\(T ( N, I ) = O(I+N)\\) where I is the number of inversions in the original array.</p> <p>\u7531best\u548cworst\u7684\u60c5\u51b5\u53ef\u5f97\uff1aaverage case \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(N(N-1)/4\\)</p> <p>\u4efb\u4f55\u901a\u8fc7\u4ea4\u6362\u76f8\u90bb\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u7684\u7b97\u6cd5\u9700\u8981\\(\\Omega(N^2)\\)\u7684\u65f6\u95f4</p>"},{"location":"FDS3/#-shellsort","title":"\u5e0c\u5c14\u6392\u5e8f - Shellsort","text":"<p>\u9694n\u4e2a\u6570\u53d6\u4e00\u4e2a\u7684\u591a\u8f6e\u63d2\u6392\uff0c\u4e00\u6b21\u4ea4\u6362\u53ef\u4ee5\u6d88\u9664\u591a\u4e2a\u9006\u5e8f\u5bf9\uff1b\u6700\u540e\u4e00\u8f6e\u5c31\u662f1-sort\uff08\u63d2\u6392\uff09\uff0c\u4fdd\u8bc1\u7ed3\u679c\u6b63\u786e\u6027\u3002</p> <p></p> <pre><code>void Shellsort( ElementType A[ ], int N ) \n{ \n    int  i, j, Increment; \n    ElementType  Tmp; \n    for ( Increment = N / 2; Increment &gt; 0; Increment /= 2 )  \n    /*h sequence */\n        for ( i = Increment; i &lt; N; i++ ) \n        { /* insertion sort */\n            Tmp = A[ i ]; \n            for ( j = i; j &gt;= Increment; j -= Increment ) \n                if( Tmp &lt; A[ j - Increment ] ) \n                    A[ j ] = A[ j - Increment ]; \n                else \n                    break; \n            A[ j ] = Tmp; \n        } /* end for-I and for-Increment loops */\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u597d\u5206\u6790\uff0c\u662f\u7528\u4e00\u79cd\u770b\u4f3c\u590d\u6742\u7684\u65b9\u6cd5\u51cf\u5c11\u4e86\u4ea4\u6362\u6b21\u6570</p> <ul> <li>worst case: \\(\\Theta(N^2)\\) </li> <li>\u6ca1\u6709\u4e25\u683c\u8981\u6c42\u4e00\u5b9a\u8981\u53d6prime number</li> <li>\u4f18\u5316\uff1a\u8003\u8651no common factors\uff0c\u53d6</li> <li>\u4f18\u5316\u540e\u7684worst case: \\(\\Theta(N^{3/2})\\)</li> <li>\u4f18\u5316\u540e\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6: \\(O(N^{5/4})\\)</li> <li></li> </ul> <p>\u5927\u89c4\u6a21\u6570\u636equeue sort\u66f4\u597d\u7528\uff0c\u5c0f\u89c4\u6a21\u6570\u636eshell sort\u6216\u8005insertion sort\u66f4\u597d\u7528\uff0c\u5e76\u4e14\u5728\u9762\u5bf9\u5927\u89c4\u6a21\u6570\u636e\u7684\u65f6\u5019\u4e5f\u4f1a\u6267\u884ccut off\u4f7f\u5176\u53d8\u6210\u591a\u5757\u5c0f\u89c4\u6a21\u6570\u636e\u7136\u540e\u6267\u884cshell sort/ insertion sort</p>"},{"location":"FDS3/#-heapsort","title":"\u5806\u6392\u5e8f - Heapsort","text":"<pre><code>Algorithm 1:\n{\n    BuildHeap( H ); /* O( N ) */\n    for ( i=0; i&lt;N; i++ ) \n        TmpH[ i ] = DeleteMin( H ); /* O( log N ) */\n    for ( i=0; i&lt;N; i++ ) \n        H[ i ] = TmpH[ i ]; /* O( 1 ) */\n}\n</code></pre> <p>\\(T(N)=O(NlogN)\\)</p> <p>\u7f3a\u70b9\uff1a\u7a7a\u95f4\u590d\u6742\u5ea6doubled</p> <p>Algorithm2: \u5efa\u6700\u5927\u5806</p> <p>\u5efa\u5b8c\u4e00\u4e2a\u6700\u5927\u5806\u4e4b\u540e\u539f\u5730\u6392\u5e8f\uff0c\u4e0d\u9700\u8981\u518d\u5f00\u4e00\u4e2a\u6570\u7ec4</p> <pre><code>void Heapsort( ElementType A[ ], int N ) \n{  \n    int i; \n    for ( i = N / 2; i &gt;= 0; i - - ) /* BuildHeap */ \n        PercDown( A, i, N ); \n    for ( i = N - 1; i &gt; 0; i - - ) \n    { \n        Swap( &amp;A[ 0 ], &amp;A[ i ] ); /* DeleteMax */ \n        PercDown( A, 0, i ); \n    } \n}\n</code></pre> <p>Average Time Complexity: \\(2NlogN-O(NloglogN)\\)</p> <p>\u7f3a\u70b9\uff1a\u5b9e\u9645\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u8bfb\u5185\u5b58\u6b21\u6570\u592a\u591a\u4e86\uff0c\u8017\u65f6\u5e76\u6ca1\u6709\u7406\u8bba\u90a3\u4e48\u5c11</p>"},{"location":"FDS3/#-mergesort","title":"\u5f52\u5e76\u6392\u5e8f - Mergesort","text":""},{"location":"FDS3/#_3","title":"\u5f52\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4","text":"<p> \\(T(N) = O(N)\\)</p>"},{"location":"FDS3/#_4","title":"\u5206\u6cbb\u6cd5\u5b9e\u73b0\u5f52\u5e76\u6392\u5e8f","text":"<pre><code>void MSort( ElementType A[ ], ElementType TmpArray[ ], int Left, int Right ) \n{   \n    // \u6570\u636e\u5212\u5206\n    int  Center; \n    if ( Left &lt; Right ) \n    {  \n        /* if there are elements to be sorted */\n        Center = ( Left + Right ) / 2; \n        MSort( A, TmpArray, Left, Center );     /* T( N / 2 ) */\n        MSort( A, TmpArray, Center + 1, Right );    /* T( N / 2 ) */\n        Merge( A, TmpArray, Left, Center + 1, Right );  /* O( N ) */\n        // If a TmpArray is declared locally for each call of Merge, then S(N) = O(NlogN)\n    } \n} \n\nvoid Mergesort( ElementType A[ ], int N ) \n{   \n    ElementType  *TmpArray;  /* need O(N) extra space */\n    TmpArray = malloc( N * sizeof( ElementType ) ); \n    if ( TmpArray != NULL ) \n    { \n        MSort( A, TmpArray, 0, N - 1 ); \n        free( TmpArray ); \n    } \n    else  FatalError( \"No space for tmp array!!!\" ); \n}\n\n/* Lpos = start of left half, Rpos = start of right half */ \nvoid Merge( ElementType A[ ], ElementType TmpArray[ ], int Lpos, int Rpos, int RightEnd ) \n{   \n    int  i, LeftEnd, NumElements, TmpPos; \n    LeftEnd = Rpos - 1; \n    TmpPos = Lpos; \n    NumElements = RightEnd - Lpos + 1; \n    while( Lpos &lt;= LeftEnd &amp;&amp; Rpos &lt;= RightEnd ) /* main loop */ \n        if ( A[ Lpos ] &lt;= A[ Rpos ] )   TmpArray[ TmpPos++ ] = A[ Lpos++ ]; \n        else    TmpArray[ TmpPos++ ] = A[ Rpos++ ]; \n    while( Lpos &lt;= LeftEnd ) /* Copy rest of first half */ \n        TmpArray[ TmpPos++ ] = A[ Lpos++ ]; \n    while( Rpos &lt;= RightEnd ) /* Copy rest of second half */ \n        TmpArray[ TmpPos++ ] = A[ Rpos++ ]; \n    for( i = 0; i &lt; NumElements; i++, RightEnd-- ) \n         /* Copy TmpArray back */ \n        A[ RightEnd ] = TmpArray[ RightEnd ]; \n}\n</code></pre>"},{"location":"FDS3/#_5","title":"\u590d\u6742\u5ea6\u5206\u6790","text":"<p>\\(T(1) = 1\\)</p> <p>\\(T(N) = 2T(N/2)+O(N)=2^kT(N/2^k)+k*O(N)=N*T(1)+logN*O(N)=O(N+NlogN)\\)</p> <p></p> <p>\u975e\u9012\u5f52\u5b9e\u73b0\uff1a\u81ea\u5df1\u5212\u5206\uff0c\u5206\u5230\u5355\u72ec\u4e00\u5757\u4e3a\u6b62\uff0c\u76f4\u63a5\u6267\u884c\u5408\u5e76</p> <p>\u5f52\u5e76\u6392\u5e8f\u9700\u8981\u7ebf\u6027\u7684\u989d\u5916\u5185\u5b58\uff0c\u590d\u5236\u6570\u7ec4\u7684\u901f\u5ea6\u5f88\u6162\u3002\u5b83\u5f88\u5c11\u7528\u4e8e\u5185\u90e8\u6392\u5e8f\uff0c\u4f46\u5bf9\u4e8e\u5916\u90e8\u6392\u5e8f\u975e\u5e38\u6709\u7528\u3002</p>"},{"location":"FDS3/#_6","title":"\u5185\u90e8\u6392\u5e8f\u4e0e\u5916\u90e8\u6392\u5e8f\u6bd4\u8f83","text":"\u7279\u6027 \u5185\u90e8\u6392\u5e8f \u5916\u90e8\u6392\u5e8f \u6570\u636e\u4f4d\u7f6e \u5185\u5b58\u4e2d \u5916\u90e8\u5b58\u50a8\u8bbe\u5907\u4e0a \u6570\u636e\u91cf \u5c0f\u5230\u4e2d\u7b49 \u975e\u5e38\u5927 \u901f\u5ea6 \u5feb \u6162\uff08\u7531\u4e8e\u78c1\u76d8I/O\uff09 \u7b97\u6cd5\u4e3e\u4f8b \u5feb\u901f\u6392\u5e8f\u3001\u5806\u6392\u5e8f\u7b49 \u5916\u90e8\u5f52\u5e76\u6392\u5e8f I/O\u64cd\u4f5c \u8f83\u5c11 \u9891\u7e41 \u4f7f\u7528\u573a\u666f \u5185\u5b58\u53ef\u4ee5\u5bb9\u7eb3\u5168\u90e8\u6570\u636e \u5185\u5b58\u65e0\u6cd5\u5bb9\u7eb3\u5168\u90e8\u6570\u636e"},{"location":"FDS3/#_7","title":"\u7b97\u6cd5\u7a33\u5b9a\u6027","text":"<p>\u7a33\u5b9a\u6392\u5e8f\u7684\u6982\u5ff5\uff1a\u80fd\u4fdd\u8bc1\u6392\u5e8f\u524d2\u4e2a\u76f8\u7b49\u7684\u6570\u5176\u5728\u5e8f\u5217\u7684\u524d\u540e\u4f4d\u7f6e\u987a\u5e8f\u548c\u6392\u5e8f\u540e\u5b83\u4eec\u4e24\u4e2a\u7684\u524d\u540e\u4f4d\u7f6e\u987a\u5e8f\u76f8\u540c</p> <p>\u9009\u62e9\u6392\u5e8f\u3001\u5feb\u901f\u6392\u5e8f\u3001\u5e0c\u5c14\u6392\u5e8f\u3001\u5806\u6392\u5e8f\u4e0d\u662f\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\uff1b\u800c\u5192\u6ce1\u6392\u5e8f\u3001\u63d2\u5165\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u548c\u57fa\u6570\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\u3002</p>"},{"location":"FDS3/#-quicksort","title":"\u5feb\u901f\u6392\u5e8f - Quicksort","text":"<p>\u73b0\u6709\u6392\u5e8f\u7b97\u6cd5\u4e2d\u5b9e\u9645\u6700\u5feb\u7684</p> <p>\u7b97\u6cd5\u6838\u5fc3\uff1a\u9009\u652f\u70b9\uff0c\u5206\u6210\u5de6\u5c0f\u53f3\u5927\u4e24\u90e8\u5206\uff1b\u4e00\u6b21\u81f3\u5c11\u6392\u597d\u4e00\u4e2a\u6570\uff08\u652f\u70b9\uff09</p> <p></p> <p>e.g. </p>"},{"location":"FDS3/#pivot","title":"pivot\u7684\u9009\u53d6","text":"<p>Pivot = median(left, center, right)</p> <p>\u7528\u5934\u4e2d\u5c3e\u4e09\u4e2a\u6570\u7684\u4e2d\u4f4d\u6570\u903c\u8fd1\u6574\u4f53\u4e2d\u4f4d\u6570</p>"},{"location":"FDS3/#_8","title":"\u5212\u5206\u64cd\u4f5c","text":"<p>\u628a\u9009\u4e2d\u7684Povit\u653e\u5230\u6700\u540e\u4e00\u4f4d</p> <p>\u7528<code>i ++</code>\u548c<code>j --</code>\u5bfb\u627e\u9006\u5e8f\u5bf9\u5e76\u4ea4\u6362\uff0c\u4e00\u6b21\u4ea4\u6362\u6d88\u9664\u4e24\u4e2a\u9006\u5e8f\u5bf9\uff0c\u76f4\u5230<code>i</code>\u548c<code>j</code>\u904d\u5386\u4e86\u6574\u4e2a\u5e8f\u5217\uff0c\u5c06<code>pivot</code>\u63d2\u5165\u4e8c\u8005\u4e4b\u95f4</p>"},{"location":"FDS3/#_9","title":"\u9002\u7528\u60c5\u51b5","text":"<ul> <li>\u5f53N\u5f88\u5c0f(&lt;=20)\u65f6\uff0c\u5feb\u901f\u6392\u5e8f\u6bd4\u63d2\u5165\u6392\u5e8f\u6162</li> <li>\u6545\u5f53N\u5f88\u5c0f\u65f6cutoff\u91c7\u7528\u5176\u4ed6\u65b9\u6cd5</li> </ul>"},{"location":"FDS3/#_10","title":"\u5177\u4f53\u5b9e\u73b0","text":"<pre><code>void  Quicksort( ElementType A[ ], int N ) \n{ \n    Qsort( A, 0, N - 1 ); \n    /* A:   the array   */\n    /* 0:   Left index  */\n    /* N \u2013 1: Right index   */\n}\n\n/* Return median of Left, Center, and Right */ \n/* Order these and hide the pivot */ \n\nElementType Median3( ElementType A[ ], int Left, int Right ) \n{ \n    int  Center = ( Left + Right ) / 2; \n    if ( A[ Left ] &gt; A[ Center ] ) \n        Swap( &amp;A[ Left ], &amp;A[ Center ] ); \n    if ( A[ Left ] &gt; A[ Right ] ) \n        Swap( &amp;A[ Left ], &amp;A[ Right ] ); \n    if ( A[ Center ] &gt; A[ Right ] ) \n        Swap( &amp;A[ Center ], &amp;A[ Right ] ); \n    /* Invariant: A[ Left ] &lt;= A[ Center ] &lt;= A[ Right ] */ \n    Swap( &amp;A[ Center ], &amp;A[ Right - 1 ] ); /* Hide pivot */ \n    /* only need to sort A[ Left + 1 ] \u2026 A[ Right \u2013 2 ] */\n    return  A[ Right - 1 ];  /* Return pivot */ \n}\n// !!!\u5f88\u91cd\u8981!!!\nvoid  Qsort( ElementType A[ ], int Left, int Right ) \n{   \n    int  i,  j; \n    ElementType  Pivot; \n    if ( Left + Cutoff &lt;= Right ) \n    {  \n        /* if the sequence is not too short */\n        Pivot = Median3( A, Left, Right );  /* select pivot */\n        i = Left;     \n        j = Right \u2013 1;  /* why not set Left+1 and Right-2? */\n        for( ; ; ) \n        { \n            while ( A[ + +i ] &lt; Pivot ) { }  /* scan from left */\n            while ( A[ \u2013 \u2013j ] &gt; Pivot ) { }  /* scan from right */\n            if ( i &lt; j )    Swap( &amp;A[ i ], &amp;A[ j ] );  /* adjust partition */\n            else     break;  /* partition done */\n        } \n        Swap( &amp;A[ i ], &amp;A[ Right - 1 ] ); /* restore pivot */ \n        Qsort( A, Left, i - 1 );      /* recursively sort left part */\n        Qsort( A, i + 1, Right );   /* recursively sort right part */\n    }  /* end if - the sequence is long */\n    else /* do an insertion sort on the short subarray */ \n        InsertionSort( A + Left, Right - Left + 1 );\n}\n</code></pre> <p>\u975e\u9012\u5f52\u5b9e\u73b0\u5c31\u662f\u81ea\u5df1\u627eleft\u548cright</p>"},{"location":"FDS3/#_11","title":"\u590d\u6742\u5ea6\u5206\u6790","text":"<p>Read Figure 6.16 on p.214 for the 5th algorithm on solving kth largest problem.</p>"},{"location":"FDS3/#-table-sort","title":"\u5927\u578b\u7ed3\u6784\u4f53\u6392\u5e8f\uff08\u8868\u6392\u5e8f\uff09- table sort","text":"<p>\u907f\u514d\u5927\u89c4\u6a21\u7684copy\uff0c\u5c06\u6307\u9488\u5b57\u6bb5\u6dfb\u52a0\u5230\u7ed3\u6784\u4e2d\u5e76\u4ea4\u6362\u6307\u9488\u2014\u2014\u95f4\u63a5\u6392\u5e8f\u3002\u5982\u679c\u786e\u5b9e\u6709\u5fc5\u8981\uff0c\u6700\u540e\u518d\u91cd\u65b0\u5b89\u6392\u7ed3\u6784\u3002 </p> <p>\u8282\u7701\u7a7a\u95f4\u590d\u6742\u5ea6\u7684\u91cd\u6392\u65b9\u6cd5\uff1a </p>"},{"location":"FDS3/#lower-bound","title":"\u4efb\u610f\u6392\u5e8f\u7684lower bound","text":"<p>\u4efb\u4f55\u57fa\u4e8e\u6bd4\u8f83\u6392\u5e8f\u7684\u7b97\u6cd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u8ba1\u7b97\u65f6\u95f4\u5fc5\u987b\u4e3a\\(\\Omega(NlogN)\\)</p> <p>\u8bc1\u660e\uff1a</p> <p>\u6811\u7684\u6700\u5c0f\u9ad8\u5ea6\u4e3a\\(NlogN\\)</p>"},{"location":"FDS3/#-bucket-sort-and-radix-sort","title":"\u6876\u6392\u5e8f\u548c\u57fa\u6570\u6392\u5e8f - Bucket Sort and Radix Sort","text":""},{"location":"FDS3/#_12","title":"\u6876\u6392\u5e8f","text":"<pre><code>Algorithm\n{\n    initialize count[ ];\n    while (read in a student\u2019s record)\n        insert to list count[stdnt.grade];\n    for (i=0; i&lt;M; i++) {\n        if (count[i])\n            output list count[i];\n    }\n}\n</code></pre> <p>\\(T(N,M) = O(M+N)\\)</p>"},{"location":"FDS3/#_13","title":"\u57fa\u6570\u6392\u5e8f","text":"<ul> <li>\u4ece\u672b\u4f4d\u5f00\u59cb\u6876\u6392\u5e8f</li> <li>\u4ece\u5de6\u5230\u53f3\u5012\u4e8c\u4f4d\u6392\u5e8f</li> <li>...\u9012\u5f52</li> <li>\u76f4\u5230\u6392\u5230\u7b2c\u4e00\u4f4d</li> </ul> <p>\u57fa\u6570\u5b9a\u4e49:</p> <p>\u5206\u7c7b\uff1a</p> <ul> <li>MSD</li> </ul> <p></p> <ul> <li>LSD</li> </ul> <p></p>"},{"location":"FDS3/#hashing","title":"Hashing","text":"<p>\u6838\u5fc3\u601d\u60f3\uff1asearch by formula - \u6709\u70b9\u7c7b\u4f3c\u86db\u7f51\u56fe\u7684\u67e5\u627e</p> <p></p>"},{"location":"FDS3/#hash-tables","title":"Hash Tables","text":"<p>hash function f(x) - \u628a\u4e00\u4e2a\u5143\u7d20map\u5230\u4e00\u4e2abucket\u91cc\u9762\u53bb\u7684\u6620\u5c04</p> <ul> <li> <p>easy to compute</p> </li> <li> <p>\u6700\u5c0f\u5316collision</p> </li> <li> <p>Probability(\\(f(x)=i\\)) = 1/b - uniform hash function</p> </li> <li> <p>hash function \u7684\u9009\u53d6</p> </li> </ul> <p>\u4f8b\uff1a\u5b57\u7b26\u4e32\u7684hash function</p> <p></p> <pre><code>Index Hash3( const char *x, int TableSize ) \n{\n    unsigned  int  HashVal = 0; \n    while( *x != '\\0' )   HashVal = ( HashVal &lt;&lt; 5 ) + *x++; \n    return HashVal % TableSize; \n} \n</code></pre> <p>loading density \\(\\lambda = n/(s*b)\\) - \u53cd\u5e94\u62e5\u6324\u7a0b\u5ea6\uff0c\u548crunning time\u76f8\u5173</p> <p></p> <p>collision - \u4e0d\u540c\u7684identity\u7684hash function\u7684value\u662f\u4e00\u6837\u7684</p> <p>overflow - hash a new identifier into a full bucket</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6ca1\u6709overflow\u7684\u60c5\u51b5\u4e0b\uff0c\\(T_{search}=T_{insert}=T_{delete}=O(1)\\)</p> <p>\u4f46\u662f\u5982\u679c\u5b9e\u73b0\u4e0d\u597d\uff0c\u6709\u5f88\u591aoverflow\u7684\u8bdd\uff0c\u5c31\u4f1a\u53d8\u6210\u7ebf\u6027\u7684</p>"},{"location":"FDS3/#seperate-chaining","title":"Seperate Chaining","text":"<p>\u7528\u94fe\u8868\u89e3\u51b3collision\u95ee\u9898</p> <pre><code>struct  ListNode; \ntypedef  struct  ListNode  *Position; \nstruct  HashTbl; \ntypedef  struct  HashTbl  *HashTable; \nstruct  ListNode { \n    ElementType  Element; \n    Position  Next; \n}; \ntypedef  Position  List; \n/* List *TheList will be an array of lists, allocated later */ \n/* The lists use headers (for simplicity), */ \n/* though this wastes space */ \nstruct  HashTbl { \n    int  TableSize; \n    List  *TheLists; \n}; \n</code></pre> <ul> <li>\u521b\u5efa\u4e00\u4e2a\u7a7atable</li> </ul> <pre><code>HashTable  InitializeTable( int TableSize ) \n{   \n    HashTable  H; \n    int  i; \n    if ( TableSize &lt; MinTableSize ) \n    { \n        Error( \"Table size too small\" );  \n        return NULL;  \n    } \n    H = malloc( sizeof( struct HashTbl ) );  /* Allocate table */\n    if ( H == NULL )    FatalError( \"Out of space!!!\" ); \n    H-&gt;TableSize = NextPrime( TableSize );  /* Better be prime */\n    H-&gt;TheLists = malloc( sizeof( List ) * H-&gt;TableSize );  /*Array of lists*/\n    if ( H-&gt;TheLists == NULL )   FatalError( \"Out of space!!!\" ); \n    for( i = 0; i &lt; H-&gt;TableSize; i++ ) \n    {   /* Allocate list headers */\n        H-&gt;TheLists[ i ] = malloc( sizeof( struct ListNode ) ); /* Slow! */\n        if ( H-&gt;TheLists[ i ] == NULL )  FatalError( \"Out of space!!!\" ); \n        else    H-&gt;TheLists[ i ]-&gt;Next = NULL;\n    } \n    return  H; \n} \n</code></pre> <ul> <li>\u67e5\u627e</li> </ul> <pre><code>Position  Find ( ElementType Key, HashTable H ) \n{ \n    Position P; \n    List L; \n\n    L = H-&gt;TheLists[ Hash( Key, H-&gt;TableSize ) ]; //Hash\u662f\u6211\u7684Hash Function\n\n    P = L-&gt;Next; \n    while( P != NULL &amp;&amp; P-&gt;Element != Key )  /* Probably need strcmp */ \n    P = P-&gt;Next; \n    return P; \n} \n</code></pre> <ul> <li>\u63d2\u5165</li> </ul> <pre><code>void  Insert ( ElementType Key, HashTable H ) \n{ \n    Position   Pos, NewCell; \n    List  L; \n    Pos = Find( Key, H ); \n    if ( Pos == NULL ) \n    {   \n        /* Key is not found, then insert */\n        NewCell = malloc( sizeof( struct ListNode ) ); \n        if ( NewCell == NULL )  FatalError( \"Out of space!!!\" ); \n        else \n        { \n             L = H-&gt;TheLists[ Hash( Key, H-&gt;TableSize ) ]; \n             NewCell-&gt;Next = L-&gt;Next; \n             NewCell-&gt;Element = Key; /* Probably need strcpy! */ \n             L-&gt;Next = NewCell; \n        } \n    } \n} \n</code></pre> <p>\u5728\u8fd9\u79cd\u7b97\u6cd5\u60c5\u51b5\u4e0b\uff0c\\(\\lambda\\)\u22481</p>"},{"location":"FDS3/#open-addressing","title":"Open Addressing","text":"<p>\u6574\u4f53\u7b97\u6cd5\u6846\u67b6\uff1a</p> <pre><code>Algorithm: insert key into an array of hash table\n{\n    index = hash(key); // hash table \u5bf9\u5e94\u7684 bucket\n    initialize i = 0 // collision probing \u7684\u6b21\u6570\n    while ( collision at index ) \n    {\n        index = ( hash(key) + f(i) ) % TableSize; // \u4e0d\u540c\u7684probing\u7b97\u6cd5\u53ea\u662ff(i)\u4e0d\u4e00\u6837\n        if ( table is full )    break;\n        else    i ++;\n    }\n    if ( table is full )    ERROR (\u201cNo space left\u201d);\n    else    insert key at index;\n}\n</code></pre> <p>\\(\\lambda\\)\u22480.5</p>"},{"location":"FDS3/#1-linear-probing","title":"1. Linear Probing","text":"<p>\\(f(i)=i\\)</p>"},{"location":"FDS3/#2-quadratic-probing","title":"2. Quadratic Probing","text":"<p>\\(f(i)=i^2\\)</p> <p>\u5b9a\u74061\uff1a</p> <p>\u6761\u4ef6\uff1a</p> <ul> <li>quadratic probing is used</li> <li>the table size is prime</li> <li>the table is at least half empty</li> </ul> <p>\u7ed3\u8bba\uff1a</p> <ul> <li>a new element can always be inserted</li> </ul> <p>\u5b9a\u74062\uff1a</p> <ul> <li>the table size is a prime of the form 4k + 3 \\(\\rightarrow\\) the quadratic probing \\(f(i)=\\)\u00b1\\(i^2\\) can probe the entire table</li> </ul> <p>\u67e5\u627e\uff1a</p> <pre><code>Position  Find ( ElementType Key, HashTable H ) \n{   \n    Position  CurrentPos; \n    int  CollisionNum; \n    CollisionNum = 0; \n    CurrentPos = Hash( Key, H-&gt;TableSize ); \n    while( H-&gt;TheCells[ CurrentPos ].Info != Empty &amp;&amp; \n          H-&gt;TheCells[ CurrentPos ].Element != Key ) \n    { \n        CurrentPos += 2 * ++CollisionNum - 1; // \u76f8\u5f53\u4e8e+i^2\uff0c\u4f46\u662f\u5229\u7528\u4e86\u548c\u4e0a\u4e00\u8f6e\u7ed3\u679c\u7684\u5173\u7cfb\uff0c\u8fd9\u6837\u66f4\u5feb\n        if ( CurrentPos &gt;= H-&gt;TableSize )  CurrentPos -= H-&gt;TableSize; \n    } \n    return CurrentPos; \n} \n</code></pre> <p>\u63d2\u5165\uff1a</p> <pre><code>void  Insert ( ElementType Key, HashTable H ) \n{ \n    Position  Pos; \n    Pos = Find( Key, H ); \n    if ( H-&gt;TheCells[ Pos ].Info != Legitimate ) // \u5728\u67e5\u627e\u4e2d\u56e0\u4e3a\u6b64\u4f4d\u7f6e\u5143\u7d20\u6ca1\u6709key\u800c\u8fd4\u56de\u7684pos\n    { \n        /* OK to insert here */ \n        H-&gt;TheCells[ Pos ].Info = Legitimate; \n        H-&gt;TheCells[ Pos ].Element = Key; /* Probably need strcpy */ \n    } \n} \n</code></pre> <p>\u5220\u9664 - lazy deletion\uff0c\u5728rehashing\u7684\u65f6\u5019\u6b63\u5f0f\u6267\u884c\u5220\u9664</p> <p>\u6b21\u805a\u96c6\u95ee\u9898 - \u5728\\(\\lambda\\)\u6bd4\u8f83\u5927\u7684\u65f6\u5019\u4f1a\u51fa\u73b0</p> <p>quadratic hashing = open addressing + quadratic probing</p>"},{"location":"FDS3/#3-double-hashing","title":"3. Double Hashing","text":"<p>$f(i)=i*hash_2(x) $     // \\(hash_2( x )\\) is the 2nd hash function</p> <p>tip: \\(hash_2(x)=R-(x\\% R)\\) with R a prime smaller than TableSize, will work well.</p>"},{"location":"FDS3/#rehashing","title":"Rehashing","text":"<p>\u505a\u6cd5\uff1a</p> <ul> <li>Build another table that is about twice as big;</li> <li>Scan down the entire original hash table for non-deleted elements;</li> <li>Use a new function to hash those elements into the new table.</li> </ul> <p>\u4ec0\u4e48\u65f6\u5019\u9700\u8981\uff1f</p> <ul> <li>As soon as the table is half full</li> <li>When an insertion fails</li> <li>When the table reaches a certain load factor - \u56e0\u4e3a\\(\\lambda\\)\u8d8a\u5927\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u9ad8\uff0c\u6240\u4ee5\u5bf9\u6027\u80fd\u6709\u8981\u6c42\u7684\u8bdd\u53ef\u80fd\u5c31\u5728\u4e00\u4e2a\u7ed9\u5b9a\u7684load factor\u7684\u65f6\u5019\u5c31\u6267\u884crehashing\u4e86</li> </ul>"},{"location":"dip%E5%8E%86%E5%B9%B4%E5%8D%B7%E6%95%B4%E7%90%86/","title":"\u5386\u5e74\u5377\u6c47\u603b\u53ca\u7b54\u6848\u6574\u7406","text":"<p>\u8bf4\u660e\uff1a \u5386\u5e74\u5377\u6765\u6e90 \u53c2\u8003\u7b14\u8bb0\uff1ahobbitqia&amp;jiepeng's notes \u611f\u89c9dip\u8fd9\u95e8\u8bfe\u9762\u5411\u5386\u5e74\u5377\u590d\u4e60\u5f88\u6709\u5fc5\u8981\uff0c\u6211\u4eec\u8fd9\u4e00\u5c4a\u8003\u8bd5\u7684\u65f6\u501980%\u4ee5\u4e0a\u90fd\u662f\u4e4b\u524d\u8003\u8fc7\u7684\uff0c\u7531\u4e8e\u662f\u95ed\u5377\u6240\u4ee5\u8981\u5c3d\u53ef\u80fd\u80cc\u51c6\u786e \u7b54\u6848\u662f\u81ea\u5df1\u505a\u7684\uff0c\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u5c0f\u95ee\u9898</p>"},{"location":"dip%E5%8E%86%E5%B9%B4%E5%8D%B7%E6%95%B4%E7%90%86/#2022-2023","title":"2022-2023\u79cb\u51ac\u5b66\u671f\u771f\u9898","text":"<p>\u6ce8\uff1a\u9898\u76ee\u662f\u4e2d\u82f1\u5bf9\u7167\u7684\uff0c\u56de\u7b54\u7528\u4e2d\u6587\u6216\u82f1\u6587\u5747\u53ef</p>"},{"location":"dip%E5%8E%86%E5%B9%B4%E5%8D%B7%E6%95%B4%E7%90%86/#1n","title":"\u4e00\u3001\u586b\u7a7a\u9898\uff081*n\uff09","text":"<ol> <li> <p>Digital image (or video stream) \u6570\u5b57\u56fe\u50cf is the main form to present information. For human being, more than 60% information are obtained by vision \u89c6\u89c9.</p> </li> <li> <p>\u8bbe\u5907\u76f8\u5173\u7684\u989c\u8272\u7a7a\u95f4\uff1a\uff08RGB\uff09\uff08CMY\uff09\uff08HSV\uff09\uff1b\u8bbe\u5907\u65e0\u5173\u7684\u989c\u8272\u7a7a\u95f4\uff1a\uff08CIE xyz\uff09\uff08CIE <code>L*a*b</code>\uff09\uff08CIE YUV\uff09</p> </li> <li> <p>Image Data \u8981\u6c42\u6bcf\u4e00\u884c\u5fc5\u987b\u662f 4 \u7684\u500d\u6570\uff0c\u4f8b\u5982 <code>13 A1 17 19 18 15</code> \u5728\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e3a\uff1a\uff08<code>13 A1 17 19 18 15 00 00</code>\uff09</p> </li> <li> <p>BMP\u56fe\u50cf\u7684\u6587\u4ef6\u7ed3\u6784\uff1a\uff08IMAGE FILE HEADER\uff09\uff08IMAGE IMFORMATION HEADER\uff09\uff08PALETTE\uff09\uff08IMAGE DATA\uff09</p> </li> </ol>"},{"location":"dip%E5%8E%86%E5%B9%B4%E5%8D%B7%E6%95%B4%E7%90%86/#_2","title":"\u4e8c\u3001\u8bf4\u660e\u9898","text":"<ol> <li> <p>\u6570\u7801\u76f8\u673a\u6210\u50cf\u539f\u7406\uff086'\uff09 </p> </li> <li> <p>JPEG\u538b\u7f29\u7684\u57fa\u672c\u601d\u60f3\u548c\u4f18\u52bf \u538b\u7f29\u7b56\u7565\uff1a\u6839\u636e\u538b\u7f29\u6bd4\u8981\u6c42\uff0c\u4ece\u9ad8\u9891\u5230\u4f4e\u9891\u9010\u6b65\u524a\u51cf\u4fe1\u606f \u4f18\u52bf\uff1a\u9ad8\u9891\u4fe1\u606f\u5360\u7528\u5b58\u50a8\u7a7a\u95f4\u5927\uff0c\u51cf\u5c11\u9ad8\u9891\u4fe1\u606f\u66f4\u5bb9\u6613\u83b7\u5f97\u9ad8\u538b\u7f29\u6bd4\uff1b\u4f4e\u9891\u4fe1\u606f\u53ef\u4ee5\u4fdd\u7559\u7269\u4f53\u7684\u57fa\u672c\u8f6e\u5ed3\u548c\u8272\u5f69\u5206\u5e03\uff0c\u6700\u5927\u9650\u5ea6\u7ef4\u6301\u56fe\u50cf\u8d28\u91cf\uff1b\u9002\u5408\u7528\u4e8e\u4e92\u8054\u7f51\u7684\u89c6\u89c9\u5a92\u4f53\u3002</p> </li> <li> <p>BMP\u56fe\u50cf\u8c03\u8272\u677f\u7684\u4f5c\u7528\uff084'\uff09 \u5c06\u989c\u8272\u91cd\u65b0\u7f16\u7801\uff0c\u4f7f\u5176\u5728\u4f4e\u4f4d\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u6700\u5927\u7a0b\u5ea6\u5730\u4fdd\u7559\u539f\u6765\u7684\u989c\u8272</p> </li> <li> <p>\u83b7\u53d6\u4e8c\u503c\u56fe\u50cf\u65f6\uff0c\u5982\u4f55\u786e\u5b9a\u4e00\u4e2a\u597d\u7684\u9608\u503c </p> </li> <li> <p>\u8150\u8680\u64cd\u4f5c\u7684\u7269\u7406\u610f\u4e49\uff1b\u7ed9\u51fa input image \u548c struct element \u8981\u6c42\u753b\u51fa\u8150\u8680\u540e\u7684\u77e9\u9635 \u6d88\u9664\u8fb9\u754c\u70b9\uff0c\u4f7f\u8fb9\u754c\u5411\u5185\u90e8\u6536\u7f29\u7684\u8fc7\u7a0b\u3002\u53ef\u4ee5\u2f64\u6765\u6d88\u9664\u2f29\u4e14\u2f46\u610f\u4e49\u7684\u7269\u4f53\u3002 </p> </li> <li> <p>\u89e3\u91ca\u53ef\u89c6\u5316\u589e\u5f3a\u7684\u5bf9\u6570\u64cd\u4f5c </p> </li> <li> <p>\u76f4\u65b9\u56fe\u5747\u8861\u5316\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u505a\u5230\u771f\u6b63\u5747\u8861 \u6b65\u9aa42\u4e2d\uff0c\u6240\u5f97\u7684sk\u4e0d\u53ef\u80fd\u6b63\u597d\u7b49\u4e8e8\u7ea7\u7070\u5ea6\u503c\u4e2d\u7684\u67d0\u4e00\u7ea7\uff0c\u56e0\u6b64\u9700\u8981\u5c31\u8fd1\u5f52\u5165\u67d0\u4e00\u4e2a\u7070\u5ea6\u7ea7\u4e2d\u3002\u8fd9\u6837\uff0c\u76f8\u90bb\u7684\u591a\u4e2ask\u5c31\u53ef\u80fd\u843d\u5165\u540c\u4e00\u4e2a\u7070\u5ea6\u7ea7\uff0c\u9700\u8981\u5728\u6b65\u9aa43\u65f6\u5c06\u5904\u4e8e\u540c\u4e00\u4e2a\u7070\u5ea6\u7ea7\u7684\u50cf\u7d20\u4e2a\u6570\u7d2f\u52a0\u3002\u56e0\u6b64\uff0c\u79bb\u6563\u7070\u5ea6\u76f4\u65b9\u56fe\u5747\u8861\u5316\u64cd\u4f5c\u4ee5\u540e\uff0c\u6bcf\u4e2a\u7070\u5ea6\u7ea7\u5904\u7684\u6982\u7387\u5bc6\u5ea6\uff08\u6216\u50cf\u7d20\u4e2a\u6570\uff09\u5e76\u4e0d\u5b8c\u5168\u4e00\u6837\u3002</p> </li> <li> <p>\u89e3\u91ca\u6700\u8fd1\u90bb\u63d2\u503c\u7684\u8fc7\u7a0b </p> </li> <li> <p>\u8868\u60c5\u6bd4\u4f8b\u56fe\u7684\u65b9\u6cd5 </p> </li> <li> <p>\u5199\u51fa\u53cc\u8fb9\u6ee4\u6ce2\u7684 general idea \u548c\u53cc\u8fb9\u6ee4\u6ce2\u4e0e\u9ad8\u65af\u6ee4\u6ce2\u7684\u533a\u522b \u4e00\u5e45\u56fe\u50cf\u6709\u4e24\u4e2a\u4e3b\u8981\u7279\u5f81: \u7a7a\u95f4\u57dfS\uff0c\u5b83\u662f\u4e00\u5e45\u56fe\u50cf\u4e2d\u53ef\u80fd\u4f4d\u7f6e\u7684\u96c6\u5408\u3002\u8fd9\u4e0e\u5206\u8fa8\u7387\u6709\u5173\uff0c\u4e5f\u5c31\u662f\u56fe\u50cf\u4e2d\u7684\u884c\u6570\u548c\u5217\u6570\u3002 \u5f3a\u5ea6\u57dfR\uff0c\u662f\u53ef\u80fd\u50cf\u7d20\u503c\u7684\u96c6\u5408\u3002\u7528\u6765\u8868\u793a\u50cf\u7d20\u503c\u7684\u4f4d\u6570\u53ef\u80fd\u4f1a\u53d8\u5316\u3002\u5e38\u89c1\u7684\u50cf\u7d20\u8868\u793a\u5f62\u5f0f\u662f\u65e0\u7b26\u53f7\u5b57\u8282(0\u5230255)\u548c\u6d6e\u70b9\u6570\u3002 \u540c\u65f6\u8003\u8651Space Domain S\u548cIntensity Domain R\uff0c\u628a\u56fe\u7247\u5206\u6210\u5927\u5c3a\u5ea6\u7279\u5f81\u3001\u7ed3\u6784\u548c\u5c0f\u5c3a\u5ea6\u7279\u5f81\u3001\u7eb9\u7406\u4e24\u90e8\u5206\u3002 \u9ad8\u65af\u6ee4\u6ce2\u53ea\u8003\u8651\u4e86\u7a7a\u95f4\u57df\uff0c\u800c\u53cc\u8fb9\u6ee4\u6ce2\u7531\u4e8e\u8003\u8651\u4e86intensity domain\uff0c\u56e0\u6b64\u5177\u6709\u4fdd\u8fb9\u7684\u4f5c\u7528\u3002</p> </li> <li> <p>SIFT \u7684 full version</p> </li> <li> <p>Back-propagation \u7684\u65b9\u6cd5 </p> </li> <li> <p>RLE\uff08\u7ed9\u4e00\u5f20\u56fe\uff0c\u8981\u6c42\u5199\u51fa\u7f16\u7801\uff09 </p> </li> </ol>"},{"location":"dip%E5%8E%86%E5%B9%B4%E5%8D%B7%E6%95%B4%E7%90%86/#5","title":"\u4e09\u3001\u8ba1\u7b97\u9898\uff085\uff09","text":"<ol> <li>w=0.8, \u6a21\u578b\u53d6\u70b9\u6570\u4e3a3\uff0c\u95ee\u6700\u5c11\u8981\u53d6\u51e0\u4e2a\u70b9\u624d\u80fd\u4fdd\u8bc1\u6982\u7387&gt;95%RANSEC\u6536\u655b</li> </ol> <p>(1-0.8^3)^n = 1 - 0.95</p> <p>RANSEC:</p> <ol> <li>\u9009\u62e9\u51fa\u53ef\u4ee5\u4f30\u8ba1\u51fa\u6a21\u578b\u7684\u6700\u2f29\u6570\u636e\u96c6\uff1b</li> <li>\u4f7f\u2f64\u8fd9\u4e2a\u6570\u636e\u96c6\u6765\u8ba1\u7b97\u51fa\u6570\u636e\u6a21\u578b\uff1b</li> <li>\u5c06\u6240\u6709\u6570\u636e\u5e26\u2f0a\u8fd9\u4e2a\u6a21\u578b\uff0c\u8ba1\u7b97\u51fa\u201c\u5185\u70b9\u201d\u7684\u6570\u2f6c</li> <li>\u2f50\u8f83\u5f53\u524d\u6a21\u578b\u548c\u4e4b\u524d\u63a8\u51fa\u7684\u6700\u597d\u7684\u6a21\u578b\u7684\u201c\u5185\u70b9\u201c\u7684\u6570\u91cf\uff0c\u8bb0\u5f55\u6700\u2f24\u201c\u5185\u70b9\u201d\u6570\u7684\u6a21\u578b\u53c2\u6570\u548c\u201c\u5185\u70b9\u201d\u6570\uff1b</li> <li>\u91cd\u590d1-4\u6b65\uff0c\u76f4\u5230\u8fed\u4ee3\u7ed3\u675f\u6216\u8005\u5f53\u524d\u6a21\u578b\u5df2\u7ecf\u2f9c\u591f\u597d\u4e86(\u201c\u5185\u70b9\u6570\u2f6c\u2f24\u4e8e\u2f00\u5b9a\u6570\u91cf\u201d)\u3002</li> </ol>"},{"location":"dip%E5%8E%86%E5%B9%B4%E5%8D%B7%E6%95%B4%E7%90%86/#46","title":"\u56db\u3001\u8bc1\u660e\u9898\uff084+6\uff09","text":"<ol> <li> <p>\u8bf7\u8bc1\u660e\u81a8\u80c0\u548c\u8150\u8680\u7684\u5bf9\u5076\u5173\u7cfb\uff084'\uff09 </p> </li> <li> <p>\u8bf7\u8bc1\u660eSNF\u4e2dp=1\u65f6\u662f\u4e2d\u503c\u6ee4\u6ce2\uff0cp=2\u65f6\u662f\u5747\u503c\u6ee4\u6ce2\uff086'\uff09 \u4e2d\u503c\u6ee4\u6ce2\u5c31\u662f\u4e00\u5806\u7edd\u5bf9\u503c\u76f8\u52a0\uff0c\u6700\u5c0f\u503c\u5728\u4e2d\u503c\u5904\u53d6\u5230 \u5747\u503c\u6ee4\u6ce2\u5c31\u662f\u6c42\u5bfc\uff0c\u5bfc\u6570\u96f6\u70b9\u7684\u89e3\u5c31\u662f\u5747\u503c </p> </li> </ol>"},{"location":"dip%E5%8E%86%E5%B9%B4%E5%8D%B7%E6%95%B4%E7%90%86/#20212022","title":"2021~2022\u79cb\u51ac\u5b66\u671f\u771f\u9898","text":"<ol> <li> <p>\u4e3a\u4ec0\u4e48\u8bf4\u6570\u5b57\u56fe\u50cf\u662f\u4fe1\u606f\u7684\u4e3b\u8981\u5c55\u793a\u65b9\u5f0f\uff1f\u6210\u50cf\u65b9\u5f0f\u6709\u54ea\u4e9b\uff1f \u53ef\u89c1\u5149\u3001X\u5c04\u7ebf\u3001\u8d85\u58f0\u6ce2\u3001\u7ea2\u5916\u7ebf</p> </li> <li> <p>\u7ed9\u51fa\u76f8\u673a\u7684\u793a\u610f\u56fe\uff0c\u63cf\u8ff0\u76f8\u673a\u7684\u6210\u50cf\u8fc7\u7a0b \u91cd\u590d</p> </li> <li> <p>(1) \u8bbe\u5907\u65e0\u5173\u7684\u989c\u8272\u6709\u54ea\u4e9b\uff1f\u8bbe\u5907\u6709\u5173\u7684\u989c\u8272\u6709\u54ea\u4e9b\uff1f \u91cd\u590d   (2) \u5047\u5982RGB\u7684\u989c\u8272\u7a7a\u95f4\u662f\u4e00\u4e2a\u6b63\u7acb\u65b9\u4f53\uff0c\u90a3\u4e48(0,0,0)\u5230(1,1,1)\u8fd9\u6761\u5bf9\u89d2\u7ebf\u8868\u793a\u4ec0\u4e48\uff1f \u7070\u5ea6\u4ece255\u52300\u7684\u4ece\u9ed1\u5230\u767d\u7684\u6d88\u8272</p> </li> <li> <p>JPEG\u56fe\u50cf\u7684\u538b\u7f29\u7b56\u7565\u662f\u4ec0\u4e48\uff1f\u6709\u4ec0\u4e48\u4f18\u70b9\uff1f \u91cd\u590d</p> </li> <li> <p>(1) \u7ed9\u5b9a\u7ed3\u6784\u5143\u548c\u56fe\u50cf\uff0c\u753b\u51fa\u8150\u8680\u64cd\u4f5c\u7684\u7ed3\u679c\u3002\u5e76\u8bf4\u8bf4\u8150\u8680\u64cd\u4f5c\u7684\u610f\u4e49 \u91cd\u590d   (2) \u5728(1)\u7684\u57fa\u7840\u4e0a\uff0c\u753b\u51fa\u81a8\u80c0\u64cd\u4f5c\u7684\u7ed3\u679c \u5f00\u8fd0\u7b97</p> </li> <li> <p>\u7ed9\u5b9a\u56fe\u50cf\uff0c\u5199\u51fa\u884c\u7a0b\u7f16\u7801\uff0c\u5e76\u8bf4\u660e\u884c\u7a0b\u7f16\u7801\u7684\u539f\u7406 \u91cd\u590d</p> </li> <li> <p>\u5199\u51fa\u5bf9\u6570\u589e\u5f3a\u7684\u8fc7\u7a0b \u91cd\u590d</p> </li> <li> <p>\u76f4\u65b9\u56fe\u5747\u8861\u5316\u7684\u7ed3\u679c\u5206\u5e03\u4e0d\u5747\u5300\u7684\u539f\u56e0 \u91cd\u590d</p> </li> <li> <p>\u53cc\u7ebf\u6027\u63d2\u503c\u7684\u8fc7\u7a0b \uff081\uff09\u5b9a\u4e49\u53cc\u7ebf\u6027\u65b9\u7a0bg(x,y)=ax+by+cxy+d\u3002 \uff082\uff09\u5206\u522b\u5c06A\u3001B\u3001C\u3001D\u56db\u70b9\u7684\u4f4d\u7f6e\u548c\u7070\u5ea6\u4ee3\u5165\u65b9\u7a0b\uff0c\u5f97\u5230\u65b9\u7a0b\u7ec4\u3002 \uff083\uff09\u89e3\u65b9\u7a0b\u7ec4\uff0c\u89e3\u51faa\u3001b\u3001c\u3001d\u56db\u4e2a\u7cfb\u6570\u3002 \uff084\uff09\u5c06P\u70b9\u7684\u4f4d\u7f6e\u4ee3\u5165\u65b9\u7a0b\uff0c\u5f97\u5230P\u70b9\u7684\u7070\u5ea6\u3002</p> </li> <li> <p>\u5bfc\u5411\u6ee4\u6ce2\u548c\u53cc\u8fb9\u6ee4\u6ce2\u76f8\u6bd4\u6709\u4ec0\u4e48\u4f18\u70b9  \u4fdd\u8fb9\uff08\u4fdd\u68af\u5ea6\u5c31\u4e00\u5b9a\u80fd\u4fdd\u8fb9\uff0c\u53cd\u4e4b\u4e0d\u4e00\u5b9a\uff09 \u975e\u8fed\u4ee3 O1\u7684\u65f6\u95f4\uff0c\u5feb\u4e14\u4e0d\u9700\u8981\u901a\u8fc7\u8fd1\u4f3c\u7684\u65b9\u6cd5 \u4e0d\u5b58\u5728\u68af\u5ea6\u9006\u8f6c\u7684\u95ee\u9898</p> </li> <li> <p>Harris\u89d2\u70b9\u68c0\u6d4b\u516c\u5f0f\u63a8\u5bfc\u4ee5\u53ca\u5982\u4f55\u5224\u65ad  </p> </li> <li> <p>CNN\u4e2d\u7684\u6c60\u5316\u662f\u4ec0\u4e48\uff1f\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f \u6c60\u5316\uff08Pooling\uff09\uff0c\u5728\u6df1\u5ea6\u5b66\u4e60\u9886\u57df\uff0c\u7279\u522b\u662f\u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u4e2d\uff0c\u662f\u4e00\u79cd\u7f29\u51cf\u91c7\u6837\uff08Downsampling\uff09\u6216\u5b50\u91c7\u6837\uff08Subsampling)\u6280\u672f\uff0c\u901a\u5e38\u7528\u4e8e\u51cf\u5c11\u6570\u636e\u7684\u7ef4\u5ea6\uff0c\u964d\u4f4e\u5904\u7406\u590d\u6742\u5ea6\uff0c\u540c\u65f6\u4fdd\u7559\u91cd\u8981\u7684\u4fe1\u606f\u3002\u6c60\u5316\u64cd\u4f5c\u53ef\u4ee5\u51cf\u5c11\u6a21\u578b\u5bf9\u4f4d\u7f6e\u7684\u654f\u611f\u6027\uff0c\u589e\u52a0\u6a21\u578b\u5bf9\u5c0f\u7684\u53d8\u5316\u548c\u6270\u52a8\u7684\u9c81\u68d2\u6027\uff0c\u5e76\u51cf\u5c11\u53c2\u6570\u6570\u91cf\uff0c\u4ece\u800c\u5e2e\u52a9\u9632\u6b62\u8fc7\u62df\u5408\u3002 \u5e38\u89c1\u7684\u6c60\u5316\u64cd\u4f5c\u6709\uff1a</p> <ol> <li>\u6700\u5927\u6c60\u5316\uff08Max Pooling\uff09\uff1a\u5728\u8986\u76d6\u7684\u533a\u57df\u5185\u53d6\u6700\u5927\u503c\u4f5c\u4e3a\u8be5\u533a\u57df\u7684\u8f93\u51fa\u3002</li> <li>\u5e73\u5747\u6c60\u5316\uff08Average Pooling\uff09\uff1a\u8ba1\u7b97\u8986\u76d6\u533a\u57df\u5185\u6240\u6709\u5143\u7d20\u7684\u5e73\u5747\u503c\u4f5c\u4e3a\u8f93\u51fa\u3002</li> <li>\u5168\u5c40\u6c60\u5316\uff08Global Pooling\uff09\uff1a\u4f8b\u5982\u5168\u5c40\u5e73\u5747\u6c60\u5316\uff08Global Average Pooling\uff09\uff0c\u5728\u6574\u4e2a\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u4e0a\u8fdb\u884c\u6c60\u5316\uff0c\u901a\u5e38\u7528\u5728\u7f51\u7edc\u7684\u6700\u540e\u51e0\u5c42\uff0c\u5c06\u6bcf\u4e2a\u7279\u5f81\u56fe\u7f29\u51cf\u4e3a\u5355\u4e2a\u503c\u3002 \u6c60\u5316\u7684\u610f\u4e49\u4e3b\u8981\u4f53\u73b0\u5728\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a<ol> <li>\u7279\u5f81\u4e0d\u53d8\u6027\uff1a\u901a\u8fc7\u6c60\u5316\uff0c\u7f51\u7edc\u80fd\u591f\u5bf9\u8f93\u5165\u56fe\u7247\u4e2d\u7684\u5c0f\u53d8\u52a8\u4fdd\u6301\u4e0d\u53d8\u6027\uff0c\u6bd4\u5982\u5e73\u79fb\u3001\u65cb\u8f6c\u548c\u7f29\u653e\u3002</li> <li>\u964d\u4f4e\u7ef4\u5ea6\uff1a\u6c60\u5316\u51cf\u5c11\u4e86\u540e\u7eed\u5c42\u7684\u8f93\u5165\u6570\u636e\u7684\u5927\u5c0f\uff0c\u8fd9\u610f\u5473\u7740\u8ba1\u7b97\u91cf\u548c\u53c2\u6570\u6570\u91cf\u964d\u4f4e\uff0c\u5185\u5b58\u4f7f\u7528\u4e5f\u51cf\u5c11\u3002</li> <li>\u9632\u6b62\u8fc7\u62df\u5408\uff1a\u7531\u4e8e\u51cf\u5c11\u4e86\u6a21\u578b\u7684\u53c2\u6570\u6570\u91cf\u548c\u590d\u6742\u5ea6\uff0c\u6c60\u5316\u6709\u52a9\u4e8e\u9632\u6b62\u6a21\u578b\u8fc7\u5ea6\u9002\u5e94\u8bad\u7ec3\u6570\u636e\u7684\u7ec6\u8282\uff0c\u5373\u8fc7\u62df\u5408\u73b0\u8c61\u3002</li> <li>\u5f3a\u5316\u7279\u5f81\uff1a\u6700\u5927\u6c60\u5316\u6709\u52a9\u4e8e\u7a81\u51fa\u5f3a\u7279\u5f81\uff0c\u5ffd\u7565\u4e0d\u90a3\u4e48\u663e\u8457\u7684\u7279\u5f81\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u6c60\u5316\u662f\u6df1\u5ea6\u5b66\u4e60\u4e2d\u4e00\u79cd\u91cd\u8981\u7684\u64cd\u4f5c\uff0c\u5b83\u5728\u7b80\u5316\u7f51\u7edc\u7ed3\u6784\u7684\u540c\u65f6\u5e2e\u52a9\u63d0\u53d6\u548c\u4fdd\u7559\u5173\u952e\u7279\u5f81\uff0c\u5bf9\u4e8e\u6784\u5efa\u9ad8\u6548\u548c\u5f3a\u5927\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u81f3\u5173\u91cd\u8981\u3002</li> </ol> </li> </ol> </li> <li>\u76f4\u65b9\u56fe\u5747\u8861\u5316\u8ba1\u7b97 </li> </ol>"},{"location":"dip%E5%8E%86%E5%B9%B4%E5%8D%B7%E6%95%B4%E7%90%86/#20202021","title":"2020~2021\u79cb\u51ac\u5b66\u671f\u771f\u9898","text":"<ol> <li> <p>\u56fe\u50cf\u4e0e\u56fe\u5f62\u5728\u6765\u6e90/\u5e94\u7528\u65b9\u9762\u7684\u4e0d\u540c\uff0c\u4e3e3\u79cd\u6210\u50cf\u65b9\u5f0f \u56fe\u50cf\u548c\u56fe\u5f62\u662f\u89c6\u89c9\u8868\u73b0\u5f62\u5f0f\uff0c\u5b83\u4eec\u5728\u6765\u6e90\u548c\u5e94\u7528\u65b9\u9762\u5b58\u5728\u4e00\u4e9b\u663e\u8457\u7684\u4e0d\u540c\uff1a \u6765\u6e90\u5dee\u5f02\uff1a \u56fe\u50cf(Image) \u771f\u5b9e\u6765\u6e90\uff1a\u56fe\u50cf\u901a\u5e38\u6307\u7684\u662f\u901a\u8fc7\u6444\u5f71\u3001\u626b\u63cf\u6216\u5176\u4ed6\u6570\u5b57\u6355\u6349\u6280\u672f\u83b7\u5f97\u7684\u771f\u5b9e\u4e16\u754c\u7684\u89c6\u89c9\u8868\u793a\u3002\u8fd9\u5305\u62ec\u6570\u7801\u7167\u7247\u3001\u626b\u63cf\u7684\u6587\u6863\u548c\u5b9e\u65f6\u89c6\u9891\u6d41\u3002 \u50cf\u7d20\u6784\u6210\uff1a\u6570\u5b57\u56fe\u50cf\u901a\u5e38\u7531\u50cf\u7d20\u7ec4\u6210\uff0c\u8fd9\u4e9b\u50cf\u7d20\u5728\u5c4f\u5e55\u4e0a\u6392\u5217\u6210\u7f51\u683c\uff0c\u6bcf\u4e2a\u50cf\u7d20\u5305\u542b\u989c\u8272\u4fe1\u606f\u3002 \u56fe\u5f62(Graphic) \u8bbe\u8ba1\u521b\u4f5c\uff1a\u56fe\u5f62\u6307\u7684\u662f\u7531\u56fe\u5f62\u8bbe\u8ba1\u5e08\u6216\u827a\u672f\u5bb6\u521b\u4f5c\u7684\u89c6\u89c9\u5143\u7d20\uff0c\u8fd9\u4e9b\u5143\u7d20\u53ef\u4ee5\u662f\u63d2\u753b\u3001\u8bbe\u8ba1\u56fe\u6848\u3001\u56fe\u6807\u3001\u7c7b\u578b\u6392\u5370\u3001\u52a8\u753b\u6216\u8005\u662f\u901a\u8fc7\u8ba1\u7b97\u673a\u8f6f\u4ef6\u751f\u6210\u76843D\u6a21\u578b\u3002 \u5411\u91cf\u6216\u4f4d\u56fe\uff1a\u56fe\u5f62\u53ef\u4ee5\u662f\u57fa\u4e8e\u5411\u91cf\u7684\uff08\u7531\u5f62\u72b6\u548c\u7ebf\u6761\u7ec4\u6210\uff0c\u53ef\u4ee5\u65e0\u9650\u7f29\u653e\u800c\u4e0d\u5931\u771f\uff09\u6216\u8005\u662f\u4f4d\u56fe\uff08\u7531\u50cf\u7d20\u7ec4\u6210\uff0c\u653e\u5927\u540e\u53ef\u80fd\u4f1a\u5931\u771f\uff09\u3002 \u5e94\u7528\u5dee\u5f02\uff1a \u56fe\u50cf(Image)\u7684\u5e94\u7528 \u6444\u5f71\uff1a\u4e2a\u4eba\u548c\u4e13\u4e1a\u6444\u5f71\u3001\u65b0\u95fb\u6444\u5f71\u3001\u8096\u50cf\u6444\u5f71\u7b49\u3002 \u6587\u6863\u8bb0\u5f55\uff1a\u8eab\u4efd\u8bc1\u660e\u3001\u6cd5\u5f8b\u6587\u4ef6\u626b\u63cf\u3001\u5386\u53f2\u6863\u6848\u6570\u5b57\u5316\u7b49\u3002 \u5a31\u4e50\uff1a\u7535\u5f71\u3001\u7535\u89c6\u8282\u76ee\u3001\u89c6\u9891\u6e38\u620f\u4e2d\u7684\u5b9e\u666f\u6216\u8005CGI\uff08\u7535\u8111\u751f\u6210\u56fe\u50cf\uff09\u3002 \u76d1\u63a7\uff1a\u5b89\u5168\u76d1\u63a7\u3001\u4ea4\u901a\u7ba1\u7406\u3001\u73af\u5883\u76d1\u6d4b\u7b49\u3002 \u56fe\u5f62(Graphic)\u7684\u5e94\u7528 \u54c1\u724c\u548c\u5e7f\u544a\uff1a\u516c\u53f8\u6807\u8bc6\u3001\u5e7f\u544a\u3001\u5e02\u573a\u63a8\u5e7f\u6750\u6599\u7b49\u3002 \u7528\u6237\u754c\u9762\u8bbe\u8ba1\uff1a\u7f51\u7ad9\u3001\u5e94\u7528\u7a0b\u5e8f\u3001\u8f6f\u4ef6\u754c\u9762\u7684\u56fe\u6807\u3001\u6309\u94ae\u3001\u5e03\u5c40\u7b49\u3002 \u4fe1\u606f\u53ef\u89c6\u5316\uff1a\u56fe\u8868\u3001\u5730\u56fe\u3001\u4fe1\u606f\u56fe\u89e3\u7b49\uff0c\u7528\u4e8e\u5448\u73b0\u6570\u636e\u548c\u4fe1\u606f\u3002 \u827a\u672f\u548c\u5a31\u4e50\uff1a\u6f2b\u753b\u3001\u52a8\u753b\u3001\u89c6\u9891\u6e38\u620f\u4e2d\u7684\u89d2\u8272\u548c\u573a\u666f\u8bbe\u8ba1\u7b49\u3002 \u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u56fe\u50cf\u548c\u56fe\u5f62\u5f80\u5f80\u53ef\u4ee5\u76f8\u4e92\u7ed3\u5408\uff0c\u5982\u5728\u5e7f\u544a\u8bbe\u8ba1\u4e2d\u878d\u5408\u6444\u5f71\u56fe\u50cf\u548c\u56fe\u5f62\u5143\u7d20\uff0c\u6216\u8005\u5728\u7535\u5f71\u7279\u6548\u4e2d\u5c06\u5b9e\u62cd\u56fe\u50cf\u4e0e\u8ba1\u7b97\u673a\u751f\u6210\u56fe\u5f62\u7ed3\u5408\u3002\u4e0d\u540c\u7684\u6765\u6e90\u548c\u5e94\u7528\u4f7f\u5f97\u56fe\u50cf\u4e0e\u56fe\u5f62\u5404\u6709\u5176\u7279\u70b9\u548c\u4f18\u52bf\uff0c\u4f46\u5b83\u4eec\u5728\u89c6\u89c9\u4f20\u8fbe\u4e2d\u90fd\u626e\u6f14\u7740\u81f3\u5173\u91cd\u8981\u7684\u89d2\u8272\u3002 \u6210\u50cf\u65b9\u5f0f\u91cd\u590d\u4e86</p> </li> <li> <p>\u4ecb\u7ecd\u6570\u7801\u76f8\u673a\u751f\u6210\u56fe\u7247\u7684\u8fc7\u7a0b \u91cd\u590d</p> </li> <li> <p>\u54ea\u4e9b\u56e0\u7d20\u4f1a\u5bf9\u666f\u6df1\u6709\u5f71\u54cd\uff1f\u5982\u4f55\u5f71\u54cd\uff1f    (1) \u955c\u5934\u5149\u5708\uff1a\u5149\u5708\u8d8a\u5927\uff0c\u666f\u6df1\u8d8a\u5c0f\uff1b\u5149\u5708\u8d8a\u5c0f\uff0c\u666f\u6df1\u8d8a\u5927\uff1b    (2) \u955c\u5934\u7126\u8ddd\uff1a\u955c\u5934\u7126\u8ddd\u8d8a\u957f\uff0c\u666f\u6df1\u8d8a\u5c0f\uff1b\u7126\u8ddd\u8d8a\u77ed\uff0c\u666f\u6df1\u8d8a\u5927\uff1b    (3) \u62cd\u6444\u8ddd\u79bb\uff1a\u8ddd\u79bb\u8d8a\u8fdc\uff0c\u666f\u6df1\u8d8a\u5927\uff1b\u8ddd\u79bb\u8d8a\u8fd1\uff0c\u666f\u6df1\u8d8a\u5c0f\u3002</p> </li> <li> <p>HSV\u5404\u4e2a\u5b57\u6bcd\u7684\u610f\u601d\uff0c\u753b\u7b80\u56fe\u8868\u793aHSV\uff0c\u4ee5\u53ca\u6bd4RGB\u597d\u5728\u54ea\u91cc </p> </li> <li> <p>\u5982\u4f55\u751f\u6210\u9ad8\u8d28\u91cf\u4e8c\u503c\u5316\u56fe\u7247\uff08\u5927\u6d25+\u5c40\u90e8\u81ea\u9002\u5e94\uff09 \u611f\u89c9\u548c23\u5e74\u76844\u5dee\u4e0d\u591a\uff0c\u518d\u52a0\u4e00\u4e2a\u6eda\u52a8\u7a97\u53e3\uff1f</p> </li> <li> <p>\u5f00\u8fd0\u7b97\u548c\u7269\u7406\u610f\u4e49 </p> </li> <li> <p>\u7ed9\u56fe\uff0c\u5199\u76f4\u65b9\u56fe\u5339\u914d\u8fc7\u7a0b </p> </li> <li> <p>\u7ed9trump\u5230abama\u7684morph\u56fe\uff0c\u95ee\u5982\u4f55morph \u6839\u636e\u53d8\u6362\u7684\u5feb\u6162\uff0c\u8bbe\u7f6e\u76f8\u5e94\u7684\u6b65\u957f\uff0c\u5c06\u56fea\u6bcf\u4e00\u70b9\u7684RGB\u9010\u6e10\u53d8\u6210\u56feb\u76f8\u540c\u4f4d\u7f6e\u50cf\u7d20\u7684RGB\u3002\u53ef\u4ee5\u9009\u62e9\u7b49\u6bd4\u6216\u7b49\u5dee\u7684\u65b9\u5f0f\uff0c\u5bf9\u4e8e\u7070\u5ea6\u56fe\u50cf\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u7b49\u6bd4\u6216\u7b49\u5dee\u7ea7\u6570\u5b9a\u4e49\u6b65\u957f\uff0c\u4f7f\u989c\u8272\u4ece\u539f\u56fe\u53d8\u5230\u76ee\u6807\u56fe\u3002\u5bf9\u4e8e\u5f69\u8272\u56fe\u50cf\uff0cRGB\u4e09\u8272\u540c\u65f6\u4ece\u539f\u56fe\u53d8\u5230\u76ee\u6807\u56fe\u50cf\u3002\u53ef\u4ee5\u5206\u522b\u53d8\u5316\uff0c\u4e5f\u53ef\u8003\u8651RGB\u7684\u76f8\u5bf9\u6bd4\u4f8b\u5173\u7cfb\u540c\u65f6\u53d8\u5316\u3002 </p> </li> <li> <p>\u7ed9\u4e866\u00d76\u7684\u77e9\u9635\uff0c\u75283\u00d73\u7684\u7a97\u53e3\u7b97\u4e2d\u503c\u4e0e\u62c9\u666e\u62c9\u65af\u6ee4\u6ce2\uff08\u8ba1\u7b97\u91cf\u5de8\u5927\uff09 \u7528\u5bf9\u5e94\u7a97\u53e3\u52a0\u6743\u6c42\u548c\uff0c\u8fb9\u754c\u7528\u88650\u5904\u7406\uff1f</p> </li> <li> <p>\u53cc\u8fb9\u6ee4\u6ce2\u7684\u57fa\u672c\u601d\u60f3\u4e0e\u5404\u4e2a\u9879\u7684\u89e3\u91ca \u57fa\u672c\u601d\u60f3\u91cd\u590d </p> </li> <li> <p>SIFT\u6b65\u9aa4\u4e0e\u5982\u4f55\u5b9e\u73b0\u65cb\u8f6c\u4e0d\u53d8\u6027\uff0cSUFT\u6b65\u9aa4 \u5b9e\u73b0\u65cb\u8f6c\u4e0d\u53d8\u6027\uff1a\u83b7\u53d6\u7279\u5f81\u70b9\u548c\u5bf9\u5e94\u5c3a\u5ea6\uff0c\u5206\u6210\\(4*4\\)\u7684\u7a97\u53e3\uff0c\u6bcf\u4e2a\u7a97\u53e3\u7edf\u8ba1\u50cf\u7d20\u68af\u5ea6\u5f62\u6210\\(4*4*8=128\\)\u7ef4\u5411\u91cf\uff0c\u5e76\u4e14\u53d6\u6700\u9ad8\u9891\u65b9\u5411\u4f5c\u4e3a\u4f18\u52bf\u65b9\u5411\uff0c\u5c06\u5176\u65cb\u8f6c\u81f3\u6807\u51c6\u7684\u7ed9\u5b9a\u65b9\u5411\u3002</p> </li> <li> <p>\u7ed9\u4f60PPT\u4e0a\u7684\u90a3\u4e24\u5f20\u56fe\uff0c\u95ee\u5982\u4f55\u62fc\u63a5\u56fe\u50cf \u68c0\u6d4b\u4e24\u5f20\u56fe\u50cf\u7684\u7279\u5f81\u70b9\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u70b9\u5bf9\uff0c\u7528\u8fd9\u4e9b\u70b9\u5bf9\u5bf9\u9f50\u56fe\u50cf \u5c3a\u5ea6\u2014\u2014\u653e\u5927\u7f29\u5c0f \u65b9\u5411\u2014\u2014\u76f4\u65b9\u56fe\u7edf\u8ba1\u3001\u65cb\u8f6c </p> </li> <li> <p>\u7ed9\u56fe\uff0c\u5199BP\u5168\u8fc7\u7a0b \u91cd\u590d</p> </li> </ol> <p>\u8fd9\u4e2a\u53ef\u80fd\u4f1a\u8003\uff1a   \u4ea4\u53c9\u71b5\uff08\u542b\u4e49\uff0c\u4ea4\u53c9\u71b5\u635f\u5931\uff09 \\(L=-log(P_c)\\) \u7528\u4f5c\u635f\u5931\u51fd\u6570\uff08Loss Function\uff09\uff0c\u7528\u4e8e\u8861\u91cf\u6a21\u578b\u9884\u6d4b\u6982\u7387\u5206\u5e03\u4e0e\u771f\u5b9e\u6807\u7b7e\u7684\u6982\u7387\u5206\u5e03\u4e4b\u95f4\u7684\u5dee\u5f02</p>"},{"location":"minisql%E5%88%86%E6%9E%90/","title":"Minisql\u5206\u6790","text":"<p>\u6ce8\uff1a\u6211\u5728minisql\u4e2d\u8d1f\u8d23\u7684\u90e8\u5206\u4e3apart4\u548cpart7\uff0c\u5728\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u5f88\u591a\u56f0\u96be\uff0c\u5176\u4e2d\u4e00\u90e8\u5206\u5c31\u662f\u7406\u89e3\u7ed9\u51fa\u7684\u6846\u67b6\u4ee3\u7801\u548c\u6210\u5458\u53d8\u91cf\u3002\u56e0\u6b64\u4e5f\u5c31\u6709\u4e86\u6211\u5728\u4e2a\u4eba\u8be6\u7ec6\u62a5\u544a\u4e2d\u7684\u4ee5\u4e0b\u90e8\u5206\uff08\u4e5f\u662f\u6211\u8ba4\u4e3a\u5e94\u8be5\u5b58\u5728\u4e8e\u6307\u5bfc\u6587\u6863\u7684\u5185\u5bb9\uff09\u3002 \u4e0b\u9762\u8fd9\u90e8\u5206\u662f\u6211\u62a5\u544a\u7684\u8282\u9009\uff0c\u4e0d\u6d89\u53ca\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\uff0c\u76ee\u7684\u5c31\u662f\u5e2e\u52a9\u5927\u5bb6\u66f4\u597d\u5730\u7406\u89e3\u5bf9\u5e94\u90e8\u5206\u662f\u8981\u505a\u4ec0\u4e48\u3002\u672a\u8fdd\u53cd\u8bda\u4fe1\u5b88\u5219\u3002</p>"},{"location":"minisql%E5%88%86%E6%9E%90/#2-part4-catalog-manager","title":"2 Part4 - Catalog Manager","text":""},{"location":"minisql%E5%88%86%E6%9E%90/#21","title":"2.1 \u6a21\u5757\u529f\u80fd\u6982\u8ff0","text":"<p>\u56fe1 Catalog Manager\u903b\u8f91\u793a\u610f\u56fe</p> <p>\u5982\u56fe\u6240\u793a\uff0c\u672c\u6a21\u5757\u4e3b\u8981\u7ba1\u7406\u548c\u7ef4\u62a4\u6570\u636e\u5e93\u7684\u6240\u6709\u6a21\u5f0f\u4fe1\u606f\uff0c\u4e3b\u8981\u662f\u7ba1\u7406\u4e86\u4e00\u4e2a\u76ee\u5f55\uff0c\u53ef\u4ee5\u7d22\u5f15\u5bf9\u5e94id\u7684\u8868\u683c\u548c\u7d22\u5f15\u5143\u6570\u636e\u7684\u6570\u636e\u9875\uff0c\u5e76\u4e14\u901a\u8fc7\u4e24\u8005\u7684\u5143\u6570\u636e\u53ef\u4ee5load\u76f8\u5173\u8868\u683c\u548c\u7d22\u5f15\u7684\u4fe1\u606f\uff0c\u652f\u6301\u8868\u683c\u548c\u7d22\u5f15\u76f8\u5173\u7684\u521b\u5efa\u3001\u8bbf\u95ee\u3001\u5220\u9664\u64cd\u4f5c\u3002</p>"},{"location":"minisql%E5%88%86%E6%9E%90/#23","title":"2.3 \u8868\u7684\u7d22\u5f15\u548c\u7ba1\u7406","text":"<p>\u5728\u8fd9\u4e2a\u90e8\u5206\u6211\u4eec\u4e3b\u8981\u9700\u8981\u5b9e\u73b0<code>CatalogManager</code>\u8fd9\u4e2a\u7c7b\uff0c\u5b9e\u73b0\u8fd9\u4e2a\u7c7b\u7684\u5173\u952e\u548c\u96be\u70b9\u5373\u81ea\u9876\u5411\u4e0b\u62c6\u89e3\u3001\u5f04\u6e05\u695a\u8fd9\u4e2a\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u53ca\u5176\u6570\u636e\u7c7b\u578b\uff0c\u624d\u80fd\u6839\u636e\u8fd9\u4e9b<code>Index</code>\u548c<code>Table</code>\u7684\u6570\u636e\u7ec4\u7ec7\u65b9\u5f0f\u5b8c\u6210\u5bf9\u5e94\u7684\u6210\u5458\u51fd\u6570\u3002</p>"},{"location":"minisql%E5%88%86%E6%9E%90/#231-catalogmanager","title":"2.3.1 <code>CatalogManager</code>\u6210\u5458\u53d8\u91cf\u8bf4\u660e","text":"<p>\u53bb\u9664\u4e86\u7528\u4e0d\u5230\u7684\u6210\u5458\u53d8\u91cf\u540e\uff0c\u6700\u9876\u5c42\u7684<code>CatalogManager</code>\u5185\u90e8\u6210\u5458\u53d8\u91cf\u5982\u4e0b\uff1a</p> <pre><code>private:\n  CatalogMeta *catalog_meta_;\n  std::atomic&lt;table_id_t&gt; next_table_id_;\n  std::atomic&lt;index_id_t&gt; next_index_id_;\n  // map for tables\n  std::unordered_map&lt;std::string, table_id_t&gt; table_names_;\n  std::unordered_map&lt;table_id_t, TableInfo *&gt; tables_;\n  // map for indexes: table_name-&gt;index_name-&gt;indexes\n  std::unordered_map&lt;std::string, std::unordered_map&lt;std::string, index_id_t&gt;&gt; index_names_;\n  std::unordered_map&lt;index_id_t, IndexInfo *&gt; indexes_;\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e2a\u7c7b\u4e0b\u9762\u7684\u6210\u5458\u53d8\u91cf\u53ef\u4ee5\u5206\u4e3a\u56db\u5927\u7c7b\uff1a</p> <ul> <li> <p>\u548c\u76ee\u5f55\u4fe1\u606f\u76f4\u63a5\u76f8\u5173\u7684\u3001\u4f1a\u88ab\u5e8f\u5217\u5316\u5230\u6570\u636e\u5e93\u6587\u4ef6\u7684\u7b2c<code>CATALOG_META_PAGE_ID</code>\u53f7\u6570\u636e\u9875\u4e2d\u7684\u76ee\u5f55\u5143\u4fe1\u606f\u6307\u9488<code>*catalog_meta_</code>\uff0c\u6570\u636e\u7c7b\u578b\u4e3a<code>CatalogMeta *</code>\uff1b</p> </li> <li> <p>\u5728\u8fd9\u91cc\u6211\u4eec\u5e76\u4e0d\u6e05\u695a\u76ee\u5f55\u5143\u4fe1\u606f\u7684\u5177\u4f53\u6784\u6210\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u67e5\u770b<code>CatalogMeta</code>\u8fd9\u4e2a\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff1a</p> <pre><code>private:\n  static constexpr uint32_t CATALOG_METADATA_MAGIC_NUM = 89849;\n  std::map&lt;table_id_t, page_id_t&gt; table_meta_pages_;\n  std::map&lt;index_id_t, page_id_t&gt; index_meta_pages_;\n</code></pre> <p>\u5728\u8fd9\u91cc\uff0c\u7b2c\u4e00\u4e2a<code>MAGIC_NUM</code>\u53d8\u91cf\u662f\u8d77\u5230\u9a8c\u8bc1\u5e8f\u5217\u5316\u6b63\u786e\u6027\u7684\u9b54\u6570\uff0c\u4e0d\u8d77\u5230\u5b58\u50a8\u5b9e\u9645\u4fe1\u606f\u7684\u4f5c\u7528\uff1b\u76ee\u5f55\u5143\u4fe1\u606f\u5185\u7684\u6709\u6548\u4fe1\u606f\u5373\u4e24\u4e2a<code>map</code>\u5bb9\u5668\uff0c\u5206\u522b\u5b58\u50a8\u4e86\u6570\u636e\u5e93\u4e2d<code>table</code>\u548c<code>index</code>\u7684<code>id</code>\u548c\u6570\u636e\u9875\u4f4d\u7f6e\u7684\u5bf9\u5e94\u5173\u7cfb\u3002</p> </li> <li> <p>\u7528\u4e8e\u8bb0\u5f55\u4e0b\u4e00\u4e2a<code>table</code>\u548c<code>index</code>\u7684<code>id</code>\u7684<code>next_table_id_</code>\u548c<code>next_index_id_</code>\uff0c\u6570\u636e\u7c7b\u578b\u4e3a<code>std::atomic&lt;table_id_t&gt;</code>\uff0c\u6839\u636e<code>config.h</code>\u548c<code>atomic</code>\u5185\u7684\u4fe1\u606f<code>struct atomic&lt;unsigned int&gt;</code>\u548c<code>using index_id_t = uint32_t; using table_id_t = uint32_t;</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u5224\u65ad\u5176\u6570\u636e\u7c7b\u578b\u4e3a32\u4f4d\u65e0\u7b26\u53f7\u6574\u6570\uff1b</p> </li> <li> <p><code>table</code>\u7684\u5177\u4f53\u4fe1\u606f\uff0c\u8fd9\u4e9b\u5185\u5bb9\u4e0d\u4f1a\u88ab\u5199\u5165\u6570\u636e\u9875\uff0c\u9700\u8981\u5728\u6784\u9020\u51fd\u6570\u4e2d\u6839\u636e\u76ee\u5f55\u5143\u4fe1\u606f\u7684\u4e24\u4e2a<code>map</code>\u5bb9\u5668\u53bb<code>Load</code>\u51fa\u6765\u3002\u800c\u5177\u4f53\u4fe1\u606f\u4e3b\u8981\u5305\u62ec\u4e24\u4e2a<code>unordered_map</code>\u5bb9\u5668\uff0c\u5176\u4e2d\u4e00\u4e2a\u8bb0\u5f55\u4e86\u8868\u540d\u548c<code>id</code>\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u53e6\u4e00\u4e2a\u5219\u8bb0\u5f55\u4e86<code>id</code>\u548c<code>TableInfo *</code>\u7684\u5bf9\u5e94\u5173\u7cfb\uff1b</p> </li> <li> <p>\u5728\u8fd9\u91cc\u6211\u4eec\u5e76\u4e0d\u6e05\u695a<code>TableInfo</code>\u91cc\u9762\u7684\u6570\u636e\u5185\u5bb9\u53ca\u7ec4\u7ec7\u5f62\u5f0f\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u8fc7\u67e5\u770b<code>table.h</code>\u83b7\u53d6\u66f4\u591a\u7ec6\u8282\uff1a</p> <pre><code>private:\n  TableMetadata *table_meta_;\n  TableHeap *table_heap_;\n</code></pre> <p>\u5728\u8fd9\u91cc\u5305\u542b\u4e86\u4e24\u4e2a\u6307\u9488\uff0c\u6211\u4eec\u53bb\u5bf9\u5e94\u7684\u6587\u4ef6\u5bfb\u627e\u8be6\u7ec6\u4fe1\u606f\uff1a</p> <ul> <li>\u8868\u7684\u5143\u4fe1\u606f<code>TableMetadata</code>\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a</li> </ul> <pre><code>private:\n  static constexpr uint32_t TABLE_METADATA_MAGIC_NUM = 344528;\n  table_id_t table_id_;\n  std::string table_name_;\n  page_id_t root_page_id_;\n  Schema *schema_;\n</code></pre> <p>\u9664\u53bb\u9b54\u6570\u4e4b\u5916\uff0c\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <ul> <li> <p>\u8868\u7684<code>id</code></p> </li> <li> <p>\u8868\u540d\u79f0</p> </li> <li> <p>\u8868\u5bf9\u5e94\u7684\u6839\u9875<code>id</code> - \u56e0\u4e3a\u4e00\u4e2a<code>table</code>\u5f88\u53ef\u80fd\u5bf9\u5e94\u4e0d\u6b62\u4e00\u4e2a<code>page</code>\uff0c\u6240\u4ee5\u6211\u4eec\u7ed9\u6bcf\u4e2a<code>table</code>\u914d\u7f6e\u4e86\u4e00\u4e2a<code>tablemeta</code>\u7684\u6839\u9875<code>id</code>\uff0c\u8fd9\u6837\u6240\u6709\u8be5<code>table</code>\u76f8\u5173\u7684<code>page</code>\u90fd\u5f62\u6210\u4e86\u53cc\u5411\u94fe\u8868\u7684\u5173\u7cfb\u3002\u56e0\u6b64\u6211\u4eec\u901a\u8fc7\u5728\u76ee\u5f55\u5143\u4fe1\u606f\u4e2d\u5b58\u50a8\u4e00\u4e2a<code>page</code>\u7684<code>id</code>\uff0c\u5c31\u80fd\u627e\u5230\u8fd9\u4e2a<code>table</code>\u5bf9\u5e94\u7684\u6240\u6709\u7684<code>page</code>\u3002</p> </li> <li> <p>\u8868\u5bf9\u5e94\u7684<code>Schema</code>\uff08\u4ecd\u7136\u4e0d\u6e05\u6670\uff0c\u6211\u4eec\u7ee7\u7eed\u62c6\u89e3\uff09\uff1a</p> <pre><code>private:\n  static constexpr uint32_t SCHEMA_MAGIC_NUM = 200715;\n  std::vector&lt;Column *&gt; columns_;\n  bool is_manage_ = false; /** if false, don't need to delete pointer to column */\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230<code>Schema</code>\u8fd9\u4e2a\u7c7b\u4e3b\u8981\u5185\u5bb9\u662f\u4e00\u4e2a\u5b58\u50a8\u4e86<code>Column</code>\u6307\u9488\u7684<code>Vector</code>\u5bb9\u5668\uff0c\u90a3\u4e48<code>Column</code>\u91cc\u9762\u53c8\u5305\u62ec\u4e86\u4ec0\u4e48\u5462\uff1f</p> <pre><code>private:\n  static constexpr uint32_t COLUMN_MAGIC_NUM = 210928;\n  std::string name_;\n  TypeId type_;\n  uint32_t len_{0};  // for char type this is the maximum byte length of the string data, otherwise is the fixed size\n  uint32_t table_ind_{0};  // column position in table\n  bool nullable_{false};   // whether the column can be null\n  bool unique_{false};     // whether the column is unique\n</code></pre> <p>\u770b\u5230\u8fd9\u91cc\u5c31\u6bd4\u8f83\u6e05\u6670\u4e86\uff0c\u6211\u4eec\u53d1\u73b0<code>Column</code>\u7c7b\u5305\u62ec\u7684\u5c31\u662f\u6211\u4eec\u719f\u6089\u7684\u8868\u683c\u7684\u6bcf\u4e00\u4e2a\u5c5e\u6027\u7684\u540d\u79f0\u3001\u7c7b\u578b\u548c\u7ea6\u675f\u6761\u4ef6\u3002</p> </li> <li> <p>\u53bb\u9664\u7528\u4e0d\u4e0a\u7684\u6210\u5458\u53d8\u91cf\uff0c<code>TableHeap</code>\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> </li> </ul> <pre><code>private:\n  BufferPoolManager *buffer_pool_manager_;\n  page_id_t first_page_id_;\n  Schema *schema_;\n  TableSpaceManager space_manager_;\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u5e76\u6ca1\u6709<code>table</code>\u5bf9\u5e94\u7684<code>id</code>\uff0c\u4e3b\u8981\u8fd8\u662f\u4e00\u4e9b\u7528\u4e8e\u5185\u5b58\u6c60\u64cd\u4f5c\u7684\u76f8\u5173\u53d8\u91cf\uff0c\u6545\u6211\u4eec\u5c06\u5176\u7406\u89e3\u6210\u5c01\u88c5\u597d\u7684\u5b9e\u73b0\u8868\u7ea7\u522b\u7684\u64cd\u4f5c\u548c\u7ba1\u7406\u7684\u7c7b\uff0c\u5177\u4f53\u7ec6\u8282\u4e0d\u5728\u8fd9\u4e2aPart\u7814\u7a76\u3002</p> </li> <li> <p><code>index</code>\u7684\u5177\u4f53\u4fe1\u606f\uff0c\u8fd9\u4e9b\u5185\u5bb9\u548c<code>table</code>\u7684\u5177\u4f53\u4fe1\u606f\u4e00\u6837\uff0c\u4e0d\u4f1a\u88ab\u5199\u5165\u6570\u636e\u9875\uff0c\u9700\u8981\u5728\u6784\u9020\u51fd\u6570\u4e2d\u6839\u636e\u76ee\u5f55\u5143\u4fe1\u606f\u7684\u4e24\u4e2a<code>map</code>\u5bb9\u5668\u53bb<code>Load</code>\u51fa\u6765\u3002\u800c\u5177\u4f53\u7684\u4fe1\u606f\u4e5f\u4e3b\u8981\u5305\u62ec\u4e86\u4e24\u4e2a<code>unordered_map</code>\u5bb9\u5668\uff1a</p> </li> <li> <p><code>std::unordered_map&lt;std::string, std::unordered_map&lt;std::string, index_id_t&gt;&gt; index_names_;</code> - \u6700\u5916\u5c42\u7684\u5bb9\u5668\u8bb0\u5f55\u4e86\u8868\u540d\u548c\u5b83\u5bf9\u5e94\u7684\u6240\u6709\u5728\u8fd9\u4e2a\u8868\u4e0a\u7684\u7d22\u5f15\uff0c\u800c\u6240\u6709\u7d22\u5f15\u4e5f\u4f7f\u7528\u4e00\u4e2a<code>unordered_map</code>\u5bb9\u5668\u5b58\u50a8\uff0c\u6bcf\u4e00\u4e2aelement\u5206\u522b\u8bb0\u5f55\u4e86\u6bcf\u4e2a\u7d22\u5f15\u7684\u540d\u79f0\u548c\u5bf9\u5e94\u7684<code>id</code>\uff1b</p> </li> <li> <p><code>std::unordered_map&lt;index_id_t, IndexInfo *&gt; indexes_;</code> - \u8bb0\u5f55\u4e86\u7d22\u5f15\u7684<code>id</code>\u548c\u7d22\u5f15\u4fe1\u606f\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u540c\u6837\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u5e76\u4e0d\u6e05\u695a<code>IndexInfo</code>\u91cc\u9762\u7684\u6570\u636e\u5185\u5bb9\u53ca\u7ec4\u7ec7\u5f62\u5f0f\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u8fc7\u67e5\u770b<code>indexes.h</code>\u83b7\u53d6\u66f4\u591a\u7ec6\u8282\uff1a</p> <pre><code>private:\n  IndexMetadata *meta_data_;\n  Index *index_;\n  IndexSchema *key_schema_;\n</code></pre> <ul> <li> <p>\u8fd9\u4e2a\u7c7b\u5305\u542b\u4e86\u8fd9\u4e2a\u7d22\u5f15\u5b9a\u4e49\u65f6\u7684\u5143\u4fe1\u606f <code>meta_data_</code>\uff0c\u8be5\u7d22\u5f15\u7684\u6a21\u5f0f\u4fe1\u606f <code>key_schema_</code> \u548c\u7d22\u5f15\u64cd\u4f5c\u5bf9\u8c61 <code>index_</code>\u3002\u5176\u4e2d\u9664\u4e86 <code>meta_data_</code> \u4ee5\u5916\uff0c\u5176\u4ed6\u4e24\u4e2a\u4fe1\u606f\u90fd\u662f\u901a\u8fc7\u53cd\u5e8f\u5217\u5316\u540e\u7684\u5143\u6570\u636e\u751f\u6210\u7684\u3002</p> </li> <li> <p>\u7d22\u5f15\u5143\u6570\u636e\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> </li> </ul> <pre><code>private:\n  static constexpr uint32_t INDEX_METADATA_MAGIC_NUM = 344528;\n  index_id_t index_id_;\n  std::string index_name_;\n  table_id_t table_id_;\n  std::vector&lt;uint32_t&gt; key_map_; /** The mapping of index key to tuple key */\n</code></pre> <p>\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u7d22\u5f15\u7684\u5143\u6570\u636e\u8bb0\u5f55\u4e86\u8fd9\u4e2a\u7d22\u5f15\u7684\u540d\u5b57\u3001<code>id</code>\u548c\u6240\u5728\u7684\u8868\u540d\uff0c\u4ee5\u53ca\u4ece\u7d22\u5f15\u5230\u5143\u7ec4\u7684\u6620\u5c04<code>key_map_</code>\uff08\u7528\u4e8e\u6d45\u62f7\u8d1d\u51fd\u6570\uff09\uff1b</p> <ul> <li><code>Index</code>\u7c7b\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</li> </ul> <pre><code>protected:\n  index_id_t index_id_;\n  IndexSchema *key_schema_;\n</code></pre> <p>\u901a\u8fc7<code>using IndexSchema = Schema;</code>\u6211\u4eec\u53ef\u4ee5\u77e5\u9053<code>*key_schema</code>\u6307\u5411\u7684\u5185\u5bb9\u4e5f\u4e3b\u8981\u662f\u4e00\u4e2a\u5305\u542b\u4e86\u6bcf\u4e00\u4e2a\u5c5e\u6027\u7684\u540d\u79f0\u3001\u7c7b\u578b\u548c\u7ea6\u675f\u6761\u4ef6\u7684<code>Vector</code>\u5bb9\u5668\uff1b</p> <ul> <li>\u73b0\u5728\u6211\u4eec\u6839\u636e\u8fd9\u4e9b\u6210\u5458\u53d8\u91cf\u5b8c\u6210<code>IndexInfo</code>\u7684\u521d\u59cb\u5316\u51fd\u6570\uff1a//\u7565</li> </ul> </li> </ul>"},{"location":"minisql%E5%88%86%E6%9E%90/#3-part7-lock-manager","title":"3    Part7 - Lock Manager","text":""},{"location":"minisql%E5%88%86%E6%9E%90/#31","title":"3.1 \u6a21\u5757\u529f\u80fd\u6982\u8ff0","text":"<p>\u6211\u4eec\u5728\u8fd9\u4e2a\u6a21\u5757\u4e3b\u8981\u9700\u8981\u5b9e\u73b0<code>LockManager</code>\u8fd9\u4e2a\u7c7b\uff0c\u529f\u80fd\u5305\u62ec\uff1a</p> <ul> <li>\u8ffd\u8e2a\u53d1\u653e\u7ed9\u4e8b\u52a1\u7684\u9501</li> <li>\u4f9d\u636e\u9694\u79bb\u7ea7\u522b\u9002\u5f53\u5730\u6388\u4e88\u548c\u91ca\u653e<code>S</code>\u548c<code>X</code>\u9501</li> <li>\u5b8c\u6210\u6b7b\u9501\u68c0\u6d4b\u548c\u76f8\u5173\u7684\u5904\u7406</li> </ul> <p>\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u7684\u51fd\u6570\u4e3b\u8981\u5206\u4e3a\u4e24\u5757\uff1a</p> <ol> <li>\u9501\u7ba1\u7406\u5668\u4e2d\u6388\u4e88\u4e8b\u52a1\u5171\u4eab\u9501\u3001\u72ec\u5360\u9501\u548c\u5347\u7ea7\u9501\u7684\u529f\u80fd\u53ca\u76f8\u5173\u51fd\u6570</li> <li>\u7ed8\u5236\u7b49\u5f85\u56fe\u53ca\u6b7b\u9501\u68c0\u6d4b</li> </ol>"},{"location":"minisql%E5%88%86%E6%9E%90/#32","title":"3.2 \u4e8b\u52a1\u7ba1\u7406\u5668","text":"<p>\u7ed9\u51fa\u7684<code>TxnManager</code>\u6a21\u5757\u7684\u529f\u80fd\u6709\uff1a</p> <ol> <li>\u8fb9\u754c\u63a7\u5236\uff1a\u5f00\u59cb\u65f6\u5206\u914d\u6240\u9700\u8d44\u6e90\uff0c\u6210\u529f\u5b8c\u6210\u65f6\u6267\u884c\u63d0\u4ea4\u64cd\u4f5c\u5e76\u6301\u4e45\u5316\uff0c\u9047\u5230\u9519\u8bef\u6216\u9700\u8981\u64a4\u9500\u65f6\u56de\u6eda\u5e76\u64a4\u9500\u66f4\u6539</li> <li>\u5e76\u53d1\u63a7\u5236\uff1a\u786e\u4fdd\u4e8b\u52a1\u4e0d\u4f1a\u4e92\u76f8\u5e72\u6270</li> <li>\u6545\u969c\u5904\u7406\uff1a\u68c0\u6d4b\u5230\u9519\u8bef\u65f6\uff0c\u56de\u6eda\u64a4\u9500\u6216\u8005\u5c1d\u8bd5\u6062\u590d</li> </ol> <p>\u540c\u65f6<code>Txn</code>\u7c7b\u8d1f\u8d23\u901a\u8fc7\u53c2\u6570\u63a7\u5236\u4e8b\u52a1\u7684\u9694\u79bb\u7ea7\u522b\uff0c\u7531<code>LockManager</code>\u8d1f\u8d23\u68c0\u67e5\uff0c\u5728\u9047\u5230\u5931\u8d25\u7684\u9501\u64cd\u4f5c\u65f6\u5c06\u4e8b\u52a1\u4e2d\u6b62\u5e76\u629b\u51fa\u5f02\u5e38\uff0c\u7531<code>TxnManager</code>\u6355\u83b7\u5f02\u5e38\u5e76\u56de\u6eda\u3002</p> <p>\u5728\u8fd9\u4e2a\u5de5\u7a0b\u4e2d\uff0c\u9694\u79bb\u7ea7\u522b\u6709\uff1a</p> <ol> <li><code>kReadUncommitted</code> (\u8bfb\u672a\u63d0\u4ea4)</li> <li>\u5728\u8fd9\u4e2a\u7ea7\u522b\u4e0b\uff0c\u4e8b\u52a1\u53ef\u4ee5\u8bfb\u53d6\u5176\u4ed6\u672a\u63d0\u4ea4\u4e8b\u52a1\u7684\u66f4\u6539\u3002\u8fd9\u662f\u6700\u4f4e\u7684\u9694\u79bb\u7ea7\u522b\uff0c\u5141\u8bb8\u6700\u5927\u7a0b\u5ea6\u7684\u5e76\u53d1\uff0c\u4f46\u540c\u65f6\u4e5f\u5bb9\u6613\u51fa\u73b0\u201c\u810f\u8bfb\u201d\uff08dirty reads\uff09\uff0c\u610f\u5473\u7740\u4e00\u4e2a\u4e8b\u52a1\u53ef\u80fd\u8bfb\u53d6\u5230\u53e6\u4e00\u4e2a\u4e8b\u52a1\u672a\u63d0\u4ea4\u7684\u66f4\u6539\uff0c\u5982\u679c\u90a3\u4e2a\u4e8b\u52a1\u56de\u6eda\uff0c\u8bfb\u53d6\u7684\u6570\u636e\u5c31\u662f\u65e0\u6548\u7684\u3002</li> <li><code>kReadCommitted</code> (\u8bfb\u5df2\u63d0\u4ea4)</li> <li>\u6b64\u9694\u79bb\u7ea7\u522b\u4fdd\u8bc1\u4e00\u4e2a\u4e8b\u52a1\u53ea\u80fd\u8bfb\u53d6\u5df2\u7ecf\u63d0\u4ea4\u7684\u66f4\u6539\u3002\u8fd9\u53ef\u4ee5\u9632\u6b62\u810f\u8bfb\uff0c\u4f46\u4e0d\u4fdd\u8bc1\u5728\u540c\u4e00\u4e8b\u52a1\u4e2d\u591a\u6b21\u8bfb\u53d6\u540c\u4e00\u6570\u636e\u65f6\u6570\u636e\u4fdd\u6301\u4e0d\u53d8\uff08\u5373\u4e0d\u53ef\u91cd\u590d\u8bfb\u73b0\u8c61\u53ef\u80fd\u53d1\u751f\uff09\u3002\u5927\u591a\u6570\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b\u662f\u8bfb\u5df2\u63d0\u4ea4\u3002</li> <li><code>kRepeatedRead</code> (\u53ef\u91cd\u590d\u8bfb)</li> <li>\u53ef\u91cd\u590d\u8bfb\u4fdd\u8bc1\u5728\u4e00\u4e2a\u4e8b\u52a1\u5185\u591a\u6b21\u8bfb\u53d6\u540c\u4e00\u8bb0\u5f55\u7684\u7ed3\u679c\u662f\u4e00\u81f4\u7684\uff0c\u5373\u5728\u8fd9\u4e2a\u4e8b\u52a1\u6267\u884c\u671f\u95f4\uff0c\u9690\u85cf\u4e86\u5176\u4ed6\u4e8b\u52a1\u6240\u505a\u7684\u4fee\u6539\u3002\u8fd9\u53ef\u4ee5\u9632\u6b62\u4e0d\u53ef\u91cd\u590d\u8bfb\uff0c\u4f46\u4ecd\u53ef\u80fd\u9762\u4e34\u5176\u4ed6\u95ee\u9898\uff0c\u6bd4\u5982\u5e7b\u8bfb\uff08\u5176\u4ed6\u4e8b\u52a1\u63d2\u5165\u6216\u5220\u9664\u4e86\u7b26\u5408\u67e5\u8be2\u6761\u4ef6\u7684\u8bb0\u5f55\uff0c\u5bfc\u81f4\u4e24\u6b21\u6267\u884c\u540c\u4e00\u4e2a\u67e5\u8be2\u53ef\u80fd\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\uff09\u3002\u8fd9\u4e2a\u7ea7\u522b\u901a\u5e38\u63d0\u4f9b\u8f83\u9ad8\u7684\u6570\u636e\u4e00\u81f4\u6027\u4fdd\u969c\u3002</li> </ol>"},{"location":"minisql%E5%88%86%E6%9E%90/#33","title":"3.3 \u9501\u7ba1\u7406\u5668","text":""},{"location":"minisql%E5%88%86%E6%9E%90/#331-lockmanager","title":"3.3.1 <code>LockManager</code>\u7c7b\u7ed9\u51fa\u4ee3\u7801\u5206\u6790","text":"<p>\u548c\u7b2c\u56db\u90e8\u5206\u4e00\u6837\uff0c\u6211\u4eec\u8fd8\u662f\u5148\u5bf9\u6211\u4eec\u8981\u5b9e\u73b0\u7684\u8fd9\u4e2a<code>LockManager</code>\u7c7b\u5185\u7684\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\u8fdb\u884c\u5206\u6790\u62c6\u89e3\u3002</p> <p>\u9996\u5148\u7c7b\u5185\u5305\u62ec\u4e86<code>LockMode</code>\u8fd9\u4e00\u679a\u4e3e\u7c7b\uff0c\u679a\u4e3e\u4e86\u4e09\u79cd\u8bb0\u5f55\u4e0a\u9762\u9501\u7684\u72b6\u6001\uff0c\u5206\u522b\u662f\uff1a</p> <ul> <li><code>kNone</code> - \u8868\u793a\u8fd9\u4e2a\u8bb0\u5f55\u4e0a\u76ee\u524d\u6ca1\u6709\u4efb\u4f55\u9501</li> <li><code>kShared</code> - \u8868\u793a\u8fd9\u4e2a\u8bb0\u5f55\u4e0a\u6709\u5171\u4eab\u9501</li> <li><code>kExclusive</code> - \u8868\u793a\u8fd9\u4e2a\u8bb0\u5f55\u4e0a\u6709\u72ec\u5360\u9501</li> </ul> <p>\u800c\u8fd9\u4e2a\u7c7b\u5185\u8fd8\u6709\u4e24\u4e2a\u5185\u90e8\u7c7b\uff1a</p> <ol> <li><code>LockRequest</code></li> </ol> <p>\u6b64\u7c7b\u4ee3\u8868\u7531\u4e8b\u52a1\uff08<code>txn_id</code>\uff09\u53d1\u51fa\u7684\u9501\u8bf7\u6c42\u3002\u5b83\u5305\u542b\u4ee5\u4e0b\u6210\u5458\uff1a</p> <ul> <li><code>txn_id_</code>\uff1a\u53d1\u51fa\u8bf7\u6c42\u7684\u4e8b\u52a1\u7684\u6807\u8bc6\u7b26</li> <li><code>lock_mode_</code>\uff1a\u8bf7\u6c42\u7684\u9501\u7c7b\u578b\uff08\u4f8b\u5982\uff0c\u5171\u4eab\u6216\u6392\u4ed6\uff09</li> <li> <p><code>granted_</code>\uff1a\u5df2\u6388\u4e88\u4e8b\u52a1\u7684\u9501\u7c7b\u578b</p> </li> <li> <p><code>LockRequestQueue</code></p> </li> </ul> <p>\u8fd9\u4e2a\u7c7b\u7528\u4e8e\u5904\u7406\u9501\u8bf7\u6c42\u7684\u961f\u5217\uff0c\u5305\u542b\u4e86\u8fd9\u4e00\u961f\u5217\u7684\u76f8\u5173\u4fe1\u606f\u548c\u5904\u7406\u7684\u76f8\u5173\u65b9\u6cd5\u3002</p> <p>\u5305\u542b\u4ee5\u4e0b\u6210\u5458\u53d8\u91cf\uff1a</p> <ul> <li><code>req_list_</code>\uff1a\u7c7b\u578b\u4e3a\u5305\u542b<code>LockRequest</code>\u5143\u7d20\u7684<code>list</code>\u5bb9\u5668\uff0c\u7528\u4e8e\u8bb0\u5f55\u6240\u6709\u7684\u9501\u8bf7\u6c42</li> <li><code>req_list_iter_map_</code>\uff1a\u7c7b\u578b\u4e3a<code>unordered_map&lt;txn_id_t, ReqListType::iterator&gt;</code>\uff0c\u6784\u9020\u4e86\u5bf9\u5e94<code>id</code>\u7684\u4e8b\u52a1\u548c\u9501\u8bf7\u6c42\u5217\u8868\u8fed\u4ee3\u5668\u7684\u6620\u5c04\uff0c\u7528\u4e8e\u5feb\u901f\u7d22\u5f15 <code>req_list_</code> \u5217\u8868\u4e2d\u6bcf\u4e2a\u4e8b\u52a1ID\u5bf9\u5e94\u7684\u9501\u8bf7\u6c42</li> <li><code>cv_</code>\uff1a\u7c7b\u578b\u4e3a<code>condition_variable</code>\uff0c\u7528\u4e8e\u7ba1\u7406\u56e0\u4e3a\u9501\u7ade\u4e89\u800c\u88ab\u963b\u585e\u7684\u4e8b\u52a1\uff0c\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a</li> <li>\u7b49\u5f85\uff08Waiting\uff09\uff1a\u4e00\u4e2a\u4e8b\u52a1\u7ebf\u7a0b\u5728\u4e0d\u80fd\u83b7\u53d6\u6240\u9700\u7684\u9501\u65f6\uff0c\u4f1a\u8c03\u7528 <code>cv_.wait(lock, predicate)</code> \u8fdb\u5165\u7b49\u5f85\u72b6\u6001\u3002\u8fd9\u91cc <code>lock</code> \u662f\u4e00\u4e2a\u4e92\u65a5\u9501\uff08\u901a\u5e38\u662f\u4e0e\u6761\u4ef6\u53d8\u91cf\u914d\u5408\u4f7f\u7528\u7684\uff09\uff0c<code>predicate</code> \u662f\u4e00\u4e2a\u8fd4\u56de\u5e03\u5c14\u503c\u7684\u51fd\u6570\u6216\u53ef\u8c03\u7528\u5bf9\u8c61\uff0c\u8868\u793a\u7b49\u5f85\u6301\u7eed\u7684\u6761\u4ef6\u3002\u8be5\u7ebf\u7a0b\u4f1a\u5728 <code>predicate</code> \u4e3a <code>false</code> \u65f6\u963b\u585e\uff0c\u76f4\u5230\u5176\u4ed6\u7ebf\u7a0b\u5728\u76f8\u540c\u7684\u6761\u4ef6\u53d8\u91cf\u4e0a\u8c03\u7528 <code>notify_one()</code> \u6216 <code>notify_all()</code>\u3002</li> <li>\u901a\u77e5\uff08Notifying\uff09\uff1a\u5f53\u9501\u7684\u72b6\u6001\u53d8\u66f4\u5141\u8bb8\u88ab\u963b\u585e\u7684\u4e8b\u52a1\u7ee7\u7eed\u6267\u884c\u65f6\uff0c\u53ef\u4ee5\u8c03\u7528 <code>cv_.notify_one()</code> \u6216 <code>cv_.notify_all()</code> \u6765\u5524\u9192\u4e00\u4e2a\u6216\u6240\u6709\u7b49\u5f85\u4e2d\u7684\u7ebf\u7a0b\u3002\u88ab\u5524\u9192\u7684\u7ebf\u7a0b\u4f1a\u91cd\u65b0\u8bc4\u4f30 <code>predicate</code>\uff0c\u5982\u679c\u7ed3\u679c\u4e3a <code>true</code>\uff0c\u5219\u7ee7\u7eed\u6267\u884c\u3002</li> <li><code>is_writing_</code>\uff1a\u6307\u793a\u5f53\u524d\u662f\u5426\u6301\u6709\u6392\u4ed6\u6027\u5199\u9501</li> <li><code>is_upgrading_</code>\uff1a\u6307\u793a\u662f\u5426\u6b63\u5728\u8fdb\u884c\u9501\u5347\u7ea7</li> <li><code>sharing_cnt_</code>\uff1a\u6301\u6709\u5171\u4eab\u9501\u7684\u4e8b\u52a1\u6570\u91cf\u7684\u6574\u6570\u8ba1\u6570</li> </ul> <p>\u5305\u542b\u7684\u5904\u7406\u9501\u8bf7\u6c42\u961f\u5217\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a</p> <ul> <li><code>EmplaceLockRequest()</code>\uff1a\u5c06\u65b0\u7684\u9501\u8bf7\u6c42\u6dfb\u52a0\u5230\u961f\u5217\u524d\u7aef\uff0c\u5e76\u5728map\u4e2d\u5b58\u50a8\u5176\u8fed\u4ee3\u5668</li> <li><code>EraseLockRequest()</code>\uff1a\u6839\u636e<code>txn_id</code>\u4ece\u961f\u5217\u548cmap\u4e2d\u79fb\u9664\u9501\u8bf7\u6c42\u3002\u5982\u679c\u6210\u529f\u8fd4\u56de<code>true</code>\uff0c\u5426\u5219\u8fd4\u56de<code>false</code></li> <li><code>GetLockRequestIter()</code>\uff1a\u6839\u636e<code>txn_id</code>\u68c0\u7d22\u961f\u5217\u4e2d\u7279\u5b9a\u9501\u8bf7\u6c42\u7684\u8fed\u4ee3\u5668</li> </ul> <p>\u800c\u9664\u53bb\u4e0a\u8ff0\u5185\u90e8\u7c7b\uff0c<code>LockManager</code>\u8fd9\u4e00\u6574\u4e2a\u7c7b\u8fd8\u5305\u542b\u9501\u7ba1\u7406\u5668\u76f8\u5173\u7684\u4ee5\u4e0b\u6210\u5458\u53d8\u91cf\uff1a</p> <ul> <li> <p><code>lock_table_</code>\uff1a\u662f\u6bcf\u4e00\u6761\u8bb0\u5f55<code>RowId</code>\u548c\u5728\u8fd9\u6761\u8bb0\u5f55\u4e0a\u9762\u7684\u9501\u8bf7\u6c42\u961f\u5217<code>LockRequestQueue</code>\u7684\u6620\u5c04\uff0c\u8bb0\u5f55\u4e86\u6570\u636e\u5e93\u6bcf\u4e00\u6761\u8bb0\u5f55\u4e0a\u5bf9\u5e94\u7684\u9501\u8bf7\u6c42\u961f\u5217</p> </li> <li> <p><code>latch_</code>\uff1a\u6570\u636e\u7c7b\u578b\u4e3a<code>mutex</code>\uff0c\u7528\u4e8e\u63d0\u4f9b\u4e92\u65a5\u9501\u7684\u57fa\u672c\u529f\u80fd\uff0c\u4fdd\u8bc1\u7ebf\u7a0b\u4e0d\u51b2\u7a81\u3002\u5305\u542b\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> </li> <li> <p>\u9501\u5b9a\uff08Lock\uff09\uff1a\u8c03\u7528 <code>lock()</code> \u65b9\u6cd5\u53ef\u4ee5\u9501\u5b9a\u4e92\u65a5\u9501\u3002\u5982\u679c\u9501\u5df2\u88ab\u5176\u4ed6\u7ebf\u7a0b\u9501\u5b9a\uff0c\u5219\u5f53\u524d\u7ebf\u7a0b\u5c06\u88ab\u963b\u585e\uff0c\u76f4\u5230\u8be5\u9501\u88ab\u91ca\u653e</p> </li> <li>\u5c1d\u8bd5\u9501\u5b9a\uff08Try Lock\uff09\uff1a\u8c03\u7528 <code>try_lock()</code> \u65b9\u6cd5\u5c1d\u8bd5\u9501\u5b9a\u4e92\u65a5\u9501\u3002\u5982\u679c\u9501\u5728\u8c03\u7528\u65f6\u53ef\u7528\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u9501\u5b9a\u5b83\u5e76\u8fd4\u56de <code>true</code>\uff1b\u5982\u679c\u9501\u5df2\u88ab\u5176\u4ed6\u7ebf\u7a0b\u6301\u6709\uff0c\u5219\u4e0d\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\uff0c\u76f4\u63a5\u8fd4\u56de <code>false</code></li> <li>\u89e3\u9501\uff08Unlock\uff09\uff1a\u8c03\u7528 <code>unlock()</code> \u65b9\u6cd5\u53ef\u4ee5\u89e3\u9501\u4e92\u65a5\u9501\uff0c\u91ca\u653e\u5bf9\u8d44\u6e90\u7684\u72ec\u5360\u6743\uff0c\u4f7f\u5176\u4ed6\u7ebf\u7a0b\u80fd\u591f\u83b7\u53d6\u9501</li> </ul> <pre><code>void someFunction() {\n    // \u4f7f\u7528 unique_lock \u5bf9 latch_ \u52a0\u9501\n    std::unique_lock&lt;std::mutex&gt; lock(latch_);\n    // \u5b89\u5168\u5730\u4fee\u6539 lock_table_\n    lock_table_[someKey] = someValue;\n    // lock \u5728\u8fd9\u4e2a block \u7ed3\u675f\u65f6\u81ea\u52a8\u91ca\u653e\n}\n</code></pre> <p>\u7531\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5728\u9501\u7ba1\u7406\u7684\u6210\u5458\u51fd\u6570\u6700\u5f00\u59cb\u90fd\u7ed9<code>latch</code>\u52a0\u9501\u6765\u786e\u4fdd\u9501\u7684\u6210\u5458\u53d8\u91cf\u88ab\u5b89\u5168\u7684\u4fee\u6539\uff0c\u786e\u4fdd\u8fd9\u4e9b\u64cd\u4f5c\u4e0d\u4f1a\u4e0e\u5176\u4ed6\u7ebf\u7a0b\u51b2\u7a81\u6216\u4ea7\u751f\u6570\u636e\u4e0d\u4e00\u81f4\u6027\u3002</p>"},{"location":"pytorch/","title":"Pytorch\u57fa\u7840","text":"<p>todo:pytorch practice</p>"},{"location":"pytorch/#_1","title":"\u5f20\u91cf","text":""},{"location":"pytorch/#_2","title":"\u5b9a\u4e49","text":"<p>\u5f20\u91cf(Tensor)\u662fpytorch\u7684\u57fa\u7840\u6570\u636e\u7ed3\u6784\u3002 </p> <ul> <li>\u6807\u91cf\u662f0\u9636\u5f20\u91cf\uff0c\u5411\u91cf\u662f1\u9636\u5f20\u91cf\uff0c\u77e9\u9635\u662f2\u9636\u5f20\u91cf\uff1b\u5f53\u7136\u4e5f\u5b58\u5728\u66f4\u9ad8\u9636\u7684\u5f20\u91cf\uff08\u4e0a\u56fe\u6700\u53f3\u8fb9\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e0d\u540c\u6e38\u620f\u7248\u672c\u7684\u5404\u82f1\u96c4\u7684\u5404\u9879\u5c5e\u6027(x\uff09</li> </ul>"},{"location":"pytorch/#_3","title":"\u57fa\u672c\u64cd\u4f5c","text":"<p>\u4e00\u822c\u60c5\u51b5\u4e0b\u6bd4\u8d77\u5177\u4f53\u6570\u5b57\uff0c\u6211\u4eec\u66f4\u52a0\u5173\u6ce8\u5f20\u91cf\u7684\u5f62\u72b6</p>"},{"location":"pytorch/#_4","title":"\u751f\u6210","text":""},{"location":"pytorch/#_5","title":"\u4fee\u6539\u5f62\u72b6","text":"<ol> <li>\u589e\u52a0\u7ef4\u5ea6\uff08\u4e0d\u6539\u53d8\u6570\u636e\u5185\u5bb9\uff09 </li> <li>\u964d\u4f4e\u7ef4\u5ea6\uff08\u524d\u63d0\uff1a\u6709\u4e00\u4e2a\u7ef4\u5ea6\u4e3a1\uff09 \u5f53\u6211\u4eec\u51cf\u5c11\u7684\u7ef4\u5ea6\u957f\u5ea6\u4e0d\u7b49\u4e8e1\u7684\u65f6\u5019\u64cd\u4f5c\u4e0d\u4f1a\u6709\u6548\uff0c\u89c1\u4e0a\u56fe<code>In[31]</code></li> <li>\u901a\u8fc7<code>View</code>\u51fd\u6570\u5b9e\u73b0 \u53ea\u652f\u6301\u5185\u5b58\u6bd7\u90bb\u6570\u636e\u7684\u8ba1\u7b97 \u53ef\u4ee5\u7a7a\u4e00\u4e2a\u7ef4\u5ea6\u51fd\u6570\u81ea\u884c\u8ba1\u7b97 </li> </ol>"},{"location":"pytorch/#_6","title":"\u8ba1\u7b97","text":"<p>\u4e24\u4e2a\u5f62\u72b6\u4e00\u6837\u7684\u5f20\u91cf\u53ef\u4ee5\u9010\u5143\u7d20\u8ba1\u7b97 e.g. \u76f8\u4e58 - \u5bf9\u5e94\u5143\u7d20\u9010\u4e2a\u76f8\u4e58 </p>"},{"location":"pytorch/#_7","title":"\u5e7f\u64ad\u673a\u5236","text":""},{"location":"pytorch/#_8","title":"\u77e9\u9635\u8fd0\u7b97","text":"<p>\u9ad8\u7ef4\u5f20\u91cf\uff1a\u540e\u4e24\u4f4d\u77e9\u9635\u8fd0\u7b97\uff0c\u524d\u9762\u7684\u7ef4\u5ea6\u662f\u9010\u4e2a\u5143\u7d20\u8ba1\u7b97\uff08\u5e7f\u64ad\u673a\u5236\uff09 </p>"},{"location":"%E4%B8%93%E4%B8%9A%E5%BF%85%E4%BF%AE%E8%AF%BE%E5%BF%83%E5%BE%97/","title":"\u4e13\u4e1a\u5fc5\u4fee\u8bfe","text":""},{"location":"%E4%B8%93%E4%B8%9A%E5%BF%85%E4%BF%AE%E8%AF%BE%E5%BF%83%E5%BE%97/#_1","title":"\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790 \u738b\u707f\u8001\u5e08","text":"<p>\u867d\u7136\u6211\u9009\u7684\u662f\u738b\u707f\u8001\u5e08\uff0c\u4f46\u662f\u6211\u542c\u7684\u662f\u6bdb\u5b87\u5c18\u8001\u5e08\u7684\u667a\u4e91\uff08\u9003 \u5148\u8bc4\u4ef7\u4e00\u4e0b\u8bb2\u8bfe\uff1a\u9996\u5148myc\u8001\u5e08\u771f\u7684\u8bb2\u5f97\u8d85\u7ea7\u8d85\u7ea7\u597d\ud83d\ude2d\u6211\u9664\u4e86fds\u4e4b\u5916\u6ca1\u6709\u4ec0\u4e48\u7b97\u6cd5\u57fa\u7840\ud83e\udd72\u4f46\u662f\u542cmyc\u8001\u5e08\u7684\u8bfe\u8fd8\u662f\u5f88\u597d\u61c2\uff0c\u4e0d\u7528ppt\u624b\u5199\u8bb2\u8bfe\u771f\u7684\u6e05\u6670\u5f88\u591a\ud83d\ude2d \u738b\u707f\u8001\u5e08\u662facm\u7684\u6559\u7ec3\uff0c\u6c34\u5e73\u4e5f\u662f\u5f88\u9ad8\u5f88\u9ad8\u7684\uff0c\u4f46\u662f\u6211\u611f\u89c9\u548c\u6bdb\u54e5\u76f8\u6bd4\u4ed6\u8bb2\u8bfe\u504f\u54f2\u5b66\uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u5f62\u5bb9\u53ef\u80fd\u5c31\u662f\u5bf9\u7b2c\u4e00\u6b21\u63a5\u89e6\u8fd9\u4e9b\u77e5\u8bc6\u7684\u540c\u5b66\u6ca1\u90a3\u4e48\u53cb\u597d\u5427\uff09\uff0c\u6240\u4ee5\u8fd8\u662f\u6bdb\u54e5\u6bd4\u8f83\u9002\u5408\u6211\uff08\u6216\u8005\u8bf4\u666e\u904d\u9002\u5408\u6ca1\u6709\u5f88\u591a\u7b97\u6cd5\u57fa\u7840\u7684\u540c\u5b66\uff09 \u4f46\u662f\uff01\u9664\u4e86\u8bb2\u8bfe\uff08\u53cd\u6b63\u53ef\u4ee5\u667a\u4e91\uff09\uff0c\u6211\u8ba4\u4e3aads\u9009\u8001\u5e08\u66f4\u91cd\u8981\u7684\u662f\u5e73\u65f6\u5206\u8bc4\u5206\u7684\u673a\u5236\uff01\u6bcf\u4e2a\u8001\u5e08\u90fd\u4e0d\u592a\u4e00\u6837\ud83d\ude2d\u8fd9\u76f4\u63a5\u51b3\u5b9a\u4e86\u4f60project\u7684\u5de5\u4f5c\u91cf\u548c\u5e73\u65f6\u5206\u7684\u9ad8\u4f4e\uff0c\u6bd4\u5982\u5218\u91d1\u98de\u8001\u5e08\u591a\u505a\u4e00\u4e2aproject+2\u5206\uff0cdiscussion\u53ef\u4ee5\u6ea2\u51fa4\uff5e5\u5206\u4f5c\u4e3a\u5e73\u65f6\u5206\u7684bonus\uff0c\u6709\u4e9b\u8001\u5e08\u4e0a\u8bfe\u53d1\u8a00\u4e5f\u53ef\u4ee5\u52a0\u5206\uff0c\u66f4\u6709\u8001\u5e08\uff08\u4e01\u5c27\u76f8\u8001\u5e08\u597d\u50cf\u662f\u8fd9\u6837\u7684\uff09\u4e0d\u5f3a\u5236pre\u628apre\u4f5c\u4e3abonus\u3002\u4f46\u662f\uff01\u738b\u707f\u8001\u5e08\u4e0d\u4ec5\u6ca1\u6709\u4e0a\u8ff0pre\u8ba8\u8bba\u548c\u53d1\u8a00\u7684bonus\uff0c\u591a\u505a\u4e00\u4e2aproject\u53ea\u80fd\u52a01\u5206\u5e73\u65f6\u5206\uff0c\u8fd9\u5c31\u5bfc\u81f4\u6211\u4eec\u7ec4\u7406\u8bba\u4e0a\u53ea\u9700\u8981\u505a\u4e24\u4e2aproject\u4f46\u662f\u4e3a\u4e86\u628a\u5e73\u65f6\u5206\u586b\u6ee1\u505a\u4e86\u4e03\u4e2aproject\uff08\u4e00\u4ebasolo\u4e24\u4e2a+pre\u7684\u4e00\u8d77\u505a\ud83e\udd72\uff09\u9876\u7ea7\u6298\u78e8\ud83d\ude2d\uff08\u6240\u5e78\u6211\u7684\u7ec4\u5458\u7ed9\u529b\uff0c\u5982\u679c\u9047\u5230\u6446\u70c2\u961f\u53cb\u90a3\u7b80\u76f4\u5f88\u96be\u60f3\u8c61\u3002</p>"},{"location":"%E4%B8%93%E4%B8%9A%E5%BF%85%E4%BF%AE%E8%AF%BE%E5%BF%83%E5%BE%97/#_2","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1 \u9648\u7fd4\u8001\u5e08","text":"<p>oop\u6211\u8ba4\u4e3a\u662f\u4e0d\u540c\u6559\u5b66\u73edworkload\u5dee\u5f02\u6700\u5927\u7684\u4e00\u95e8\u8bfe\uff0c\u6211\u4e86\u89e3\u5230\u5927\u6982\u662fljj&gt;&gt;wk&gt;czp=cx=xww\u3002 \u9648\u7fd4\u8001\u5e08\u7684\u6559\u5b66\u73ed\u771f\u7684\u53ef\u51b2\uff0c\u4e8b\u60c5\u4e0d\u591a\u4e0a\u8bfe\u4e0d\u70b9\u540d\uff0cassignment\u52a9\u6559\u7ed9\u5206\u5f88\u597d\uff08\u5305\u62ec\u5927\u4f5c\u4e1a\u90fd\u662f\u73ed\u4e0a70%\u4ee5\u4e0a\u7ed9\u6ee1\uff09\uff0c\u8bb2\u8bfe\u4f1a\u73b0\u573a\u5199\u4ee3\u7801\uff0c\u770b\u5f97\u51fa\u6765\u8001\u5e08\u6c34\u5e73\u5f88\u9ad8\u800c\u4e14\u662f\u771f\u7684\u60f3\u6559\u7ed9\u6211\u4eec\u4e00\u4e9b\u5b9e\u7528\u7684\u4e1c\u897f\u548c\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\u3002 \u7b2c\u4e00\u8282\u8bfe\u4e13\u95e8\u82b1\u4e00\u8282\u8bfe\u73b0\u573a\u5199\u7a0b\u5e8f\u6982\u8ff0\u4e86\u9762\u5411\u5bf9\u8c61\u662f\u4ec0\u4e48\uff0c\u6ca1\u6709\u628aoop\u4e0a\u6210c with stl\ud83d\ude2d\ud83d\udc4d</p>"},{"location":"%E4%B8%93%E4%B8%9A%E5%BF%85%E4%BF%AE%E8%AF%BE%E5%BF%83%E5%BE%97/#_3","title":"\u8ba1\u7b97\u673a\u7ec4\u6210 \u6768\u83b9\u6625\u8001\u5e08","text":"<p>\u540cads\uff0c\u6211\u662f\u9009yyc\u6559\u5b66\u73ed\u542c\u9a6c\u5fb3\u8001\u5e08\u667a\u4e91\uff08\u624b\u52a8\u72d7\u5934 \u9a6c\u5fb3\u8001\u5e08\u8bb2\u8bfe\u771f\u7684\u5f88\u6e05\u6670\uff0c\u800c\u4e14\u5f88\u6709\u6fc0\u60c5\uff0c\u6d59\u5927\u786c\u4ef6\u4e4b\u5149\uff01\u4e0d\u8fc7\u667a\u4e91\u5efa\u8bae\u542c\u4ed6\u53bb\u5e74\uff0822\uff5e23\u5e74\uff09\u7684\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u611f\u89c9\u4ed6\u4eca\u5e74\u8bb2\u5f97\u6709\u70b9\u6025\u5f88\u591a\u5185\u5bb9\u90fd\u662f\u8bf4\u201c\u8fd9\u4e9b\u4e1c\u897f\u4f60\u4eec\u81ea\u5df1\u770b\u770b\u54c8\u201d\u7136\u540e\u5c31\u4e0d\u8bb2\u4e86\uff0c\u7136\u540e\u6211\u90fd\u5728\u53bb\u5e74\u7684\u667a\u4e91\u7ffb\u5230\u4e86\u4ed6\u5bf9\u90a3\u4e9b\u4e1c\u897f\u7684\u8bb2\u89e3\ud83d\ude27\u52a0\u4e0a\u4eca\u5e74\u9a6c\u5fb3\u8001\u5e08\u6709\u6bb5\u65f6\u95f4\u8eab\u4f53\u4e0d\u597d\u3001\u6709\u51e0\u8282\u8bfe\u667a\u4e91\u6ca1\u58f0\u97f3\uff0c\u4f53\u9a8c\u6bd4\u8f83\u4e00\u822c\u2639\ufe0f \u4ee5\u53ca\uff1a\u9a6c\u5fb3\u8001\u5e08\u667a\u4e91\u6700\u540e\u51e0\u5468\u662f\u8ba9\u540c\u5b66\u8bb2\u4f5c\u4e1a\uff0c\u6768\u83b9\u6625\u73ed\u7684\u4f5c\u4e1a\u548c\u9a6c\u5fb3\u7684\u4f5c\u4e1a\u57fa\u672c\u4e00\u6837\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u770b\u9a6c\u5fb3\u667a\u4e91\u7684\u540c\u5b66\u8bb2\u89e3 \u81f3\u4e8eworkload\u548c\u7ed9\u5206\u65b9\u9762\uff0c\u6768\u83b9\u6625\u8001\u5e08\u4f1a\u6709\u4e24\u6b21\u5c0f\u6d4b\u4e0d\u8fc7\u7279\u522b\u6c34\uff08\u5f00\u5377+\u8bfe\u672c\u539f\u9898\u7684\u7a0b\u5ea6\uff0c\u4f17\u6240\u5468\u77e5\u8ba1\u7ec4\u8bfe\u672c\u539f\u9898\u662f\u6709\u7b54\u6848\u7684\ud83d\ude0c\uff09\uff0c\u6709\u7eb8\u8d28\u7b7e\u5230\uff0c\u5b9e\u9a8c\u8981\u6c42\u4e0d\u9ad8ddl\u5f88\u5bbd\u7ed9\u5206\u4e5f\u5f88\u597d\uff08\u8fd9\u4e2a\u548c\u6768\u83b9\u6625\u8001\u5e08\u6ca1\u4ec0\u4e48\u5173\u7cfb\uff0c\u4e3b\u8981\u662f\u6211\u4eec\u6709\u4e00\u4e2a\u8d85\u7ea7\u597d\u7684\u52a9\u6559\u54c8\u54c8\u54c8\u54c8\u54c8\uff0c\u4e0d\u77e5\u9053\u4ed6\u660e\u5e74\u8fd8\u5f53\u4e0d\u5f53\u52a9\u6559\ud83e\udd79\uff0c\u4e0d\u8fc7\u6768\u83b9\u6625\u8001\u5e08\u53ea\u4ece\u7ed9\u5206\u89d2\u5ea6\u603b\u7684\u6765\u8bf4\u662f\u6bd4\u8f83\u597d\u7684\uff09\u53cd\u6b63\u90fd\u662f\u667a\u4e91\u5927\u5b66\uff0cyyc\u53ef\u9009\uff01</p>"},{"location":"%E4%B8%93%E4%B8%9A%E9%80%89%E4%BF%AE%E8%AF%BE%E5%BF%83%E5%BE%97/","title":"\u4e13\u4e1a\u9009\u4fee\u8bfe","text":""},{"location":"%E4%B8%93%E4%B8%9A%E9%80%89%E4%BF%AE%E8%AF%BE%E5%BF%83%E5%BE%97/#_1","title":"\u6570\u503c\u5206\u6790 \u8bb8\u5a01\u5a01\u8001\u5e08","text":"<p>\u75db\u82e6\u7684\u56de\u5fc6\u5f00\u59cb\u653b\u51fb\u6211\u3002\u3002\u9996\u5148\u6570\u503c\u5206\u6790\u8fd9\u95e8\u8bfe\u8fd8\u662f\u5f88\u597d\u7684\uff0c\u8bb2\u7684\u4e1c\u897f\u5f88\u6709\u7528\u8001\u5e08\u4e5f\u8d85\u7ea7\u597d\u4f46\u662f\u8fd9\u4e0d\u59a8\u788d\u6211\u6570\u5b66\u4e0d\u597d\u6240\u4ee5\u5b66\u5f97\u5f88\u75db\u82e6\u3002 \u5f53\u65f6\u662f\u5b66\u957f\u5b66\u59d0\u8bf4\u8fd9\u95e8\u8bfe\u671f\u672b\u5f88\u7b80\u5355\u3001\u7ed9\u5206\u8d85\u7ea7\u597d\uff0c\u8bb8\u5a01\u5a01\u8001\u5e08\u4eba\u4e5f\u5f88\u597d\u4e8b\u60c5\u4e5f\u5c11\u5c31\u9009\u4e86\u3002 \u4e8b\u5b9e\u8bc1\u660e\u8bb8\u5a01\u5a01\u8001\u5e08\u4eba\u786e\u5b9e\u5f88\u597d\uff0c\u4e8b\u60c5\u4e5f\u786e\u5b9e\u4e0d\u591a\uff08\u4e00\u6b21research topic+\u516d\u4e2aproject\uff0c\u4e0d\u8fc7\u9694\u58c1trf\u73ed\u5c31\u6709\u5c0f\u6d4b\u671f\u4e2d\u4ec0\u4e48\u7684\uff09\uff0c\u4e0d\u8fc7\u6211project\u6bcf\u6b21\u90fd\u8981\u5199\u5f88\u4e45\u5e94\u8be5\u662f\u6211\u6c34\u5e73\u4e0d\u884c\u3002 \u4f46\u662f\u6211\u4eec\u8fd9\u4e00\u5c4a\u671f\u672b\u8003\u8bd5\u8ba1\u7b97\u91cf\u5f88\u5927\u96be\u5ea6\u4e5f\u6ca1\u90a3\u4e48\u5c0f\uff0c\u7ed9\u5206\u786e\u5b9e\u8fd8\u53ef\u4ee5\uff0c\u53ea\u4e0d\u8fc7\u6ca1\u6709\u4e0a\u4e00\u5c4a\u534a\u4e2a\u73ed\u6ee1\u7ee9\u90a3\u4e48\u5938\u5f20\u3002\u8bb2\u8bfe\u4e2d\u89c4\u4e2d\u77e9\uff0c\u6ca1\u6709\u7279\u522b\u597d\u4f46\u662f\u4e5f\u8be5\u8bb2\u7684\u90fd\u8bb2\u4e86\u3002 \u603b\u7ed3\u6765\u8bf4\u5c31\u662f\u5bf9\u4e8e\u6570\u5b66\u597d\u7684\u540c\u5b66\u6765\u8bf4\u8fd8\u662f\u975e\u5e38\u63a8\u8350\u7684\uff0c\u4e0d\u8fc7\u8fd9\u95e8\u8bfe\u7684\u671f\u672b\u96be\u5ea6\u548c\u7ed9\u5206\u4e2a\u4eba\u8ba4\u4e3a\u6ca1\u6709\u597d\u5230\u53ef\u4ee5\u5ffd\u89c6\u6570\u5b66\u6c34\u5e73\u65e0\u8111\u9009\u7684\u7a0b\u5ea6\ud83d\ude2d</p>"},{"location":"%E4%B8%93%E4%B8%9A%E9%80%89%E4%BF%AE%E8%AF%BE%E5%BF%83%E5%BE%97/#_2","title":"\u56fe\u50cf\u4fe1\u606f\u5904\u7406 \u5b8b\u660e\u9ece\u8001\u5e08","text":"<p>\u8fd9\u95e8\u8bfe\u7684\u8bc4\u4ef7\u5e94\u8be5\u662f\u5728\u4e0a\u5b66\u671f\u671f\u672b\u4e4b\u540e\u51fa\u73b0\u4e86\u975e\u5e38\u5f3a\u70c8\u7684\u4e24\u6781\u5206\u5316\u3002\u4e2a\u4eba\u89c9\u5f97\u8fd9\u95e8\u8bfe\u4e5f\u662f\u8981\u6839\u636e\u81ea\u5df1\u64c5\u957f\u4ec0\u4e48\u559c\u6b22\u4ec0\u4e48\u51b3\u5b9a\u662f\u5426\u8981\u9009\u7684\uff0c\u56e0\u4e3a\u662f\u95ed\u5377\u8003\u8bd5\u52a0\u4e0a\u540e\u534a\u5b66\u671f\u8bb2\u7684\u5f88\u591a\u7b97\u6cd5\u90fd\u6666\u6da9\u96be\u61c2\uff0c\u5bfc\u81f4\u8fd9\u95e8\u8bfe\u6709\u70b9\u6587\u79d1\u6027\u8d28\uff08\u6211\u4e0d\u61c2\u4f46\u662f\u6211\u4f1a\u80cc\u554adoge \u603b\u7684\u6765\u8bf4\u4e8b\u60c5\u4e0d\u662f\u7279\u522b\u591a\uff0c5\u4e2aproject\uff08\u9664\u4e86\u7b2c\u4e00\u4e2a\u6bd4\u8f83\u75db\u82e6\u5176\u4ed6\u90fd\u4e0d\u96be\u800c\u4e14\u633a\u6709\u610f\u601d\uff09+\u95ed\u5377\u671f\u672b\u8003\uff0c\u4e0d\u70b9\u540d\uff0c\u6700\u540e\u4e00\u8282\u8bfe\u5212\u91cd\u70b9\u5efa\u8bae\u53bb\u7ebf\u4e0b\u56e0\u4e3a\u667a\u4e91\u975e\u5e38\u975e\u5e38\u7cca\u542c\u4e0d\u6e05\u4e00\u70b9\ud83e\udd72 \u81f3\u4e8e\u7ed9\u5206\uff0c\u5982\u679c\u671f\u672b\u8003\u80fd\u9762\u5411\u5386\u5e74\u5377\u62df\u5408+\u628a\u7406\u89e3\u4e0d\u4e86\u7684\u7b97\u6cd5\u4e00\u6b65\u4e00\u6b65\u80cc\u4e0b\u6765\uff0c\u8fd8\u662f\u53ef\u4ee5\u62ff\u9ad8\u5206\u7684\uff08\u8eab\u8fb9\u4e5f\u786e\u5b9e\u4e0d\u6b62\u4e00\u4e2a4.8+\uff0c\u5e76\u6ca1\u6709\u4eba\u57473.3\uff09\uff0c\u4f46\u662f\u7531\u4e8e\u8001\u5e08\u4e0d\u635e+\u540e\u9762\u6709\u4e9b\u7b97\u6cd5\u786e\u5b9e\u4e0d\u597d\u61c2\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8fd9\u95e8\u8bfe\u7ee9\u70b9\u4e0b\u9650\u5f88\u4f4e\u3002</p>"},{"location":"%E5%A4%A7%E7%89%A9/","title":"\u5927\u5b66\u7269\u7406\u6574\u7406","text":"<p>\u5355\u51fb\u94fe\u63a5\u5373\u53ef\u4e0b\u8f7d\uff1a \u5927\u7269\u4e59I\u590d\u4e60 \u5927\u7269\u4e59II\u590d\u4e60</p>"},{"location":"%E5%BE%AE%E7%A7%AF%E5%88%86/","title":"\u5fae\u79ef\u5206\u6574\u7406","text":"<p>\u5355\u51fb\u94fe\u63a5\u5373\u53ef\u4e0b\u8f7d\uff1a \u6781\u9650&amp;\u4e0d\u5b9a\u79ef\u5206\u6574\u7406 \u5faeI\u9898\u578b\u68b3\u7406 \u5faeII\u590d\u4e60\u603b\u7ed3</p>"},{"location":"%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/","title":"cheatingsheet","text":"<p>cheating sheet:\uff08\u5355\u51fb\u94fe\u63a5\u5373\u53ef\u4e0b\u8f7d\uff09 DB_cheating_sheet</p>"},{"location":"%E6%95%B0%E7%90%86%E5%9F%BA%E7%A1%80%E8%AF%BE%E5%BF%83%E5%BE%97/","title":"\u6570\u7406\u57fa\u7840\u8bfe","text":"<p>\u6ce8\uff1a\u7531\u4e8e\u5927\u4e00\u7684\u65f6\u5019\u6ca1\u6709\u8bb0\u5f55\uff0c\u6240\u4ee5\u53ef\u80fd\u4e0d\u662f\u5f88\u5168\u5566</p>"},{"location":"%E6%95%B0%E7%90%86%E5%9F%BA%E7%A1%80%E8%AF%BE%E5%BF%83%E5%BE%97/#_1","title":"\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1 \u8d75\u654f\u667a\u8001\u5e08","text":"<p>\u5f3a\u63a8\u8d75\u654f\u667a\u8001\u5e08\uff01\u5927\u5b66\u4ee5\u6765\u8bb2\u8bfe\u6700\u6e05\u6670\u7684\u8001\u5e08\u4e4b\u4e00\ud83d\ude2d\u4e0a\u8bfe\u542c\u61c2\u4e86\u8bfe\u540e\u4e0d\u7528\u600e\u4e48\u82b1\u65f6\u95f4\u4e86\uff0c\u4f5c\u4e1a\u91cf\u4e5f\u4e0d\u5927\uff0c\u6211\u771f\u7684\u7231\u6b7b\u4e86\u3002 \u671f\u672b\u7684\u5efa\u8bae\u662f\u4e0d\u8981\u4e70\u5b66\u89e3\uff0c98\u4e0a\u597d\u50cf\u6709\u4e00\u4e9b\u6bd4\u8f83\u9760\u8c31\u7684\u5386\u5e74\u5377\uff0c\u53cd\u6b63\u5c31\u662f\u5982\u679c\u5199\u5386\u5e74\u5377\u89c9\u5f97\u5f02\u5e38\u987a\u5229\u90a3\u4e8b\u60c5\u591a\u534a\u4e0d\u592a\u5bf9\uff08\u5b66\u89e3\u6709\u51e0\u5f20\u5386\u5e74\u5377\u548c\u771f\u5b9e\u7684\u671f\u672b\u8003\u5377\u76f8\u5dee\u5341\u4e07\u516b\u5343\u91cc\uff09\uff0c\u77e5\u8bc6\u70b9\u53ef\u4ee5\u9762\u5411\u8d75\u654f\u667a\u8001\u5e08\u590d\u4e60\u8bfeppt\u590d\u4e60\u3002</p>"},{"location":"%E6%95%B0%E7%90%86%E5%9F%BA%E7%A1%80%E8%AF%BE%E5%BF%83%E5%BE%97/#ii","title":"\u5927\u5b66\u7269\u7406\uff08\u4e59\uff09II \u7ae0\u6797\u6eaa\u8001\u5e08","text":"<p>\u662f\u5f88\u559c\u6b22\u70b9\u540d\u7684\u8001\u5e08\uff08\u6276\u989d\u82e6\u7b11\uff09\uff0c\u6570\u5b57\u70b9\u540d\u53d1\u73b0\u4eba\u6570\u4e0d\u5bf9\u8fd8\u4f1a\u7eb8\u8d28\u7b7e\u5230\u3002 \u5c0f\u6d4b\u96be\u5ea6\u8fd8\u884c\uff0c\u9762\u5411\u8001\u5e08\u524d\u51e0\u5e74\u667a\u4e91\u91cc\u9762\u7684\u5c0f\u6d4b\u9898\u548cppt\u4f8b\u9898\u51c6\u5907\u57fa\u672c\u53ef\u4ee5\u516b\u4e5d\u4e0d\u79bb\u5341\u3002 \u671f\u672b\u6ca1\u4ec0\u4e48\u53ef\u8bf4\u7684\uff0c\u591a\u5237\u5237\u5386\u5e74\u5377\u5c31\u597d\u3002</p>"},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/","title":"\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1\u671f\u672b\u590d\u4e60","text":"<p>\u65f6\u5e8f\u7535\u8def\u90e8\u5206\uff1a\u65f6\u5e8f\u7535\u8def\u6574\u7406</p>"},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#chapter1","title":"chapter1","text":""},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#_2","title":"\u8fdb\u5236\u8f6c\u6362","text":"<ul> <li> <p>\u6574\u6570\u7684\u8f6c\u6362</p> <ul> <li>Binary - \u4e8c\u8fdb\u5236</li> <li>Octal - \u516b\u8fdb\u5236</li> <li>Decimal - \u5341\u8fdb\u5236</li> <li>Hexadecimal - \u5341\u516d\u8fdb\u5236</li> <li>\u4e00\u822c\u5728\u5176\u4ed6\u8fdb\u5236\u8f6c\u6362\u7684\u8fc7\u7a0b\u4e2d\u90fd\u662f\u4ee5\u4e8c\u8fdb\u5236\u4e3a\u6865\u6881\u7684</li> </ul> </li> <li> <p>\u5c0f\u6570\u7684\u8f6c\u6362</p> <ul> <li>DtoB - \u4e582\u8fdb1\u6cd5</li> <li>BtoOther - \u4ece\u5c0f\u6570\u70b9\u5f00\u59cb\u4ece\u5de6\u5230\u53f3\u53d6n\u4f4d\u8f6c\u6362</li> <li>\u7531\u4e8e\u5c0f\u6570\u90e8\u5206\u4e0d\u5b58\u5728\u201c\u6700\u5c0f\u7cbe\u5ea6\u201d\u7684\u8bf4\u6cd5\uff0c\u6240\u4ee5\u6709\u53ef\u80fd\u5341\u8fdb\u5236\u65e0\u6cd5\u7cbe\u51c6\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\uff0c\u4f46\u662f\u4e8c\u8fdb\u5236\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236</li> </ul> </li> </ul>"},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#_3","title":"\u4e8c\u8fdb\u5236\u4e0e\u7f16\u7801\u7684\u8f6c\u6362","text":"<ul> <li>BCD\u7801 - 4\u4f4d\u4e8c\u8fdb\u5236\u8868\u793a1\u4f4d\u5341\u8fdb\u5236<ul> <li>\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u7684\u8fdb\u4f4d\uff08\u88656\uff09\u95ee\u9898 - 8 + 5 = 1000 + 0101 = 1101 \u88656 1101 + 0110 = 1 0011\uff0c\u5176\u4e2d1\u4f5c\u4e3acarry</li> <li>Excess3\uff08\u4f593\u7801\uff09- \u5728 BCD\u7801\u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e00\u4e2a\u5927\u5c0f\u4e3a 3 \u7684\u504f\u79fb\u91cf<ul> <li>\u65b9\u4fbf\u5224\u65ad\u8fdb\u4f4d\uff0c\u4e0d\u8fc7\u8fd0\u7b97\u540e\u8fd8\u5f97\u4fee\u6b63\uff1a\u5982\u679c\u7ed3\u679c\u6ca1\u8fdb\u4f4d\uff0c\u5219\u51cf\u53bb 3\uff1b\u5982\u679c\u7ed3\u679c\u8fdb\u4f4d\u4e86\uff0c\u5219\u52a0\u4e0a 3</li> </ul> </li> </ul> </li> <li>one-hot/one-cold</li> <li> <p>ASCII\u7801 - \u5b57\u7b26\u7f16\u7801 </p> </li> <li> <p>Parity Bit - \u5947\u5076\u6821\u9a8c\u4f4d</p> <ul> <li>\u770b\u6e05\u5947\u5076 - \u52a0\u4e0a\u6821\u9a8c\u4f4d\u540e1\u7684\u4e2a\u6570</li> <li>\u770b\u6e05\u6700\u9ad8\u4f4d\u6821\u9a8c\u8fd8\u662f\u6700\u4f4e\u4f4d\u6821\u9a8c</li> </ul> </li> <li> <p>Gray Code - \u683c\u96f7\u7801\uff0c\u76f8\u90bb\u4e24\u4e2a\u6570\u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e0b\u53ea\u5dee\u4e00\u4f4d</p> <ul> <li>\u5bfb\u627e\u7b2ck\u4e2a\u683c\u96f7\u7801\uff1a\\(k\\)  XOR \\((k&gt;&gt;1)\\)</li> <li>\u201c\u955c\u50cf\u6280\u5de7\u201d\uff1a</li> </ul> </li> </ul>"},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#chapter2","title":"chapter2","text":""},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#_4","title":"\u5e03\u5c14\u4ee3\u6570","text":"<ul> <li>\u8fbe\u6469\u6839\u5f8b - break the line, change the sign</li> <li>\u5206\u914d\u5f8b<ul> <li>\\(X + YZ = (X+Y)(X+Z)\\)</li> </ul> </li> <li>\u4e00\u81f4\u6027\u5b9a\u7406<ul> <li>\\(XY+\\bar{X}Z+YZ=XY+\\bar{X}Z\\)</li> <li>\\((X + Y)(\\bar{X} + Z)(Y+Z)=(X+Y)(\\bar{X}+Z)\\)</li> </ul> </li> <li>the dual - \u5bf9\u5076\u6027\u8d28<ul> <li>\u7ffb\u8f6c0/1\u548cAND/OR</li> <li>\u4e0d\u7ffb\u8f6c\u5e03\u5c14\u53d8\u91cf</li> <li>\u4e0d\u6539\u53d8\u539f\u5148\u4f18\u5148\u7ea7\u987a\u5e8f</li> <li>\u7b49\u5f0f\u4e24\u8fb9\u5bf9\u5076\u540e\u4ecd\u7136\u6210\u7acb</li> </ul> </li> </ul>"},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#complement-of-a-function","title":"Complement of a function \u4e92\u8865\u51fd\u6570","text":"<ul> <li>OR \\(\\leftrightarrow\\)AND</li> <li>0's \\(\\leftrightarrow\\)1's</li> <li>\\(X\\leftrightarrow\\bar{X}\\)</li> <li>\u4e00\u4e2a \u51fd\u6570\u7684\u4e92\u8865(Complement of a Function) \u6307\u7684\u662f\uff0c\u5c06\u5b83\u7684 \u5bf9\u5076\u51fd\u6570 \u4e2d\u6bcf\u4e00\u4e2a \u53d8\u91cf \u90fd\u53d6\u53cd\u5f97\u5230\u7684\u51fd\u6570\uff0c\u800c\u8be5\u51fd\u6570\u6b63\u597d\u7b49\u4e8e\u539f\u51fd\u6570\u7684 \u975e\uff1a</li> <li>\u4e5f\u53ef\u4ee5\u76f4\u63a5\u53d6\u975e\u4e4b\u540e\u4f7f\u7528\u8fbe\u6469\u6839\u5f8b</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#canonical-form","title":"Canonical form\uff08\u89c4\u8303\u5f62\u5f0f\uff09","text":"<ul> <li>\u6700\u5c0f\u9879\u4e4b\u548c(Sum of Minterms, SOM)<ul> <li>\u201c\u679a\u4e3e\u6240\u67091\u7684\u53ef\u80fd\u201d</li> <li></li> </ul> </li> <li>\u6700\u5927\u9879\u4e4b\u79ef(Product of Maxterms, POM)<ul> <li>\u201c\u679a\u4e3e\u6240\u67090\u7684\u53ef\u80fd\u201d</li> <li></li> </ul> </li> <li>index \u6700\u5c0f\u9879\u76f4\u63a5\u8f6c\u6362\u4e8c\u8fdb\u5236\uff0c\u6700\u5927\u9879\u5219\u53d6\u53cd\u8f6c\u6362\u4e8c\u8fdb\u5236<ul> <li>\u76f8\u540cindex\u7684\u6700\u5c0f\u9879\u548c\u6700\u5927\u9879\u662f\u53d6\u53cd\u5173\u7cfb</li> </ul> </li> </ul>"},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#standard-form","title":"Standard form\uff08\u6807\u51c6\u5f62\u5f0f\uff09","text":"<ul> <li>SOP(Sum of Products) - SOM\u7684\u5316\u7b80\u5f62\u5f0f</li> <li>POS(Product of Sums) - POM\u7684\u5316\u7b80\u5f62\u5f0f</li> <li> <p>\u6df7\u5408\u8868\u8fbe\uff08\u5927\u4e8e\u4e24\u5c42\u7535\u8def\uff09\u4e0d\u662f\u6807\u51c6\u5f62\u5f0f</p> </li> <li> <p>\u628a\u6807\u51c6\u5f62\u5f0fexpand\u6210\u89c4\u8303\u5f62\u5f0f\uff1a</p> <ul> <li>\u6700\u5c0f\u9879\uff1a\u8865\u5145 \\(1 = X + \\bar X\\)</li> <li>\u6700\u5927\u9879<ul> <li>\u5148\u53d8\u6210\u79ef\uff08\u4f7f\u7528\u5206\u914d\u5f8b\uff09</li> <li>\u8865\\(X\u00b7\\bar X\\) \u518d\u4f7f\u7528\u5206\u914d\u5f8b</li> <li></li> </ul> </li> <li>\u5176\u5b9e\u6211\u89c9\u5f97\u771f\u503c\u8868\u66f4\u65b9\u4fbf</li> </ul> </li> </ul>"},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#_5","title":"\u95e8\u8f93\u5165\u4ee3\u4ef7","text":"<ul> <li> <p>Literal Cost \u6587\u5b57\u4ee3\u4ef7</p> <ul> <li>\\(L\\)\uff1a\u8868\u8fbe\u5f0f\u4e2dLiteral\u4e2a\u6570</li> <li>\u76f8\u7b49\u7684\\(L\\)\u4e0b\u7535\u8def\u590d\u6742\u5ea6\u4e0d\u4e00\u5b9a\u4e00\u6837</li> <li>\u7b2c\u4e00\u5c42\u6b21\u7684\u8f93\u5165\u5f15\u811a\u6570</li> </ul> </li> <li> <p>Gate Input Cost \u95e8\u7535\u8def\u8f93\u5165\u4ee3\u4ef7</p> <ul> <li>\\(G\\)\uff1a\u70b9\u5b8c\u6587\u5b57\u4ee3\u4ef7\u7684\u57fa\u7840\u4e0a\uff08\u4e00\u5c42\u7ed3\u5408\u4e4b\u540e\uff08\uff1f\uff09\u5bf9\u6587\u5b57\u7684\u7ec4\u5408\u518d\u6b21\u6e05\u70b9\uff08remaining OR gate inputs\uff09<ul> <li>\u6700\u540e\u90a3\u4e2a\u5927\u9879\u4e0d\u7528\u70b9</li> </ul> </li> <li>\\(GN\\)\uff1a\u70b9\u5b8c\u95e8\u7535\u8def\u8f93\u5165\u4ee3\u4ef7\u7684\u57fa\u7840\u4e0a\u8003\u8651\u975e\u95e8\u8f93\u5165\u4e2a\u6570<ul> <li>\u6ce8\u610f\u53bb\u9664\u53ef\u4ee5\u5171\u4eab\u7684\u975e\u95e8\uff0c\u4e24\u4e2a\\(\\bar B\\)\u7b97+1\u4e2a\\(GN\\)</li> </ul> </li> </ul> </li> </ul>"},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#_6","title":"\u5361\u8bfa\u56fe\u4f18\u5316","text":"<ul> <li>\u683c\u96f7\u7801\u6392\u5e03</li> <li>\u5c3d\u53ef\u80fd\u5927\u5708</li> <li>\u907f\u514d\u5197\u4f59\u4f18\u5316</li> <li>\u5408\u7406\u4f7f\u7528don't cares</li> <li>\u662f\u89c4\u8303\u5f62\u5f0f\u548c\u6807\u51c6\u5f62\u5f0f\u7684\u6865\u6881</li> <li>Implicant - \u8574\u6db5\u9879<ul> <li>a product in SOP or a sum in POS</li> <li>in K-map - a group containing \\(2^n\\) squares</li> <li>\u4e24\u7c7b\u8574\u6db5\u9879\uff1a<ul> <li>prime implicant - \u4e3b\u8574\u6db5\u9879</li> <li>\u6781\u5927\u8574\u6db5\u9879</li> </ul> </li> <li>essential prime implicant - \u57fa\u672c\u4e3b\u8574\u6db5\u9879<ul> <li>\u5305\u542b \u53ea\u88ab\u5b83(\u57fa\u672c\u4e3b\u8574\u542b\u9879)\u8986\u76d6\u7684 <code>1</code> \u7684\u4e3b\u8574\u542b\u9879</li> </ul> </li> </ul> </li> </ul>"},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#_7","title":"\u903b\u8f91\u95e8","text":"<ul> <li>NAND/NOR - universal gate \u901a\u7528\u95e8</li> <li> <p>XOR - \u5f02\u6216/XNOR - \u540c\u6216</p> <ul> <li> <p>\u591a\u8f93\u5165\u7684\u5f02\u6216/\u540c\u6216\u79f0\u4e3a\u5947/\u5076\u51fd\u6570</p> </li> <li> <p>\u5947\u5076\u6821\u9a8c\uff1a</p> <ul> <li>\u4f7f\u7528\u5947\u51fd\u6570\uff08\u5f02\u6216\uff09\u751f\u6210\u5076\u6821\u9a8c\u4f4d</li> <li>\u4f7f\u7528\u5076\u51fd\u6570\uff08\u540c\u6216\uff09\u751f\u6210\u5947\u6821\u9a8c\u4f4d</li> <li></li> </ul> </li> </ul> </li> <li> <p>Buffer - \u7f13\u51b2\u5668</p> </li> <li>3-state buffer - \u4e09\u6001\u95e8<ul> <li>\u4f7f\u7528\u4f7f\u80fd\u4fe1\u53f7\u9009\u62e9\u8f93\u51fa\u63a5\u6536\u54ea\u4e2a\u8f93\u5165\uff0c\u5177\u4f53\u5230\u4e00\u4e2a\u95e8\u5c31\u662f\u662f\u5426\u63a5\u6536\u8be5\u8f93\u5165</li> <li></li> </ul> </li> </ul> <p>exercise1: \\(F=(\\bar{D+C\u00b7\\bar{AB}})\u00b7(\\bar{\\bar{AB}\u00b7\\bar{C+D}})=\\bar{D}\u00b7(\\bar{C}+AB)\u00b7(AB+C+D)=AB\\bar{D}\\)</p>"},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#chapter35","title":"Chapter3&amp;5","text":""},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#_8","title":"\u5de5\u827a\u53c2\u6570","text":"<p>fan-in - \u4e00\u4e2a\u903b\u8f91\u95e8\u53ef\u7528\u7684\u8f93\u5165\u6570\u91cf</p> <p>fan-out - \u4e00\u4e2a\u903b\u8f91\u95e8\u8f93\u51fa\u65f6\u53ef\u9a71\u52a8\u7684\u6807\u51c6\u8d1f\u8f7d\u6570\u91cf</p> <ul> <li>\u4e00\u822c\u8d1f\u8f7d\u6570\u91cf\u589e\u52a0\u8f6c\u6362\u65f6\u95f4\u4e5f\u4f1a\u589e\u52a0\uff0c\u800c\u6700\u5927\u8d1f\u8f7d\u5c31\u662f\u7531\u6700\u5927\u8f6c\u6362\u65f6\u95f4\u4e0b\u7684\u8d1f\u8f7d\u6570\u91cf\u51b3\u5b9a\u7684</li> </ul> <p>noise margin -  \u5bf9\u5916\u754c\u566a\u58f0\u7684\u5bb9\u5fcd\u80fd\u529b(\u5177\u4f53\u6765\u8bf4\u662f\u4e0d\u4f1a\u5bfc\u81f4\u884c\u4e3a\u5f02\u53d8\u7684\u6700\u5927\u566a\u58f0\u9608\u503c)</p> <p>cost - \u95e8\u5bf9\u96c6\u6210\u7535\u8def\u6210\u672c\u7684\u8d21\u732e\u7684\u5ea6\u91cf - Gate cost</p> <p>transition time - \u8f6c\u6362\u65f6\u95f4</p> <ul> <li>\\(t_{LH}\\) - rise time</li> <li>\\(t_{HL}\\) - fall time</li> <li></li> </ul> <p>propagation delay - \u4f20\u64ad\u5ef6\u8fdf</p> <ul> <li>\u6ce8\u610f\u5224\u65adhl\u8fd8\u662flh\u662f\u770b\u4f20\u64ad\u5230\u8f93\u51fa\u7684\u53d8\u5316</li> <li>\\(t_{PHL}\\) - propagation delay high-low</li> <li>\\(t_{PLH}\\) - propagation delay low-high</li> <li> <p></p> </li> <li> <p>\\(t_{pd}\\) - \u7edf\u4e00\u8868\u793a\u4f20\u64ad\u5ef6\u8fdf\u65f6\u95f4\uff0c\u662fhl\u548clh\u7684average\u6216\u8005max</p> </li> </ul> <p>power dissipation - \u7535\u6e90\u8f93\u51fa\u80fd\u8017\u548c\u95e8\u7684\u80fd\u8017</p> <p>inertial delay - \u5f15\u5165\u4e86 \u62d2\u7edd\u65f6\u95f4(rejection time)\uff0c\u53ea\u6709\u5f53\u8f93\u5165\u8fbe\u5230\u4e00\u5b9a\u80fd\u91cf\u540e\uff0c\u624d\u4f1a\u51fa\u53d1\u6805\u6781\u8f93\u51fa\uff08\u5728\u8fd9\u79cd\u6a21\u578b\u4e0b\uff0c\u566a\u97f3\u7b49\u4f1a\u88ab\u8fc7\u6ee4\uff09</p> <ul> <li></li> </ul> <p>calculate gate delay based on fan-out:</p> <ul> <li>\\(t_{pd}\\) = \u56fa\u5b9a\u5ef6\u8fdf + SL\uff08\u6807\u51c6\u5316\u8d1f\u8f7d\u91cf\uff09 * \u4e00\u4e2a\u6807\u51c6\u8d1f\u8f7d\u5e26\u6765\u7684\u5ef6\u8fdf\u7cfb\u6570</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#_9","title":"\u903b\u8f91\u8bbe\u8ba1","text":"<p>\u8868\u793a\u903b\u8f91\u7684\u65b9\u6cd5\uff1a</p> <ul> <li>Truth Table - \u771f\u503c\u8868</li> <li>Timing Diagram - \u65f6\u5e8f\u56fe</li> <li>Boolean Function - \u5e03\u5c14\u51fd\u6570</li> <li>Karnaugh Maps - \u5361\u8bfa\u56fe</li> <li>Logic Circuit - \u903b\u8f91\u7535\u8def\u56fe</li> </ul> <p>\u659c\u4f53\u8868\u793a \u8868\u8fbe\u65b9\u5f0f\u4e0d\u552f\u4e00</p> <p>\u8bbe\u8ba1\u8fc7\u7a0b\uff1aspecification - \u786e\u5b9a\u7cfb\u7edf\u7684\u884c\u4e3a\\(\\rightarrow\\)formulation - \u903b\u8f91\u8868\u8fbe\\(\\rightarrow\\)optimization - \u4f18\u5316\\(\\rightarrow\\)technology mapping - \u5de5\u827a\u6620\u5c04\\(\\rightarrow\\)verification - \u6b63\u786e\u6027\u9a8c\u8bc1</p> <p>Hierarchical Design - \u5206\u5c42\u8bbe\u8ba1</p> <ul> <li>Top-Down \u81ea\u9876\u5411\u4e0b - \u4ece\u9700\u6c42\u5f00\u59cb\uff0c\u81ea\u9876\u5411\u4e0b\u5206\u89e3\u529f\u80fd\u8bbe\u8ba1</li> <li>Bottom-up \u81ea\u5e95\u5411\u4e0a - \u6839\u636e\u73b0\u6709\u7684\u5143\u4ef6\u53bb\u7ec4\u5408\u6210\u76ee\u6807\u529f\u80fd</li> </ul> <p>\u5de5\u827a\u6620\u5c04\u6b65\u9aa4</p> <p></p> <p></p>"},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#_10","title":"\u7ec4\u5408\u529f\u80fd\u6a21\u5757","text":"<p>Decoder - \u8bd1\u7801\u5668</p> <ul> <li> <p>n inputs and m outputs with n \u2264 m \u2264 \\(2^n\\)</p> </li> <li> <p>\u672c\u8d28\u4e0a\u662f\u679a\u4e3e\u6700\u5c0f\u9879</p> </li> <li>\u8f93\u51fa\u592a\u591a\u65f6\uff0c\u8003\u8651fan-out\u7684\u9650\u5236\uff0c\u6211\u4eec\u91c7\u53d6\u5206\u5c42\u8bbe\u8ba1\uff1a</li> </ul> <p></p> <p>Encoder - \u7f16\u7801\u5668</p> <ul> <li> <p>m inputs and n outputs with n \u2264 m \u2264 \\(2^n\\)</p> </li> <li> <p>\u666e\u901a\u7f16\u7801\u5668\u5fc5\u987b\u8981\u6c42\u8f93\u5165\u662f one-hot \u7684\uff0c\u5373\u53ea\u5141\u8bb8\u5b58\u5728\u4e00\u4e2a\u8f93\u5165\u4e3a <code>1</code>\uff0c\u5426\u5219\u65e0\u6cd5\u5224\u65ad\u5f97\u51fa\u552f\u4e00\u8f93\u51fa\u3002</p> </li> <li>\u4f18\u5148\u7f16\u7801\u5668\uff08Priority Encoder\uff09\u80fd\u591f\u5b9e\u73b0\u4f18\u5148\u7ea7\u51fd\u6570\uff0c\u5b83\u4e0d\u8981\u6c42\u8f93\u5165\u662f one-hot \u7684\uff0c\u800c\u662f\u603b\u662f\u5173\u6ce8\u6709\u6548\u8f93\u5165\u4e2d\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u90a3\u4e00\u4e2a\u3002\u5373\u6bd4\u5982\u5f53\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u90a3\u4e00\u4f4d\u662f <code>1</code> \u65f6\uff0c\u5176\u5b83\u6240\u6709\u4f18\u5148\u7ea7\u4e0d\u5982\u5b83\u7684\u4f4d\u7f6e\u7684\u503c\u90fd\u662f\u6211\u4eec\u4e0d\u5173\u5fc3\u7684\u5185\u5bb9\u4e86\u3002</li> </ul> <p>Multiplexer - \u591a\u8def\u9009\u62e9\u5668</p> <ul> <li>n control inputs (selection inputs), m inputs and one output with m &lt; \\(2^n\\)</li> <li>\u901a\u5e38\uff0c\u4e00\u4e2a\\(2^n-to-1\\)MUX\u7684\u7ec4\u6210\u4e3a\uff1a<ul> <li>\u4e00\u4e2a\\(n-to-2^n\\)\u8bd1\u7801\u5668\uff08MUX \u5229\u7528\u4e86\u8bd1\u7801\u5668\u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u8f93\u51fa\u4e3a <code>1</code> \u7684\u7279\u6027\uff0c\u4ece\u800c\u5b9e\u73b0\u9009\u62e9\u529f\u80fd\uff09</li> <li>\\(2^n*2\\) AND-OR / \u5229\u7528\u4e09\u6001\u95e8\u4ee3\u66ffAND-OR\u95e8\uff08\u51cf\u5c11\u95e8\u8f93\u5165\uff09<ul> <li>\u5b8c\u5168\u4f7f\u7528\u4e09\u6001\u95e8\u5b9e\u73b04to1MUX: </li> </ul> </li> <li>MUX\u7684\u672c\u8d28\u662f\u51fd\u6570\u7684\u5b9e\u73b0</li> </ul> </li> </ul> <p>Programmable implementation technologies - \u53ef\u7f16\u7a0b\u6280\u672f </p> <p></p> <p></p> <ul> <li>PROM/ROM - read only memory<ul> <li>\u4e0d\u6539\u53d8\u9879\u7684\u5185\u5bb9\uff0c\u53ea\u7f29\u77ed\u76f8\u52a0\u7684\u9879\u6570</li> <li></li> </ul> </li> <li>PAL - Programmable Array Logic Devices<ul> <li>\u4e0d\u6539\u53d8\u9879\u6570\uff0c\u53ef\u4ee5\u6539\u53d8\u9879\u7684\u5185\u5bb9</li> <li>\u6709\u2f00\u7ec4\u53ef\u7f16\u7a0b\u7684ANDs\u548c\u56fa\u5b9a\u7684ORs\uff08OR\u7684\u6570\u91cf\u662f\u56fa\u5b9a\u7684\uff09\u76f8\u7ed3\u5408\uff0c\u2f00\u65e6\u8d85\u8fc73\u4e2a\u9879\u7684\u4e0e\u6216\u8005\u6216\uff0c\u5c31\u8981\u5229\u2f64\u4e2d\u95f4\u53d8\u91cf\u8fdb\u2f8f\u8fed\u4ee3</li> <li></li> </ul> </li> <li>PLA - Programmable Logic Array<ul> <li>\u9879\u6570\u53ef\u4ee5\u6539\u53d8\uff0c\u4e5f\u53ef\u4ee5\u6539\u53d8\u9879\u7684\u5185\u5bb9</li> <li>\u524d\u7aef\u5bf9\u53d8\u91cf\u6269\u5c55\u3001\u91cd\u7f16\u7a0b\uff0c\u6709\u2f00\u7ec4\u53ef\u7f16\u7a0b\u7684ANDs\u548c\u2f00\u7ec4\u53ef\u7f16\u7a0b\u7684ORs</li> <li>\u8f93\u51fa\u7aef\u4e0d\u2f4c\u2f00\u6b21\u91cd\u7f16\u7a0b\uff0c\u8f93\u51fa\u524d\u7684\u5f02\u6216\u76f8\u5f53\u4e8e\u76f4\u63a5\u8f93\u6216\u8005\u53d6\u53cd\uff0c\u53d6\u53cd\u53ef\u4ee5\u8fbe\u5230\u589e\u52a0\u8f93\u2f0a\u9879\u7684\u2f6c\u7684 - \u56e0\u6b64\u6211\u4eec\u5728\u8bbe\u8ba1\u7684\u65f6\u5019\u53ef\u4ee5\u753b\u5361\u8bfa\u56fe\u89c2\u5bdf\u4e92\u8865\u6027</li> <li></li> </ul> </li> <li>Lookup Table - \u67e5\u627e\u8868<ul> <li>\u901a\u8fc7\u8ba9\u6570\u636e\u6e90\u63a5\u5185\u5b58\uff0c\u5e76\u901a\u8fc7\u4fee\u6539\u771f\u503c\u8868\u5185\u7684\u503c\uff0c\u5373\u4fee\u6539\u5185\u5b58\u91cc\u7684\u503c\uff0c\u6765\u5b9e\u73b0\u6570\u636e\u6e90\u7684\u53d8\u5316\uff0c\u6765\u6539\u53d8 <code>MUX</code> \u7684\u884c\u4e3a\u3002</li> <li></li> <li>\u800c\u5728\u5b9e\u9645\u5de5\u827a\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5229\u7528a tree of smaller MUXes \u7ec4 \u6210 \u2f00 \u4e2a \u2f24 MUX\uff1a</li> </ul> </li> <li>FPGA<ul> <li>\u590d\u4e60ppt\u4e0a\u9762\u6ca1\u6709\u63d0\u5230\u8fd9\u4e2a\u8003\u70b9\uff0c\u6240\u4ee5\u6211\u5c31\u7c97\u7565\u6574\u7406\u4e86</li> <li></li> <li>CLB(Configurable Logic Block)<ul> <li>\u5927\u91cf\u5b58\u50a8 <code>LUT</code></li> </ul> </li> <li>SM(Switch Matrix)<ul> <li>\u53ef\u7f16\u7a0b\u7684\u4ea4\u6362\u77e9\u9635</li> </ul> </li> <li>IOB(Input &amp; Output Block)<ul> <li>\u53ef\u7f16\u7a0b\u7684\u8f93\u5165\u8f93\u51fa\u5355\u5143</li> </ul> </li> </ul> </li> </ul>"},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#_11","title":"\u52a0\u6cd5\u5668","text":"<p>Half Adder - \u534a\u52a0\u5668</p> <ul> <li>\\(S=X\\bigoplus Y\\)</li> <li>\\(C=XY\\)</li> </ul> <p>Full Adder - \u5168\u52a0\u5668</p> <p></p> <ul> <li>\\(S=X\\bigoplus Y\\bigoplus Z\\)</li> <li> <p>\\(C=XY+(X\\bigoplus Y)Z\\)</p> <ul> <li>carry generate - \\(XY\\)\uff0c\u8fdb\u4f4d\u4ea7\u751f\u9879</li> <li>carry propagate - \\(X\\bigoplus Y\\)\uff0c\u8fdb\u4f4d\u4f20\u64ad\u9879</li> </ul> </li> <li> <p>\u534a\u52a0\u5668\u548c\u5168\u52a0\u5668\u7684\u533a\u522b\u5c31\u662f2/3\u8f93\u5165\u7684\u533a\u522b\uff0c\u534a\u52a0\u5668\u4e0d\u63a5\u6536\u4e4b\u524d\u7684\u8fdb\u4f4d\u4fe1\u606f</p> </li> </ul> <p>Binary Ripple Carry Adder - \u884c\u6ce2\u8fdb\u4f4d\u52a0\u6cd5\u5668</p> <p></p> <ul> <li>\u5168\u52a0\u5668\u5b9e\u73b0\u7684\u884c\u6ce2\u8fdb\u4f4d\u52a0\u6cd5\u5668\u7684\u590d\u6742\u5ea6\u6bd4\u8f83\u9ad8\uff0c\u8fdb\u4f4d\u7684\u4f20\u9012\u975e\u5e38\u6f2b\u957f</li> </ul> <p>Carry Lookahead Adder (CLA) - \u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668</p> <ul> <li>\u4f7f\u7528GP\u7684\u5212\u5206\uff0c\u56e0\u4e3aGP\u7684\u503c\u90fd\u53ea\u4e0e\u5f53\u4e0b\u7684\u4e24\u4e2aXY\u8f93\u5165\u76f8\u5173\uff0c\u56e0\u6b64\u6211\u4eec\u5bf9\u8fdb\u4f4d\u4f20\u9012\u7684\u4f18\u5316\u53ea\u9700\u8981\u8003\u8651\u4e0a\u4e00\u4e2a\u8fdb\u4f4d\u7684\u63d0\u524d\u8ba1\u7b97\uff0c\u4e5f\u5c31\u662f\u8fed\u4ee3\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a</li> <li>\u53c8\u56e0\u4e3a\u5728\u5de5\u827a\u6620\u5c04\u7684\u8fc7\u7a0b\u4e2dfan-in\u7684\u9650\u5236\uff0c\u6211\u4eec\u91c7\u53d6Group Carry Lookahead Adder - \u6a21\u5757\u5316\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u7684\u65b9\u5f0f\uff0c\u7ec4\u5185\u63d0\u524d\u8fdb\u4f4d\uff0c\u7ec4\u95f4\u884c\u6ce2\u8fdb\u4f4d\uff1a</li> </ul>"},{"location":"%E6%95%B0%E9%80%BB%E6%9C%9F%E6%9C%AB/#_12","title":"\u4e8c\u8fdb\u5236\u8ba1\u7b97","text":"<p>\u8865\u7801\u8ba1\u7b97\uff1a\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u626b\u63cf</p> <ul> <li>\u590d\u5236\u6240\u6709\u6700\u4f4e\u6709\u6548\u76840</li> <li>\u590d\u5236\u7b2c\u4e00\u4e2a\u51fa\u73b0\u76841</li> <li>\u63a5\u4e0b\u6765\u6240\u6709\u4f4d\u53d6\u53cd</li> </ul> <p>\u5bf9\u6709\u7b26\u53f7\u6570\uff0c\u53cd\u7801\u548c\u8865\u7801\u7684\u8ba1\u7b97\u662f\u4fdd\u7559\u7b26\u53f7\u4f4d\uff08\u6700\u9ad8\u4f4d\uff09\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6700\u9ad8\u4f4d\u59cb\u7ec8\u4e3a1\uff08\u8868\u793a\u8d1f\u6743\u91cd\uff09\u3002</p> <p></p> <p>\u7b26\u53f7\u62d3\u5c55\uff1a\u5c06\u7b26\u53f7\u4f4d\u590d\u5236\u5230\u66f4\u9ad8\u4f4d\u3002</p> <p>\u65e0\u7b26\u53f7\u4e8c\u8fdb\u5236\u51cf\u6cd5\uff1a\u5148\u52a0\u4e0a\u88ab\u51cf\u6570\u7684\u8865\u7801\uff0c\u5982\u679c\u5f97\u5230\u7684\u8fdb\u4f4d\u662f1\uff0c\u5219\u4e0d\u7528\u4fee\u6539\uff1b\u5426\u5219\u53d6\u7ed3\u679c\u7684\u8865\u7801\u5e76\u52a0\u4e0a\u8d1f\u53f7\u4f5c\u4e3a\u6700\u7ec8\u7684\u7b54\u6848\u3002</p> <p>\u5e26\u7b26\u53f7\u7684\u4e8c\u8fdb\u5236\u6570\u8fd0\u7b97\uff1a\u5148\u5c06\u6240\u6709\u6570\u53d8\u6210\u5e26\u7b26\u53f7\u7684\u4e8c\u8fdb\u5236\u8865\u7801\u8fdb\u884c\u8fd0\u7b97\uff0c\u518d\u820d\u5f03\u6ea2\u51fa\u4f4d\u3001\u8f6c\u6362\u56de\u6765\u3002\u8fd0\u7b97\u65f6\u51cf\u6cd5\u53d6\u51cf\u6570\u7684\u65e0\u7b26\u53f7\u4e8c\u8fdb\u5236\u8865\u7801\uff08\u6211\u7684\u7406\u89e3\u662f\u5316\u51cf\u4e3a\u52a0\uff09\u8fdb\u884c\u8ba1\u7b97\u3002</p> <p></p>"},{"location":"%E7%A2%8E%E7%A2%8E%E5%BF%B5/","title":"\u4e00\u4e9b\u788e\u788e\u5ff5","text":"<p>TODO</p>"},{"location":"%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/","title":"\u79bb\u6563\u6570\u5b66\u6574\u7406","text":"<p>\u8d44\u6599\u5f62\u5f0f\u53ef\u80fd\u6bd4\u8f83\u4e30\u5bcc\uff08x \u5355\u51fb\u94fe\u63a5\u5373\u53ef\u4e0b\u8f7d\uff1a chapter1~6 chapter5&amp;8\u4f8b\u9898 chapter4&amp;9 chapter10 chapter11 chapter8.4</p>"},{"location":"%E7%BA%BF%E4%BB%A3/","title":"\u7ebf\u6027\u4ee3\u6570\u601d\u7ef4\u5bfc\u56fe","text":"<p>\u5355\u51fb\u94fe\u63a5\u5373\u53ef\u4e0b\u8f7d\uff1a chapter1 chapter2 chapter3 chapter4&amp;7 chapter5 chapter6 chapter8</p>"},{"location":"%E9%80%9A%E8%AF%86%E8%AF%BE%E5%BF%83%E5%BE%97/","title":"\u901a\u8bc6\u8bfe","text":""},{"location":"%E9%80%9A%E8%AF%86%E8%AF%BE%E5%BF%83%E5%BE%97/#30","title":"\u65b0\u5236\u5ea6\u7ecf\u6d4e\u5b66 \u901a\u8bc6\u6838\u5fc3\u8bfe\u7a0b 3.0\u5b66\u5206 \u5f20\u7fd4/\u7530\u4f20\u6d69\u8001\u5e08","text":"<p>3\u7bc7\u8bfb\u4e66\u7b14\u8bb0+\u671f\u672b\u53ef\u80fd\u662f\u8003\u67e5\uff08\u5c0f\u8bba\u6587\uff09/\u8003\u8bd5\uff0c\u8ba8\u8bba\u8bfe\u662f\u4e3e\u624b\u53d1\u8a00\uff0c\ud83c\ude1a\ufe0fpre\uff01\uff01\u800c\u4e14\u8bfe\u7684\u5185\u5bb9\u548c\u8ba8\u8bba\u9898\u90fd\u5f88\u6709\u610f\u601d \u5bf9\u6bd4\u5b8f\u7ecf\u6211\u89c9\u5f97\u8bfe\u7a0b\u5185\u5bb9\u4e0d\u662f\u5f88\u786c\u6838\uff0c\u8ba4\u771f\u5b66\u7684\u8bdd\u7ed9\u5206\u5e94\u8be5\u4e0d\u9519</p>"},{"location":"%E9%80%9A%E8%AF%86%E8%AF%BE%E5%BF%83%E5%BE%97/#15","title":"\u4e16\u754c\u79d1\u5b66\u6280\u672f\u53f2 1.5\u5b66\u5206 \u738b\u6dfc\u8001\u5e08","text":"<p>\u4e00\u7bc75000\u5b57\u8bba\u6587+\u4e00\u4e2a\u5f88\u591a\u4eba\u7684\u5c0f\u7ec4pre+\u671f\u672b\u5f00\u5377\u8003\uff0c\u6709\u82b1\u540d\u518c\u70b9\u540d \u5185\u5bb9\u53ef\u80fd\u6bd4\u8f83\u67af\u71e5\uff08\u5c31\u662f\u6280\u672f\u53f2\uff09\uff0c\u4f46\u662f\u53ef\u4ee5\u4e0d\u542c\u8bfe\uff0c\u671f\u672b\u8003\u5f88\u6c34\uff0c\u7ed9\u5206\u975e\u5e38\u597d</p>"},{"location":"%E9%80%9A%E8%AF%86%E8%AF%BE%E5%BF%83%E5%BE%97/#15_1","title":"\u7ecf\u6d4e\u6cd5\u7406\u8bba\u4e0e\u5b9e\u52a1 1.5\u5b66\u5206 \u5468\u9ece\u660e\u8001\u5e08","text":"<p>\u8fd9\u95e8\u8bfe\u5f88\u591a\u4eba\u63a8\u8350\uff0c\u63a8\u8350\u7406\u7531\u6211\u4e5f\u4e0d\u91cd\u590d\u4e86\uff0c\u90a3\u6211\u6765\u8bf4\u8bf4\u6211\u8ba4\u4e3a\u7684\u8fd9\u95e8\u8bfe\u6ca1\u6709\u90a3\u4e48\u63a8\u8350\u7684\u5730\u65b9\u5427\u3002 400\u4eba\uff08\u53ef\u80fd\u66f4\u591a\uff1f\uff09\u5927\u8bfe+\u51e0\u4e4e\u4e00\u573a\u8003\u8bd5\u5b9a\u7ee9\u70b9\uff0c\u5176\u5b9e\u7ed9\u5206\u662f\u6ca1\u6709\u90a3\u4e48\u6709\u4fdd\u969c\u7684\uff0c\u76f8\u6bd4\u522b\u7684\u4eba\u6570\u5c11\u3001\u8003\u6838\u65b9\u5f0f\u591a\u6837\u7684\u901a\u8bc6\u8bfe\uff0c\u5f88\u96be\u8bf4\u52aa\u529b\u4e86\u5c31\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u5f88\u4e0d\u9519\u7684\u7ee9\u70b9\uff0c\u81f3\u5c11\u8fd9\u95e8\u8bfe\u662f\u6211\u76ee\u524d\u4e3a\u6b62\u7684\u6700\u4f4e\u7ee9\u70b9\u6ca1\u6709\u4e4b\u4e00\uff08\ud83d\ude2d\u6211\u4e5f\u8ba4\u771f\u51c6\u5907\u8003\u8bd5\u4e86\ud83d\ude2d\uff0c\u800c\u4e14\u4e0d\u6b62\u6211\u4e00\u4e2a\u89c9\u5f97\u8fd9\u95e8\u8bfe\u7ed9\u5206\u6ca1\u5927\u5bb6\u8bf4\u7684\u90a3\u4e48\u597d\u7684</p>"},{"location":"%E9%80%9A%E8%AF%86%E8%AF%BE%E5%BF%83%E5%BE%97/#25","title":"\u89c6\u89c9\u5965\u79d8\u53ca\u5e94\u7528 2.5\u5b66\u5206 \u7ae0\u6d77\u519b\u8001\u5e08","text":"<p>\u5f3a\u63a8\uff01\uff01\u8bfe\u597d\u4e8b\u5c11\u7ed9\u5206\u597d\uff0c\u662f\u4f60\u51d1\u901a\u8bc6\u5b66\u5206\u5237\u7ee9\u70b9\u7684\u4e0d\u4e8c\u9009\u62e9\uff01\uff01 \u6bcf\u8282\u8bfe\u53ef\u4ee5\u611f\u53d7\u5230\u8001\u5e08\u5907\u8bfe\u7684\u7528\u5fc3\uff0c\u800c\u4e14\u7eaf\u7eaf\u901a\u8bc6\uff0c\u5f88\u597d\u5f88\u597d\u61c2\uff0c\u5185\u5bb9\u771f\u7684\u4e5f\u5f88\u6709\u610f\u601d\uff08\u773c\u7403\u7684\u6784\u9020\u3001\u5404\u79cd\u89c6\u9519\u89c9\u7684\u539f\u7406\u3001\u989c\u8272\u7684\u611f\u77e5\u7b49\u7b49\uff09\uff0c\u4e0a\u8bfe\u4f1a\u968f\u673a\uff08\u5176\u5b9e\u662f\u6309\u82b1\u540d\u518c\u987a\u5e8f\uff09\u70b9\u540d\u53eb\u4eba\u56de\u7b54\u95ee\u9898\uff0c\u95ee\u9898\u8d85\u7ea7\u7b80\u5355\uff08\u5212\u6c34\u4e5f\u53ef\u4ee5\u7b54\u51fa\u6765\u7684\u7a0b\u5ea6\uff09\uff0c\u6765\u4e0d\u4e86\u4e5f\u53ef\u4ee5\u76f4\u63a5\u9489\u9489\u627e\u8001\u5e08\u8bf7\u5047\uff0c\u8001\u5e08\u4eba\u8d85\u7ea7\u597d\u3002 \u8003\u6838\u65b9\u5f0f\u662f\uff08\u9996\u5148\u70b9\u540d\u56de\u7b54\u95ee\u9898\u8981\u5230\uff09+2\u4e2a\u5c0f\u7ec4\u4f5c\u4e1a\uff08\u4e00\u4e2a\u662f\u5ef6\u65f6\u6444\u5f71\u4e00\u4e2a\u662f\u4f3c\u52a8\u52a8\u753b\uff0c\u6bd4\u8f83\u8f7b\u677e\uff09+\u671f\u672b\u8003\u67e5/\u5f00\u5377\u8003\uff0c\u6211\u4eec\u662f\u8003\u67e5\uff0c\u6709\u51e0\u9053\u9898\u76ee\uff0cddl\u5728\u8003\u8bd5\u5468\u4e4b\u540e\u597d\u51e0\u5929\uff0c\u4e0d\u7ed9\u8003\u8bd5\u5468\u538b\u529b\uff01\uff01\uff08\u5439\u7206zhj\uff0c\u6211\u7231\u6b7b\uff09\u90fd\u662f\u4e0a\u8bfe\u8bb2\u8fc7\u7684\uff0c\u6211\u770b\u7740\u4e0a\u8bfe\u7684\u7b14\u8bb0\u5c31\u57fa\u672c\u4e0a\u90fd\u80fd\u505a\u51fa\u6765\uff08\u800c\u4e14\u6709\u4e9b\u4e0d\u7528\u5e72\u77aa\u773c\uff0c\u77e5\u9053\u80cc\u540e\u7684\u89c6\u89c9\u673a\u5236\u4e4b\u540e\u53ef\u4ee5\u7528ps\ud83e\udd2b\uff09\u3002 \u7ed9\u5206\u65b9\u9762\uff0c\u548c\u7ecf\u6d4e\u6cd5\u5bf9\u6bd4\uff0c\u6211\u89c9\u5f97\u8fd9\u79cd\u8bfe\u5c31\u662f\u52aa\u529b\u4e86\u5c31\u80fd\u4fdd\u8bc1\u9ad8\u7ee9\u70b9\u7684\u901a\u8bc6\u8bfe\u3002</p>"},{"location":"%E9%80%9A%E8%AF%86%E8%AF%BE%E5%BF%83%E5%BE%97/#1","title":"\u751f\u6001\u5b66\u5927\u5b9e\u9a8c \u535a\u96c5\u6280\u827a 1\u5b66\u5206 \u4f55\u78ca\u8001\u5e08","text":"<p>5\uff5e6\u6b21\u5b9e\u9a8c+\u4e00\u4e2a\u671f\u672b\u5c0f\u7ec4pre\uff0c\u5b9e\u9a8c\u62a5\u544a\u597d\u50cf4\u4efd\u5de6\u53f3\uff0c\u6709\u4e00\u4e2a\u7ebf\u4e0a\u7684\u5b9e\u9a8c\u4e0d\u7528\u5199\uff0c\u8fd8\u6709\u4e00\u4e2a\u751f\u6001\u74f6\u662f\u8bb0\u5f55\u8868\uff0c\u90fd\u662f\u7535\u5b50\u7a3f\u5c31\u53ef\u4ee5\u3002 \u5176\u5b9e\u6211\u89c9\u5f97\u4f5c\u4e3a\u4e00\u95e81\u5b66\u5206\u7684\u8bfe\u7a0b\uff0c\u4e8b\u60c5\u76f8\u5bf9\u6765\u8bf4\u662f\u6bd4\u8f83\u591a\u7684\uff08\u6ca1\u529e\u6cd5\uff0c\u8c01\u8ba9\u5b83\u535a\u96c5\u6280\u827a\u5462\ud83d\ude2d\uff09\uff0c\u505a\u5b9e\u9a8c\u4e0d\u80fd\u5212\u6c34\u800c\u4e14\u8fd8\u8981\u5199\u62a5\u544a\ud83d\ude2d\uff0c\u4f46\u662f\uff01\uff01\u8bfe\u7a0b\u5185\u5bb9\u5f88\u6709\u610f\u601d\uff0c\u4f1a\u8ba9\u6211\u4eec\u89c2\u5bdf\u5c0f\u7403\u85fb\u7684\u751f\u957f\u3001\u4ec0\u4e48\u690d\u7269\u7684\u5171\u751f\u7ed3\u6784\u7684\uff0c\u8fd8\u6709\u81ea\u5df1\u505a\u751f\u6001\u74f6\uff0c\u786e\u5b9e\u662f\u6709\u5185\u5bb9\u4e14\u6709\u8da3\u7684\u901a\u8bc6\u3002 \u800c\u4e14\u7ed9\u5206\u8d85\u7ea7\u597d\uff0c\u4f55\u78ca\u59d0\u59d0\u6700\u540e\u4e00\u8282\u8bfe\u662f\u8bf4\u201c\u7ed9\u5206\u4f60\u4eec\u662f\u5b8c\u5168\u4e0d\u7528\u62c5\u5fc3\u7684\uff0c\u80af\u5b9a\u8d85\u51fa\u4f60\u4eec\u7684\u9884\u671f\u201d\uff0c\u6700\u540e\u6211\u77e5\u9053\u7684\u8bfe\u53cb\u6ca1\u6709\u4f4e\u4e8e89\u7684\uff08\u795e\uff01\uff01 \u9898\u5916\u8bdd\uff1a\u6211\u4eec\u90a3\u4e2a\u73edpre\u597d\u5377\u597d\u5377\uff0c\u505a\u89c6\u9891\u5199\u6b4c\u7684\u90fd\u6709</p>"},{"location":"%E9%80%9A%E8%AF%86%E8%AF%BE%E5%BF%83%E5%BE%97/#2","title":"\u6253\u5f00\u827a\u672f\u4e4b\u95e8\u2014\u2014\u4e2d\u56fd\u53e4\u5178\u821e \u7f8e\u80b2+\u535a\u96c5\u6280\u827a 2\u5b66\u5206 \u6731\u6708\u8001\u5e08","text":"<p>\u662f\u6211\u8fd9\u4e2a\u5b66\u671f\u7684\u901a\u8bc6\u8bfe\uff0c\u8fd8\u6ca1\u6709\u7ed3\u8bfe\uff0c\u76ee\u524d\u6765\u8bb2\u4f53\u9a8c\u611f\u5b8c\u7f8e\uff0c\u60f3\u8c61\u4e00\u4e0b\u4e00\u4e2a\u957f\u5f97\u6f02\u4eae\u58f0\u97f3\u597d\u542c\u8df3\u821e\u597d\u770b\u7684\u7f8e\u5973\u59d0\u59d0\u6bcf\u5468\u6559\u4f60\u8df3\u821e\u4f60\u4f1a\u6709\u591a\u5f00\u6717\u5427\ud83e\udd70 \u6ca1\u6709\u989d\u5916\u7684\u8bfe\u5916\u4efb\u52a1\uff0c\u8bfe\u7a0b\u5185\u5bb9\u662f\u53e4\u5178\u821e\u57fa\u7840\u52a8\u4f5c3\u8282\u8bfe+\u671d\u4ee3\u821e\u8e48\u98ce\u683c4\u8282\u8bfe+\u4eba\u7269\u5851\u90204\u8282\u8bfe+\u9053\u5177\u821e\u8e48\uff08\u4e0a\u8fc7\u6735\u6735\u5341\u5927\uff01\u53e4\u5178\u821e\u7684\u6247\u5b50\u597d\u597d\u73a9\ud83e\udd24\uff093\u8282\u8bfe+\u671f\u4e2d\u671f\u672b\u5404\u4e00\u8282\u8bfe\uff0c\u57fa\u672c\u4e0a\u6bcf\u8282\u8bfe\u90fd\u6709\u4e00\u7ec4\u6210\u5957\uff0c\u800c\u4e14\u4e5f\u80fd\u5207\u5b9e\u5b66\u5230\u53e4\u5178\u821e\u5728\u8fd9\u65b9\u9762\u7684\u4e00\u4e9b\u8868\u8fbe\u3002 \u8bfe\u7a0b\u672c\u8eab\u662f\u79d1\u666e\u6027\u8d28\u7684\uff0c\u8001\u5e08\u8fd8\u662f\u66f4\u5e0c\u671b\u5e26\u7ed9\u6211\u4eec\u8fd9\u4e2a\u827a\u672f\u5f62\u5f0f\u5f62\u800c\u4e0a\u7684\u4e00\u4e9b\u4e1c\u897f\u800c\u975e\u52a8\u4f5c\u7ec6\u8282\uff0c\u4e0d\u8fc7\u524d\u534a\u5b66\u671f\u8fd8\u662f\u6709\u90a3\u4e48\u4e00\u70b9\u70b9\u96be\u5ea6\u7684\u3002 2024.5\u66f4\u65b0:\u7ed9\u5206\u5f88\u53ef\u4ee5\u554a\u554a\u554a\uff0c\u4f46\u662f\u6837\u672c\u4e0d\u591a\uff0c\u4e0d\u8fc7\u6731\u6708\u59d0\u59d0\u6700\u540e\u4e00\u8282\u8bfe\u4e5f\u516c\u5f00\u8bf4\u8fc7\u5b8c\u5168\u4e0d\u7528\u62c5\u5fc3\u7ed9\u5206\u7684\uff01</p>"},{"location":"%E9%80%9A%E8%AF%86%E8%AF%BE%E5%BF%83%E5%BE%97/#15_2","title":"\u82f1\u8bed\u540d\u5bb6\u6563\u6587\u8bc4\u6790 \u5916\u8bed\u901a\u8bc6 1.5\u5b66\u5206 \u5bff\u4f3c\u741b\u8001\u5e08","text":"<p>\u4ec0\u4e48\u7edd\u4e16\u597d\u8bfe\uff01\u8bfe\u7a0b\u4e8b\u60c5\u4e0d\u662f\u7279\u522b\u591a+\u9009\u7684\u7bc7\u76ee\u5f88\u597d+\u8001\u5e08\u672c\u8eab\u5f88\u597d\u5f88\u6709\u60f3\u6cd5+\u6bd4\u8d77\u5927\u82f1\u7b80\u76f4\u5c31\u662f\uff01\uff01 \u8bfe\u7a0b\u5185\u5bb9\u5e94\u8be5\u662f\u4e24\u5468\u4e00\u7bc7\u6563\u6587\uff0c\u4f1a\u6709\u4e00\u4e9b\u9488\u5bf9\u8fd9\u7bc7\u6563\u6587\u7684\u89e3\u8bfb\u3001\u8d4f\u6790\u548cpre\u3001\u5c0f\u4f5c\u4e1a\uff0c\u4f46\u662f\u6574\u4e2a\u5b66\u671f\u4e0b\u6765\u4f5c\u4e1a\u4efb\u52a1\u4e0d\u91cd\uff08\u672c\u6765\u5c31\u4e0d\u91cd\uff0c\u518d\u5bf9\u6bd4\u4e00\u4e0b\u5927\u82f1\u2026 \u9009\u7bc7\u5f88\u597d\uff0c\u6211\u611f\u89c9\u6536\u83b7\u771f\u7684\u633a\u5927\u7684\uff0c\u671f\u672b\u662f\u4e00\u7bc7\u82f1\u6587\u8bba\u6587\uff0c\u5c31\u662f\u9009\u5176\u4e2d\u4e00\u7bc7\u6587\u7ae0\u7684\u4e00\u4e2a\u9898\u76ee\uff08\u8001\u5e08\u4f1a\u7ed9\u4e00\u4e9b\u601d\u8003\u9898\uff09\u5c55\u5f00\u5199\uff0c\u5199\u4e4b\u524d\u53ef\u4ee5\u548c\u8001\u5e081v1\u4ea4\u6d41\uff0c\u611f\u89c9\u662f\u6211\u4e0a\u5b66\u671f\u5199\u5f97\u6700\u8ba4\u771f\u7684\u4e00\u7bc7\u8bba\u6587\u56e0\u4e3a\u771f\u7684\u6709\u8bdd\u8bf4\ud83d\ude2d \u7ed9\u5206\u8fd8\u53ef\u4ee5\uff08\u672c\u6765\u5c31\u8fd8\u53ef\u4ee5\uff0c\u518d\u5bf9\u6bd4\u4e00\u4e0b\u5927\u82f1\u2026</p>"},{"location":"%E9%80%9A%E8%AF%86%E8%AF%BE%E5%BF%83%E5%BE%97/#15_3","title":"\u82f1\u8bed\u53e3\u8bd1 \u5916\u8bed\u901a\u8bc6 1.5\u5b66\u5206 \u6881\u541b\u82f1\u8001\u5e08","text":"<p>\u4ec0\u4e48\u7edd\u4e16\u597d\u8bfe\uff01\uff01*2 \u662f\u8fd9\u4e2a\u5b66\u671f\u5728\u4e0a\u7684\u5916\u8bed\u901a\u8bc6\uff0c\u57fa\u672c\u4e0a\u662f\u53e3\u8bd1\u57fa\u7840\u77e5\u8bc6+5\u4e2a\u4e13\u9898\uff081\u8282learning\u4e00\u8282practicing\uff0c\u5176\u4e2dpracticing\u5c31\u662f\u4e3b\u52a8\u4e3e\u624b\u4e0a\u53f0\u73b0\u573aspeaking and interpreting\uff09 \u57fa\u672c\u4e0a\u6ca1\u6709\u4f5c\u4e1a\uff0c\u6700\u540e\u5c31\u662f\u4ea4\u4e00\u4efd\u81ea\u5df1practicing\u8bfe\u7a0b\u7684study report\uff0c\u7136\u540e\u671f\u672b\u8003\u5c31\u662f5\u5206\u949f\u73b0\u573a\u53e3\u8bd1\uff08\u8fd8\u6ca1\u8003\uff0c\u4f46\u662f\u6881sir\u8bf4\u4e0d\u7528\u51c6\u5907\uff0c\u88f8\u8003\u5c31\u53ef\u4ee5hhhh\uff09 \u6211\u611f\u89c9\u6bd4\u8d77\u5916\u8bed\u80fd\u529b\u7684\u63d0\u5347\uff08\u53ef\u80fd\u542c\u529b\u662f\u597d\u4e00\u70b9\u4e86\u5427\uff09\uff0c\u8fd9\u95e8\u8bfe\u7ed9\u6211\u5e26\u6765\u66f4\u591a\u7684\u662f\u4eba\u683c\u65b9\u9762\u7684\u5851\u9020\uff0c\u6881sir\u5728\u8bfe\u5802\u4e0a\u804a\u5230\u7684\u4e00\u4e9b\u8bdd\u9898\u3001\u4e00\u4e9b\u9f13\u52b1\u7684\u8bdd\u8bed\uff0c\u786e\u5b9e\u662f\u6559\u4f1a\u6211\u53bb\u505a\u4e00\u4e2a\u66f4\u52a0fearless\u7684\u4eba\uff0c\u53bb\u66f4\u591a\u7684\u8ffd\u6c42\u52c7\u6562\u800c\u975e\u5b8c\u7f8e\u3002 \u7ed9\u5206\u4e0d\u77e5\u9053\uff0c\u4f46\u662f\u6881sir\u8bf4\u201c\u8bfe\u7a0b\u6210\u7ee9\u8fd9\u4e2a\u4e8b\u60c5\u4f60\u4eec\u5b8c\u5168\u4e0d\u7528\u62c5\u5fc3\uff0c\u4f60\u8d1f\u8d23\u52aa\u529b\uff0c\u6211\u8d1f\u8d23\u4f60\u4eec\u7684\u6210\u7ee9\u201d\uff0c\u4e0a\u4e00\u4e2a\u8fd9\u4e48\u8bf4\u7684\u4eba\u662f\u751f\u6001\u5b66\u5927\u5b9e\u9a8c\u7684\u4f55\u78ca\u59d0\u59d0\u3002 2024.5\u66f4\u65b0:\u7ed9\u5206\u8d85\u7ea7\u597d\uff0c\u786e\u5b9e\u662f\u8eab\u8fb9\u6211\u77e5\u9053\u7684\u90fd\u662f89+</p>"}]}